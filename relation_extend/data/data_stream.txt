树是一种递归定义的包含根节点及子树的非线性结构
完全二叉树是除最后一层外每层节点数满且最后层靠左排列的树
集合是由具有某种特定性质的具体或抽象对象汇总成的集体
图的边是连接图中两个顶点的元素它表示顶点之间的某种关系或连接
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
图的边是连接图中两个顶点的线条表示关系
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点
顺序表的核心特征是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，支持随机访问，插入和删除
回溯法基础的定义的核心性质是在问题求解过程中通过深度优先搜索方式，系统地尝试所有可能的解路径，当发现当前路径无法得到有效解或已无法
指针是一种变量，其值为内存中另一个变量或对象的地址，通过它可以间接访问和操作该内存位置处的数据
插入排序是将未排序数据插入已排序序列合适位置的排序方法
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除
在树形结构中直接位于某节点之上的节点就是父节点
对于输入的同一组数据，经过某种算法处理后，每次得到的输出结果都保持一致这一特性就是稳定性的核心特征
映射是一种具有唯一性特点的关系，即对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应
数组是相同类型数据元素的有序集合
无向图的核心性质是任意两个顶点之间的边没有方向，即若顶点u和顶点v之间存在边，则从u到v和从v到u是同一条边
快速排序是对无序数组进行分治的排序算法，选择一个基准值将数组分为两部分，小于基准值的元素放在左边，大于基准值的元素放在右边，通过
邻接矩阵是用于表示图中顶点之间连接关系的矩阵，其中矩阵元素的值表示对应顶点之间是否有边相连以及边的相关属性（如权值等）
回路是图中一条起点和终点相同的路径且除起点和终点外路径上的顶点不重复
路径是在图或树等数据结构中从一个顶点或节点出发，沿着边或分支依次经过一系列顶点或节点最终到达另一个顶点或节点所形成的顶点序列
深度优先搜索的核心性质是从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步，继续探索其他路径，直到遍历完
冒泡排序是比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤，将最大元素逐步“冒泡”到数组末尾，每次比较和交换都能确定一个
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含
稳定性是指在数据结构中，对于相同的输入，算法多次执行时产生相同输出且不破坏原有数据的特性
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是每次比较都能排除一半的元素从而高效地找到目标值
简单排序是对给定数据序列，通过比较元素大小并进行交换等操作，将其按特定顺序（如升序或降序）排列，核心特征在于基于元素间的
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点是数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素
快速排序是通过一趟排序将数组分为两部分并递归排序
栈是一种限定仅在表尾进行插入和删除操作的线性表，其核心性质为后进先出，即最后进入栈的元素最先被弹出
父节点是在树形结构中位于某节点之上直接相连的节点 
数据的物理结构是指数据在计算机内存或存储设备中的实际存储方式，包括数据元素的存储位置以及它们之间的存储关系，其特点是具体体现数据在物理介质
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出，如同排队等待服务一样，新加入的元素排在
满二叉树是深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到最大值
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素
图的顶点是图结构中的基本元素，可通过边与其他顶点相连以构成图的拓扑结构并体现图的各种性质特点
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾
每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完 
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明
栈是一种后进先出的数据结构操作受限的线性表
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解这些子问题
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表
图的核心特征是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点表示事物，边表示事物之间的关系
数据物理结构指数据在计算机中存储方式及相互关系
回溯法是一种通过尝试所有可能的解空间路径来寻找问题解的算法策略，在搜索过程中一旦发现当前路径无法导致有效解则回溯到上一步重新选择路径
图的边是连接图中两个顶点的线其具有方向性或无方向性且在有向图中边有明确的起始顶点和终止顶点在无向图中边所连接
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则
交换排序是一种排序算法，其核心特征是通过不断比较和交换元素的位置，将无序序列逐步转换为有序序列，在排序过程中相邻元素或不相邻元素间
在树形结构中位于顶端没有前驱的节点是根节点
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法，其核心性质是通过多次迭代逐步改进近似解使其越来越
链表是通过节点指针依次连接存储数据的线性数据结构
动态规划入门是一种通过把原问题分解为相对简单的子问题，求解子问题并记录其解，从而避免重复计算，以自底向上方式高效解决复杂问题的
图的顶点是图结构中的基本数据元素，是图中各个节点的统称，用于表示图中的一个具体对象或实体，且具有唯一标识，其可以与其他顶点通过
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的
树的节点是包含数据元素及指向其子树的分支的基本数据结构单元
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此
叶子节点是树结构中没有子节点的末端节点
时间复杂度衡量算法执行时间随输入规模增长的变化
路径具有从起点开始按特定顺序依次经过一系列节点或位置最终到达终点的特点，其核心特征包括存在明确的起始点和终止点，且在两点之间有着特定的
根节点是树结构中的起始节点，没有父节点，是整个树结构的顶端节点，它处于树的最上层，是树中所有其他节点的祖先，从根节点
分治策略核心概念是将问题分解为子问题再求解合并
抽象数据类型具有数据和操作封装及独立于实现的特点
非线性结构的核心特征是其数据元素之间存在着一对多或多对多的关系，各个数据元素不再保持依次的线性顺序，而是呈现出较为复杂的层次或网状
无向图是顶点集及顶点间无方向边构成的图结构
穷举法是对可能是解的众多候选解按某种顺序进行逐一枚举和检验，并从中找出那些符合要求的候选解作为问题的解的方法
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程
回路是指在电路中，从电源的一端出发，经过若干个元件后又回到电源另一端的闭合路径，其特点包括能形成电流通路、各元件相互关联影响电流
分治策略将问题分解为子问题求解再合并结果
二分查找是在有序数组中通过不断将区间分成两部分并依据目标值与中间元素的比较结果来确定目标值所在位置的查找算法
子节点是树结构中直接连接在父节点之下的节点
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据和操作封装在一起，仅对外提供抽象接口来隐藏内部
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u
比较排序的核心特征是其排序过程主要基于元素之间的比较操作来确定元素的相对顺序从而实现排序
回溯法基础的特点的核心特征是在搜索解空间时通过深度优先搜索策略，按照某种规则依次尝试每一种可能情况，当发现当前选择无法得到有效解时就
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素
贪心策略是指在对问题求解时，总是做出在当前看来是最好的选择，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优
数据类型的核心特征是规定了数据的取值范围以及可对该数据执行的操作集合
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O
交换排序通过比较交换元素位置实现排序
算法效率是指算法执行所需要的时间和空间资源，时间效率通过算法执行基本操作的次数来衡量，空间效率通过算法执行过程中所需的额外空间来衡量
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序
迭代法是从初始值出发通过重复计算逼近结果的方法
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况，反映了算法执行时间与问题规模之间的关系特点
链表是通过指针连接节点存储数据且逻辑上相邻的线性结构
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
稳定性是指在数据结构中，若两个相等的数据元素在排序前后相对位置保持不变则该数据结构具有稳定性
有向图是一种由顶点集合以及顶点之间的有向边构成的数据结构，其中每条有向边都具有明确的方向，从一个顶点指向另一个顶点
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
树中所有结点的度的最大值就是树的度其核心特征在于它反映了树中各结点分支数目的最大情况体现了树结构的复杂程度
邻接矩阵是表示图的一种方式，其特点的核心性质包括若图中有边相连的两个顶点，对应矩阵元素为1，无边相连则为0，主对角线元素
根节点是树结构中的起始节点，其核心特征为没有父节点，是树中所有其他节点的直接或间接祖先，树从根节点开始逐步衍生出其他节点从而
堆是一种特殊的数据结构，其核心性质包括：父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值，并且堆具有完全
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目
加权图中边带有表示某种权重的数值
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示
循环链表是一种尾节点指向头节点形成循环的链表结构
二叉树是一种每个节点最多有两个子树的树形结构
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活高效地操作内存、实现动态数据结构
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点指向另一个顶点的方向
加权图是一种图结构，其中图的每条边都被赋予一个数值作为权值，这些权值可表示诸如距离、成本、容量等与边相关的某种度量
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式
单链表的核心性质是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针依次连接各个节点形成线性序列，且除了最后一个节点外每个
子节点是树结构中与某一节点直接相连且处于该节点下方层次的节点，其与父节点存在直接的层级关联关系，是树状结构中特定层级位置
引用是给已存在对象起的别名，与被引用对象绑定，对引用的操作等同于对被引用对象的操作，其核心性质包括具有与被引用对象相同的内存
子节点的核心性质是其与父节点存在特定关联且在树状结构等相关数据结构中有明确的位置和作用关系，是构成整体结构的重要组成部分
二叉树是每个节点最多有两个子树的树结构
线性表是一种具有线性结构的数据结构，其特点的核心特征为存在唯一的一个被称为“第一个”的数据元素，存在唯一的一个被称为“最后一个”的数据元素
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问
队列的核心性质是先进先出即先进入队列的元素先出队列
从根节点到最远叶子节点所经最长路径上边的数目为树的深度
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解从而得到全局最优解的一种策略
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法
二叉树是一种每个节点最多有两个子树的树形结构
非线性结构中元素关系不满足线性次序，存在一对多等情况
迭代法是一种不断用变量的旧值递推新值的求解方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据
选择排序是一种在未排序序列中找到最小（大）元素存放到排序序列起始位置，然后再从剩余未排序元素中继续寻找最小（大）元素，然后放到
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其平均时间复杂度为O(n)，空间复杂度为
堆排序的特点的核心性质是每个节点的值大于或等于其子节点的值（大顶堆）或每个节点的值小于或等于其子节点的值（小顶堆），并且它
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合具有确定性、互异性和无序性，即给定一个
在树结构中按特定规则确定目标元素是否存在的操作
有向图是一种图结构，由顶点集合和有向边集合组成，其中每条有向边是从一个顶点指向另一个顶点的有序对
树中各节点度的最大值为该树的度
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法
数组是存储相同类型数据的有序集合且内存连续
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法
图的顶点是图结构中构成图的基本元素，它可以代表各种实体，图中的边将顶点相互连接以表示它们之间的关系
叶子节点是一棵树中没有子节点的节点其核心性质为不存在任何子节点 
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应
邻接表的核心特征是通过为图中每个顶点建立一个单链表，链表中节点包含与该顶点相邻的顶点信息，从而直观地表示图的边关系，且
路径是图中顶点与顶点之间经过边的序列
单链表是由节点组成且每个节点只指向下一节点的线性表
比较排序是基于元素之间的比较来确定元素之间的相对次序从而将给定元素序列排成有序序列的排序方法
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历
树中一个节点的子树数目称为该节点的度，树中所有节点度的最大值就是树的度，其核心特征是反映树中节点分支情况以及整棵树
交换排序是通过比较序列中元素并交换逆序元素位置，将无序序列逐步调整为有序序列的排序方法
邻接表的核心性质是对于图中的每个顶点，都有一个链表来存储与该顶点相邻接的其他顶点
动态规划入门核心概念是通过分解问题存储子问题解来求解
操作效率特点核心概念是单位时间完成操作数量等情况
线性表的核心特征是具有有限个数据元素，且数据元素之间存在一对一的线性关系，即除第一个元素外每个元素有且仅有一个直接前驱，除最后一个元素
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和操作的语义，而不依赖于具体的实现细节
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否存在边以及边的相关属性（如权值等）
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向
顺序查找的核心性质是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程
算法效率是指算法执行所需要的计算机资源量，一般用时间复杂度和空间复杂度来衡量算法执行时间和占用空间随问题规模增长的变化情况
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树
算法效率特点核心概念是指其执行时间和资源消耗情况
无向图是一种图结构，其中边没有方向，即如果存在一条连接顶点A和顶点B的边，那么从顶点A到顶点B和从顶点B到顶点A
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证
非线性结构是一种数据元素之间存在着一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系
深度优先搜索的核心特征是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，优先访问深度方向上的节点
树的高度是从根节点到最远叶子节点所经过的最长路径上的边数或节点数，其核心特征在于体现了树从根到叶的最长延伸距离，
堆是一种特殊数据结构，满足特定父子节点关系特性
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数
比较相邻元素大小，大的往后放，重复此过程完成排序
冒泡排序是比较相邻元素大小并按规则交换位置的排序算法
循环链表是一种首尾相连的链表结构
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序
数据类型的定义的核心特征是对数据的取值范围以及在该数据上可进行的操作的明确规定
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序
树的节点的核心特征是具有一个数据元素以及零个或多个指向其子节点的指针
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式
在树结构中按特定规则找到目标节点的操作是树查找核心概念
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定关键字进行比较，直到找到匹配元素或遍历完整个序列为止的查找方法
树是一种分层数据结构有根且子节点唯一
映射是集合 A 到集合 B 的一种对应关系使 A 中元素在 B 中有唯一对应
穷举法的核心特征是将问题所有可能的情况都一一列举出来，然后根据条件进行检验，从中找出符合要求的解
递归基础是递归函数中最简单的情况，其特点是函数直接返回一个已知值而不再调用自身，它是递归过程的终止条件，确保递归不会无限进行下去
快速排序是对包含n个记录的序列进行排序，通过一趟排序将序列分为两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后分别对这
数据类型是一组值的集合以及定义在这组值上的一组操作的总称，其特点包括具有特定的数据值范围、有相应的存储形式、定义了针对该类型
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法
引用是C++中为已存在的变量起的一个别名，通过该别名可以对原变量进行操作，其定义方式为类型标识符 &引用名 = 已定义的变量
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -
叶子节点是指在树状结构中没有子节点的节点
数据的逻辑结构的核心性质是数据元素之间的逻辑关系，它独立于数据的存储方式，描述了数据元素之间的抽象关系而非具体的物理存储细节 
操作效率的定义的核心性质是指在完成特定任务或执行特定操作时，所体现出的资源利用效率、时间花费多少以及完成质量高低等方面的特性表现，
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图
存储结构是指数据元素及其关系在计算机存储器中的表示，它包括数据元素的表示和关系的表示两方面内容
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除第一个元素外，每个元素有且仅有一个直接前驱
时间复杂度是指算法执行时间随问题规模增长的变化趋势，它定量描述了算法执行时间与问题规模之间的渐近关系
父节点是在树形结构中，直接位于某个节点之上，与该节点存在直接关联且具有层级关系，能够通过特定的连接方式指向其下一层节点的节点
递归基础是递归算法中满足特定条件可直接得到结果而无需再次递归调用自身的初始情况定义
线性结构是一种数据元素之间存在一对一线性关系的数据结构，在该结构中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除第一个元素
操作效率核心概念是单位时间内完成操作的有效程度
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，
连通图是图中任意两个顶点之间都存在路径的图
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索
数据逻辑结构特点指数据元素间抽象关系不依赖存储
动态规划入门的特点是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而自底向上逐步求解原问题以得到最优解
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法
数据的物理结构是指数据在计算机中的存储方式，它包括数据元素的存储表示及其关系的表示，其核心特征是描述数据在计算机内存或存储设备中的实际存储
树的深度是指从根节点到最远叶子节点所经过的最长路径上的节点数
引用是给已存在的对象起一个别名，通过该别名可以访问其所引用的对象，引用一旦初始化便不能再引用其他对象，且引用必须在定义时初始化
简单排序是对数据序列进行比较和交换等操作，通过特定规则将无序数据逐步调整为有序状态的排序方法
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、容量等各种与边相关的信息
邻接表的核心性质是对于图中的每个顶点，用一个单链表存储其所有邻接顶点
简单排序的特点的核心性质是通过比较和交换元素位置逐步将无序序列转变为有序序列且操作较为直观和基础
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质是反映算法运行时所需的额外空间随输入规模增长的变化情况
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作
子节点是树结构等数据结构中，相对于某一节点而言，直接连接在该节点下方的节点
交换排序是通过元素间比较与交换位置来实现排序
空间复杂度指算法运行中所需存储空间随输入规模变化情况
递归基础是递归定义中确定初始元素或最简情况的部分，其核心性质是明确了递归过程的起始点或终止条件，使得递归能够从已知的简单情况逐步构建
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成一个具有层次关系的集合，其中有一个特定的节点称为根节点，其余节点被分为
数据逻辑结构特点指数据元素间抽象关系及组织形式
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组
迭代法是通过重复执行运算逐步逼近问题解的方法
单链表是节点通过指针依次连接形成的线性结构
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值
树结构中位于顶层、没有前驱的起始节点就是根节点
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，再将子
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作
父节点具有在树形结构中处于上一层级且与子节点存在直接关联关系从而能对其进行层级管理和引导的核心性质
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解的一种策略
无向图是一种图结构，其中任意两个顶点之间的边没有方向，即若存在一条连接顶点u和顶点v的边，则从u到v和从v到u
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组中间元素与目标元素比较，根据比较结果缩小搜索范围直至找到目标元素或确定
顺序表是用一组地址连续的存储单元依次存储数据元素
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾，重复此过程对整个数组进行排序的算法
比较排序是基于元素之间比较来确定元素相对次序从而进行排序的排序算法
时间复杂度是用来衡量算法执行时间随输入规模增长而增长的变化趋势的指标 其核心性质包括 它忽略算法中执行时间较短的部分 专注于随着输入规模
从根节点到最远叶子节点所经最长路径上的节点数即树的深度
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标条件后回溯到前一步继续探索其他路径
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值都小于该节点的值，且右子树中的所有节点的值都大于该节点的值
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向）
抽象数据类型的核心特征是将数据和数据上的操作封装在一起，对外提供统一的接口，隐藏数据的具体表示和操作的具体实现细节，使得使用者只需关注接口
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点
数据类型定义的核心概念是对数据的种类及操作的规定
堆是一种特殊的数据结构，它是一棵完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆）或每个节点的值都小于或
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在着一对一的线性关系
子节点是树结构中相对于父节点而言的节点，其核心特征包括：它直接隶属于某个父节点，是父节点分支出来的节点；在树的层级关系中处于
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现
非线性结构中各数据元素之间的关系不再是一对一的线性关系，存在一对多、多对多等复杂关系
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希
完全二叉树的核心特征是其节点的分布除了最后一层外是满的，且最后一层的节点从左到右依次排列没有间断
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归
线性表的核心性质是具有相同数据类型的n个数据元素的有限序列，有唯一的头元素和尾元素，除头元素外每个元素有且仅有一个直接前驱
完全二叉树是除最后一层外每层节点数满且最后层节点靠左排列的树
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，通过递归或栈
存储结构核心概念是数据元素及其关系的存储方式
算法效率的特点是指算法执行时间随问题规模增长的变化趋势及所需资源消耗情况等特性
空间复杂度是算法运行中所需的额外空间随输入规模变化情况
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而变化的趋势
稳定性的核心性质是对于输入数据中的相等元素，在经过算法处理后，它们的相对顺序保持不变
数组的核心性质是具有固定大小且元素存储在连续内存位置，通过下标可以直接访问和修改数组中的元素
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也
算法效率的定义的核心性质包括时间效率和空间效率，时间效率指算法执行时间随问题规模增长的变化情况，空间效率指算法执行过程中所需的存储空间随问题
邻接矩阵是一种用于表示图的矩阵，其中行和列分别对应图的顶点，矩阵元素表示对应顶点之间是否存在边，若存在则为1，不存在则为
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点信息
简单排序是对数据序列进行比较和交换等操作以逐步将元素按特定顺序排列，其特点是算法相对直观、易于理解和实现，时间复杂度通常较高，一般适
图的边是连接图中两个顶点的一种关系或连线
穷举法是对所有可能情况逐一测试以求解问题的方法
链表是一种线性数据结构，其核心性质为每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关，它包括集合、线性结构、树形结构和图状结构等不同类型各有其独特
二叉树遍历按特定顺序访问节点以全面了解结构
插入排序是逐个将元素插入已排序序列合适位置的排序方法
线性查找是按顺序逐个检查数据元素直至找到目标元素
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
树中一个节点的子树数目称为该节点的度，树中所有节点度的最大值称为树的度
根节点是树形结构起始点无父节点有子节点
动态规划入门是一种用于解决优化问题的算法策略，其核心特征是将问题分解为相互重叠的子问题，通过求解子问题并记录其解，避免重复计算，
冒泡排序的核心特征是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序会将未排序数据中最大（或最小）的元素“冒泡”到
树的节点是树结构中的数据元素，包含数据项及指向其子树节点的链接
在树形数据结构中若存在节点A，节点B直接连接到节点A且节点A可通过某种遍历方式找到节点B，那么节点A就是节点B的父节点
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树
数组是由相同类型的数据元素组成的、在内存中按顺序存储的有限序列
交换排序是一种排序算法，其核心特征是通过不断比较序列中的元素，并在满足特定条件时交换元素的位置，从而逐步将序列调整为有序状态
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构其中边是没有方向的顶点之间的连接关系
顺序查找是从线性表的一端开始，依次将关键字与表中元素进行比较，直到找到与关键字相等的元素或遍历完整个表的查找方法
路径是图中两个顶点之间的顶点序列且序列中相邻顶点之间存在边
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，
递归基础是递归算法中满足特定条件的最简情况，在该情况下递归调用不再继续，而是直接给出一个确定的结果
深度优先搜索是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复此过程直到
数组是相同类型数据元素的有序集合
无向图是顶点集及顶点间无方向边构成的图结构
子节点是树结构或图结构中直接连接到某个父节点的下一级节点，具有与父节点直接关联、在层级关系中处于父节点之下的位置关系等特点
连通图的核心特征是图中任意两个顶点之间都存在路径能够相连
简单排序的特点的核心特征是比较和交换元素的位置以实现排序，其操作相对直接和基础，通常基于相邻元素的比较与交换来逐步将无序序列转变为
空间复杂度的核心性质是衡量算法在运行过程中所需要的额外空间随输入规模增长的变化情况
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过存储结构来体现等方面
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，从而逐步缩小查找范围，直到找到目标值或确定目标值
递归基础的核心特征是存在一种简单情况，在这种情况下递归函数可以直接返回一个确定的结果而无需再次调用自身
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法
集合是由确定的元素所构成的整体
穷举法的核心特征是将问题所有可能的情况逐一列举出来，然后根据条件进行检验，从中找出符合要求的解
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置，没有分支延伸出去，是数据存储或信息表示的最终单元，在一些应用场景
二分查找的核心特征是在一个有序数组中，通过不断将数组分成两部分并判断目标值所在的部分，从而逐步缩小查找范围以找到目标值
队列是一种特殊的线性表，其核心性质为只允许在一端进行插入操作，另一端进行删除操作，遵循先进先出原则
简单排序是对数据元素进行比较和交换操作以实现排序，其核心特征是算法逻辑相对直接，通常基于相邻元素的比较和位置交换来逐步将无序序列转变为
数据类型的特点是其具有特定的取值范围、存储方式、操作集合以及语义解释等，这些特性共同决定了数据在程序中的表示和使用方式
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机
树的高度是从根节点到最远叶节点的最长路径长度
稳定性是指在数据结构中，对于相同的输入，排序算法产生的输出序列中相等元素的相对次序保持不变的特性
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图的顶点信息，边表中存储与每个顶点相邻接的顶点
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小、相互独立且与原问题形式相同的子问题，然后分别求解这些子问题，最后
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是
路径是图中顶点与顶点之间经过边的序列
交换排序是一种通过不断比较和交换元素位置来将无序数据序列调整为有序序列的排序方法
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征在于描述算法执行期间所需的额外空间随输入规模增长的变化情况
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法其特点包括能从一个初始值开始逐步迭代接近目标值
图的边是连接图中两个顶点的线
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点
二叉树是一种每个节点最多有两个子树的树形结构
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作
子节点是树状结构中直接位于某一节点下方的节点
空间复杂度指算法运行中所需的额外空间随输入规模变化情况
初始状态相同算法多次运行结果相同则具稳定性
树的度是指一棵树中所有结点的度的最大值
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
简单排序是按特定规则依次比较交换元素位置的排序方法
在树形结构中，位于树的最顶端没有前驱节点的节点就是根节点
顺序表是一种将元素顺序存储在连续内存空间中的线性表
动态规划入门的特点的核心性质是通过将问题分解为相互重叠的子问题，利用子问题的解来避免重复计算，从而高效地求解原问题
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，不断比较中间元素与目标值，若中间元素等于目标值则查找成功，若中间元素
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以访问和操作其所指向的变量
非线性结构是一种数据元素之间存在一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系
线性表是数据元素有序排列且有一对一关系的序列
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次
递归基础是递归定义中的一种情况，其核心特征是存在一种或多种简单、直接可解的基础情况，这些基础情况不需要通过递归调用自身来求解，而是能够直接
稳定性指系统受扰动后能恢复或趋向原有状态的特性
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点
时间复杂度的核心特征是用于描述算法执行时间随输入规模增长的变化趋势，它忽略了常数项系数低阶项和系数，重点关注算法执行时间随输入规模增长
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
回溯法基础的核心性质是在问题求解过程中通过深度优先搜索尝试所有可能解并在搜索过程中利用约束条件和目标函数对解进行筛选和剪枝以找到
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
栈具有后进先出的特点即最后进入的先出来
数据的逻辑结构是指数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，其核心特征在于体现数据元素之间
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序
顺序查找的核心特征是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列
迭代法是一种不断用变量的旧值递推新值，通过重复执行某一运算过程，从初始值出发逐步逼近问题解的数值计算方法
冒泡排序比较相邻元素大小，将较大元素交换到右侧，每一轮把最大元素“冒泡”到数组末尾，重复此过程直到整个数组有序
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置
路径是连接起点与终点的具有特定走向的路线
完全二叉树除最后一层外每层节点数满且最后一层靠左排列
快速排序的核心特征是通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后对这两部分分别
树的高度是从根节点到最远叶节点的最长简单路径上的边数
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败
比较排序是基于元素之间的比较来确定元素的相对次序从而实现排序，其核心性质为排序过程仅通过元素间的比较操作来决定元素在有序序列中的最终位置
回溯法是一种通过系统地尝试所有可能的解，并在发现当前解不符合条件时回溯到上一步，继续尝试其他可能性，以找到问题的所有解或最优解的
非线性结构中至少存在一个数据元素有两个或两个以上的前驱或后继且各数据元素之间的逻辑关系不能用线性序列简单描述
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数，它反映了树的层次结构深度，不同类型的树其高度因节点
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次
堆是一种满足特定父子节点关系的完全二叉树数据结构
数据类型是对数据的种类及性质等的规定
线性结构的核心特征是数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个前驱和一个后继
存储结构特点包括数据元素存储及关系呈现方式等
有向图是边具有方向的图，顶点间连接有特定指向
平衡二叉树的核心特征是其每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树
回路是图中从某顶点出发又回到该顶点的路径
队列是一种特殊的线性表，其核心性质是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性
双向链表是一种链表数据结构，其每个节点除了包含数据和指向下一个节点的指针外，还包含一个指向前一个节点的指针，从而可以在两个方向上
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足
数据类型的定义具有一组值以及定义在这组值上的一组操作的核心性质
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素
图是由顶点集和顶点间的边集组成的数据结构，其中顶点是图中的数据元素，边是顶点之间的连接关系
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上
二分查找是在一个有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，根据比较结果在左半部分或右半部分继续查找，直到找到
在树形结构中，一个节点若存在直接连接它且处于更高层级的节点，则该更高层级的节点就是此节点的父节点
算法效率特点核心概念是衡量算法执行时间与资源消耗
归并排序将序列分治后合并，使子序列有序以成有序序列
邻接表是一种用于表示图的数据结构，它的特点的核心性质包括对于图中的每个顶点都有一个链表，链表中存储了与该顶点相邻接的其他顶点
交换排序是一种排序算法，其核心性质是通过比较元素并交换不满足顺序要求的元素位置，逐步将无序序列转换为有序序列
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机
树中所有结点的度的最大值就是树的度
数组是由相同类型的数据元素按一定顺序排列而成的有限序列
路径的核心特征是在特定环境或系统中，连接起点与终点的一系列有序步骤或轨迹，它明确地规定了从起始位置到目标位置的行进方式与顺序，
数据类型的核心特征是定义了一组值以及可施加于这些值上的一组操作
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点
数据类型具特定取值范围、操作及存储方式特点
完全二叉树是除最后一层外每层节点数满且最后层节点靠左排列的树
堆排序是利用堆结构进行排序的一种排序算法
树的节点包含数据且有指向子节点的链接
邻接表的核心特征是用链表来表示图中顶点的邻接关系，每个顶点对应一个链表，链表中存储与该顶点相邻接的其他顶点
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，
存储结构是指数据元素及其关系在计算机存储器中的表示形式
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标条件后回溯到前一步并继续探索其他
算法效率的定义的核心特征是衡量算法执行时间和占用空间随输入规模增长的变化情况以评估算法优劣
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的
图的边是连接图中两个顶点的元素，它具有明确的两个端点即顶点，且在有向图中边有方向而无向图中边无方向
操作效率的核心特征是在特定的操作过程中，能够以最少的时间、资源和精力投入，实现最大程度的产出，同时保证操作的准确性和稳定性，并且能够
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻
稳定性的特点的核心性质是在某种条件下系统或事物能够保持其原有状态或特性不发生显著变化
数据类型是一组值的集合以及定义在这组值上的一组操作的总称
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点被
分治策略的特点是将一个规模较大的问题分解为若干个规模较小的子问题，分别求解这些子问题，然后将子问题的解合并得到原问题的解
子节点是树结构中直接被另一个节点（父节点）所连接且处于其下一层级的节点
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的顶点，具有存储空间较小、便于查找
简单排序的核心性质是通过比较和交换元素的位置，将无序序列逐步转化为有序序列，每次操作都能使序列向有序状态靠近一步
存储结构的特点是指数据在计算机内存或外存中存储方式所具有的诸如数据元素间逻辑关系的表示方法、数据元素的存储方式以及数据元素间关系的
快速排序是对无序数组通过选择一个基准值将数组分为两部分，小于基准值的元素在左边大于基准值的元素在右边，再对左右两部分子数组分别
集合是由确定的不同对象所组成的整体
算法效率是指算法执行所耗费的时间和空间资源，反映算法解决问题的快慢程度和对资源的利用情况
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值
集合是具有某种特定性质的具体或抽象的对象汇总
树的节点是树结构中的基本组成部分，具有一个数据元素以及零个或多个指向子节点的指针
满二叉树的核心性质是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点
比较排序通过元素间比较确定元素相对顺序来排序
树的查找的核心特征是从树的根节点开始，依据特定的比较规则沿着树的分支进行搜索，以确定目标元素是否存在于树中，若存在则返回
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法
迭代法是通过不断重复运算逐步逼近问题答案的方法
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则
子节点是树结构或图结构等数据结构中，直接与某个特定节点相连且处于其下一层级的节点，具有与父节点存在特定连接关系并共同构成相应
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
穷举法的核心性质是对问题所有可能的情况进行逐一列举和检验以找到符合条件的解
叶子节点的核心特征是没有子节点，它处于树状结构的末端，是数据结构中不再有分支的节点
树的度是指一棵树中，其节点拥有子树的最大数目
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重反映了边的某种属性或代价等，图中顶点之间通过带权重的边相连
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即第i层有2^(
广度优先搜索按层次依次扩展节点先访问距离起始点近的
树的深度是从根节点到最远叶子节点的最长路径长度
父节点的核心特征是在数据结构的树形结构中，对于某个节点而言，其直接连接并位于该节点之上的节点所具有的关键特性，这些特性使得该父
比较排序是一种排序算法，其核心性质是通过元素间的比较操作来确定元素间的相对次序从而实现排序
顺序表是用一组地址连续的存储单元依次存储数据元素
交换排序是一种排序算法，其核心性质是通过比较元素并交换位置，逐步将无序序列转变为有序序列
将问题分解为子问题求解后合并子问题解以获原问题解
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素
比较排序是基于元素之间的比较来确定元素之间的相对次序从而将给定序列按升序或降序排列的排序方法
连通图是图中任意两个顶点之间都存在路径的图
算法效率是指算法执行所需要的时间和空间资源的量度，包括时间复杂度和空间复杂度来衡量算法在不同输入规模下的运行效率和资源消耗情况
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法
子节点是树结构中直接连接在父节点之下的节点
子节点是树结构中某一节点直接连接的下一层节点
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，并且栈的操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和
回溯法基础特点是按条件深度优先搜索解空间找可行解
父节点是在树形结构中，其直接有子节点相连且处于比子节点更高层次的节点
每次从未排序序列中选最小元素放已排序序列末尾
分治策略是将问题分解为子问题求解再合并结果
树的查找是在给定的树结构中寻找特定元素的操作过程
回溯法基础的定义的核心特征是在问题的解空间树中，按照深度优先策略从根节点出发搜索解，当发现当前节点不满足求解条件时就回溯到
指针是存储变量内存地址的变量用于间接访问数据
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心性质是按顺序逐个
引用的核心特征是为对象起一个别名，使得该别名与被引用的对象绑定，对别名的操作等同于对被引用对象的操作，通过引用可以在不同的代码
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过计算机内存中的存储单元来体现等方面
无向图是由顶点集和边集组成的图其中边无方向
树是一种分层结构有根节点且子节点唯一的非线性数据结构
在树形结构中，若存在一个节点，使得另一个节点通过特定关系直接连接到该节点，那么这个被连接的节点就是另一个节点的父节点
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
完全二叉树是一种除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树
树的查找是在给定的树结构中，从根节点开始，按照特定规则沿着树的分支进行搜索，以确定是否存在特定数据元素的操作过程其核心特征是
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法，其特点包括能利用已有的计算结果进行下一步
回路是在图中从某顶点出发又回到该顶点的路径
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的开始元素和终端元素，且除
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心性质包括有且仅有一个开始节点和一个终端节点，除开始节点外每个节点有且仅有一个前驱
堆是一种特殊的数据结构，它是一棵完全二叉树，且每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法，其核心性质是对问题的所有可能解进行全面无
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表
树的查找是基于树这种数据结构，通过特定规则在树中定位特定元素以确定其是否存在及获取相关信息的操作过程，具有从根节点开始逐层比较等
引用是给已存在对象起的一个别名，二者共享内存
空间复杂度指算法运行中所需的额外空间随输入规模变化情况
比较排序是通过元素间比较确定其相对顺序的排序方法
树中一个节点的子树个数称为该节点的度，树中节点的最大度数称为树的度
空间复杂度的核心特征是算法在运行过程中临时占用存储空间大小的变化情况与输入规模之间的关系
加权图是一种图结构，其中每条边都被赋予一个权重值，权重值用于表示边的某种属性或代价，图中的顶点通过带权重的边相互连接
非线性结构中数据元素之间的关系不满足线性关系
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，而右子树中的所有节点的值都大于该节点的值
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底
栈具有后进先出的特点，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出 
图中顶点是构成图的基本元素用于表示事物等
树中各结点度的最大值为树的度的核心概念
算法效率特点核心概念是执行时间和资源消耗情况
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构
稳定性的特点的核心性质是在系统受到外界干扰后仍能保持原有状态或恢复到原有状态的能力
路径的核心特征是其能够在某个空间或结构中明确地标识出从一个起始点到一个终点的连续轨迹或通道，具有方向性且能反映出从起点到终点
穷举法是一种通过对所有可能的情况进行逐一列举和检验，从而找出满足特定条件的解决方案的数据处理方法
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法
回路是图中一条起点和终点相同的路径且其长度大于等于 1 并且路径上除起点和终点外的顶点不重复遍历
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点
树的深度是从根节点开始自顶向下逐层累加直至叶节点所经过的最大层数
双向链表每个节点有前驱和后继指针可双向遍历
稳定性的核心性质是在排序过程中，相等元素的相对次序保持不变
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈
树的查找是在给定的树结构中，根据特定的条件或键值，从根节点开始，按照树的遍历规则逐步寻找满足条件的节点的操作过程
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树
栈是后进先出，只在一端进行数据操作的数据结构
叶子节点是树结构中没有子节点的节点
数据物理结构指数据在计算机中存储方式及相互关系特点
非线性结构中数据元素之间存在非一对一的关系
递归基础是递归算法中存在的一种终止条件，当满足该条件时递归不再继续进行，直接返回一个确定的简单结果
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序
根节点是树结构中的起始节点，它没有父节点，是整个树的入口和基础，所有其他节点都直接或间接连接到根节点，它在树的层次结构
在树结构中，没有子节点的节点即为叶子节点
每趟从待排序元素中选最小（大）值与未排序首位交换
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和操作的实现细节封装起来
堆排序是一种选择排序，它将数据组织成堆结构，通过不断调整堆顶元素与其他元素的关系，将最大或最小元素逐步移到堆的末尾，从而
邻接矩阵是用于表示图的一种矩阵，其核心特征包括：是一个方阵，行数和列数与图的顶点数相同；矩阵元素的值表示对应顶点之间是否有
加权图是一种图结构，其中每条边都被赋予一个权重值，用于表示该边的某种属性或代价
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中
队列是一种先进先出，元素按顺序进出的数据结构
邻接表的核心性质是对于图中的每个顶点，用一个单链表来存储与该顶点相邻接的所有顶点
树中包含数据及指向子节点关系的基本单元是节点
从根节点到最远叶节点最长简单路径上边的数目即树的高度
操作效率是指在完成特定任务或一系列操作过程中，单位时间内所取得的有效成果或产出的多少，体现了在资源有限的情况下，通过合理的流程、
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应
数据的物理结构是指数据在计算机内存或存储设备中的存储方式，包括数据元素的存储及其关系的表示
树是一种分层数据结构包含根节点和子节点
指针具有能直接访问内存地址、可灵活操作内存数据、能提高程序运行效率、但使用不当易引发内存错误如悬空指针、野指针等导致程序崩溃或出现未
在树形结构中位于顶端没有前驱的节点就是根节点
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中
图的边是连接图中两个顶点的元素具有能明确表示顶点之间关系的核心性质
路径是连接起点与终点具有一定走向的线路
连通图中任意两点之间都存在路径可相互到达
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势且忽略常数项低阶项等非主导因素以反映算法效率
在树形结构中一个节点的子节点所对应的上一级节点就是该节点的父节点
回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中除起始顶点外其他顶点不重复，同时具有从某一
引用是给已存在的变量起一个别名，对引用的操作实际上就是对其所引用变量的操作，其核心性质包括：引用必须在定义时初始化，且初始化后不能
递归基础是递归算法中满足终止条件可直接得出结果而无需再次递归调用自身的初始情况
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，其核心性质包括数据封装将数据和操作封装在一起，信息隐蔽对外隐藏
树的高度是从根节点到最远叶节点的最长简单路径上边的数目
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别对这些子
队列是一种先进先出、按顺序操作的数据结构
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以间接访问其所指向的变量
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希
树的高度的核心特征是从树的根节点到最远叶子节点之间最长简单路径上的边数或节点数所代表的数值，它反映了树在垂直方向上
指针是一种变量，其值为内存中另一个变量或对象的地址，通过该指针可以访问和操作其所指向的内存位置的数据
树中所有结点的度的最大值就是树的度，它反映了树中各结点分支情况的最大程度，体现了树结构中分支数量的总体特征
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而解决复杂问题的算法策略
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到
满二叉树的核心特征是一棵深度为k且有2^k - 1个节点的二叉树，其每一层上的节点数都达到最大值，即第i层
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解的一种策略
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
比较排序是基于元素之间的比较来确定元素的相对顺序从而进行排序的算法，其核心特征是通过比较元素大小来逐步构建有序序列，在排序过程中主要依靠
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
栈的核心性质是后进先出，即最后进入栈的元素最先被弹出
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
深度优先搜索是一种在搜索过程中沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索策略
指针是内存地址的变量，用于间接访问和操作数据
集合是由确定的不同对象所构成的整体
二叉树遍历是按特定顺序访问其所有节点的操作
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
穷举法是一种通过对问题所有可能情况进行逐一列举和检验，从而找出符合条件的解的解题方法
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，将数据的表示和操作的实现细节封装起来
图的边是连接图中两个顶点的线，其具有方向或无方向，且可有权值或无权值，边是图结构中表示顶点之间关系的重要组成部分
叶子节点是树结构中没有子节点的节点
二分查找是在有序数组中通过不断将区间分成两半来确定目标值位置，每次比较中间元素与目标值，若相等则找到，若目标值小则在左半
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则
穷举法是对所有可能情况逐一检验以求解问题
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后对左右
数据物理结构指数据在存储设备上的存储方式特点
在树形数据结构中若存在节点A和节点B，当节点B直接连接于节点A且节点A为父节点时节点B就是节点A的子节点
存储结构的特点的核心性质包括数据元素的存储方式以及数据元素之间关系的表示方式
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质
数组是具有相同数据类型元素的有序集合且内存连续
栈是一种后进先出的数据结构，其核心特征在于元素的进出遵循特定顺序，即最后进入栈的元素最先被取出，而最先进入栈的元素最后被取出
递归基础是递归定义中的一部分，其核心特征是明确给出递归终止的条件或初始值，即确定在某个特定情况下递归不再继续，而是直接给出结果，这个特定情况
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表
图的边是连接图中两个顶点的线或弧表示的二元组
时间复杂度衡量算法执行时间随输入规模增长的变化
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分
数组是一种有序的数据集合，其特点的核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，可通过下标进行随机访问，内存空间的分配是连续
路径是图中两个顶点之间的顶点序列（若为有向图则是有向边序列），包含起点终点且满足从起点按顺序经中间顶点可到达终点，
栈是一种特殊的线性表，其核心特征在于它具有后进先出的特性，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的
树的高度是从根节点到最远叶节点的最长简单路径上的边数
引用的核心特征是它为对象起了一个别名，使得通过引用操作就如同直接操作该对象本身一样，对引用的修改会直接反映到其所引用的对象上，
操作效率的定义的核心性质是指在完成特定任务或执行特定操作时，所体现出的在时间、资源利用等方面的高效程度，包括以较少的时间、
父节点是在树形结构中直接位于某个节点之上的节点
图的边的核心性质是连接图中两个顶点且具有方向或无方向等特性以构建图的结构关系
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点
动态规划入门是一种通过将问题分解为重叠子问题并利用子问题解来高效求解复杂问题以优化计算过程的方法特点
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且
循环链表是一种首尾相连的链表结构
回路是在图中从一个顶点出发，沿着边经过若干顶点后又回到该起始顶点所形成的路径且路径中各顶点和边均不重复（在有向图
递归基础是递归算法中满足特定条件可直接得出结果无需再次递归调用的初始情况或简单条件定义
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后
比较相邻元素大小，大的往后冒，重复此过程完成排序
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关且反映算法运行时所需的额外空间随着输入规模增长的变化
路径是由顶点和相邻顶点序偶构成的边所形成的序列，具有连通性、有序性、唯一性（若图中存在从顶点A到顶点B的路径，则该
迭代法是一种通过从一个初始估计出发，利用迭代公式逐步逼近问题精确解的方法其核心性质是通过不断重复相同的计算步骤来逐渐改进近似解
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表
选择排序是一种简单直观的排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未
归并排序是将数组分成子数组分别排序再合并的排序方法
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有唯一父节点且是其分支所指向的节点
加权图是边带有代表某种数值的权的图
抽象数据类型具有数据抽象和数据封装的特点，其核心性质包括数据对象集的定义、数据对象集上的操作集的定义以及对操作集的封装，使得使用者
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点
数组的核心性质是具有相同数据类型的一组数据元素按顺序存储在连续的内存空间中，可以通过下标来唯一地访问其中的元素
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即如果顶点u和顶点v之间存在一条边，那么从
根节点是树结构中没有前驱节点且位于树顶端的特殊节点
图中参与构建边且具有特定标识或属性的基本元素是顶点
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次
数组是由相同类型的数据元素组成的有限序列，具有顺序存储、元素类型一致、通过下标唯一标识元素以及可根据下标进行随机访问等核心性质
子节点是树结构或图结构中，与某个特定节点直接相连且处于该节点下方层级的节点，其具有与父节点存在明确连接关系并在结构层次上低于
树的核心性质是树中任意两个节点有且仅有一条路径相连
树的深度是从根节点到最远叶子节点的最长路径长度
数据类型是一组值的集合以及定义在这组值上的一组操作的总称
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
引用是给已存在的对象起一个别名，使得可以通过该别名来访问和操作原本的对象，其核心特征包括与被引用对象绑定、具有相同的数据类型以及对
在图论中回路是指从图中某一顶点出发，沿着边经过若干顶点后又回到该起始顶点的路径且路径中边不重复
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分
图的边是连接图中两个顶点的线其具有方向性或无方向性有权值或无权值等特点用于表示顶点之间的关系
从起始节点出发沿一条路径深入探索直到无法继续再回溯找新路径
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足父节点的值大于或小于其子节点的值（大顶堆或小顶堆）
数组是存储相同数据类型元素的有序集合
回路是图中从一顶点出发又回到该顶点的路径
交换排序的核心特征是通过比较元素并交换不满足顺序要求的元素位置，逐步将无序序列转变为有序序列
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点
深度优先搜索是从起始节点出发沿一条路径深入探索直到无法继续再回溯的搜索策略
线性查找是按顺序逐个检查数据元素以确定目标值的查找方法
数据逻辑结构核心概念是数据元素间逻辑关系
回溯法基础的特点的核心性质是在搜索过程中通过深度优先搜索策略，按照某种规则依次尝试各种可能的解，当发现当前部分解无法继续扩展或不满足
树是一种非线性的数据结构，它有一个根节点，其余节点被分成若干互不相交的子集，每个子集又是一棵树，具有层次关系且每个节点有零个或多个子
映射是一种特殊的二元关系，对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保
比较排序是基于元素间比较来确定元素相对次序从而进行排序的算法
父节点是树结构中直接位于某个节点之上的节点，具有比该节点更高的层级，且该节点通过特定的连接关系与父节点相连，父节点可以有零
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径
树是一种非线性的数据结构，它有且仅有一个根节点，并且每个节点最多有一个父节点，同时除根节点外每个节点都有且仅有一条从父节点到
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底
邻接矩阵是表示图中顶点间相邻关系的矩阵，其元素值反映顶点间是否有边相连及边的相关信息，方阵行数与列数等于图的顶点数
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即对于深度为i的节点
时间复杂度的核心性质是算法执行时间随问题规模增长的变化趋势与增长率，反映算法效率和可扩展性
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序
图的边是连接图中顶点具有特定关系的线条
数据的逻辑结构的特点是描述数据元素之间逻辑关系且与数据的存储无关，包括集合、线性结构、树形结构和图形结构等不同类型各有其独特关系特征
递归基础是递归算法中确定的最简单情况或初始条件，在该条件下递归函数无需再次调用自身即可直接给出结果
深度为k有n个结点的二叉树，除第k层外其余层满且最左子树深度为k
满二叉树是所有节点都有左右子树且叶子层满的二叉树
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程将最大元素逐步“冒泡”到数组末尾，对数组进行升序或降序排序的算法
队列是一种先进先出、按顺序排列元素的数据结构
稳定性的定义的核心特征是对于输入数据的小变化，输出结果仅产生小的变化，不会出现大幅度波动或剧烈改变
空间复杂度的核心特征是算法在运行过程中临时占用存储空间大小的变化情况与输入规模之间的关系，反映了算法运行时对额外空间的需求随问题规模增长的
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分，每次比较中间元素与目标值，根据比较结果缩小查找范围，直到找到目标值或确定
交换排序的核心性质是通过比较元素并交换位置，逐步将无序序列转变为有序序列
线性查找按顺序逐个比较元素直至找到目标元素
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的算法策略
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点 
指针具有能直接访问内存地址、可灵活操作内存数据、能高效传递数据地址、可实现动态内存管理等特点
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在运行过程中所需的额外空间随输入规模增长的变化情况
单链表是一种链式存储的线性表由节点组成每个节点含数据和指针
栈的核心特征是具有后进先出的特点，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
集合是由确定的、互不相同的对象所组成的整体
顺序表是用一组地址连续的存储单元依次存储数据元素
稳定性的核心性质是对于输入数据的微小变化，输出结果的变化也微小
动态规划入门是一种用于解决优化问题的算法策略，其核心性质包括最优子结构性质即问题的最优解包含其子问题的最优解，以及重叠子问题性质即子
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树
引用是一种给已存在变量起别名的机制，其特点包括必须初始化且初始化后不能再引用其他变量，通过引用访问变量本质上就是访问被引用的变量本身，
图的顶点是图结构中的基本元素，是组成图的节点，用于表示图中的对象或实体，在有向图或无向图中具有标识作用且与边相关
稳定性的核心性质是对于输入数据的微小变化，输出结果只会产生微小变化
在树形结构中，一个节点若存在直接后继节点，那么该节点就是其直接后继节点的父节点
二叉树是一种每个节点最多有两个子树的树形结构
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法
满二叉树是每一层节点数都达到最大的二叉树
路径的特点的核心特征包括从起点到终点有明确的行进方向且是连续的，可由一系列有序的节点或步骤构成，反映了特定的轨迹或流程，其
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
深度优先搜索的核心性质是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，通过这种方式遍历或搜索整个图或
贪心策略是在每一步选择中都采取当前状态下的最优决策
集合具有确定性即给定一个集合，任何一个元素是否属于这个集合是确定的；互异性即集合中的元素互不相同；无序性即集合中的元素没有顺序之分
树的度是树内各结点度的最大值
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子树，每个子树也是一棵树且具有递归性质
引用是C++中为已存在的变量起的一个别名，通过该别名可对同一内存位置的变量进行操作
图的边是连接图中两个顶点的线，它表示顶点之间的某种关系，且边具有方向或无方向之分，在有向图中边有明确的起始顶点
循环链表是一种首尾相连的链表结构
树的节点是包含数据以及指向子节点的链接的基本数据结构单元
数据类型的核心特征是定义了一组值以及可施加于这些值的一组操作，不同的数据类型具有不同的取值范围和操作集合，它规定了数据在计算机中表示
空间复杂度是算法运行中所需额外空间随输入规模变化情况
栈是后进先出、操作受限且仅在一端进行的线性表
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和
栈是一种特殊的数据结构，其核心特征为后进先出，即最后进入栈中的元素会最先被取出，且只能在栈顶进行插入和删除操作
链表由节点组成，节点通过指针相连，数据存储灵活
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法
树的高度是从根节点到最远叶节点的最长路径长度
父节点具有比子节点更高的层级关系且拥有子节点，是子节点的上一级节点并能对其进行管理或关联等操作
叶子节点是树结构中没有子节点的节点，其特点的核心特征包括在树的最底层，没有分支延伸出去，是数据存储或操作的最终位置，代表树
线性结构的特点的核心性质是存在唯一的一个被称为“第一个”的数据元素且存在唯一的一个被称为“最后一个”的数据元素并且除第一个之外的数据元素均只有
比较相邻元素大小，大的往后冒泡直至有序
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
递归基础的核心特征是存在一种最简单的情况，在此情况下递归调用不再继续，而是直接返回一个确定的结果，该结果能够终止递归过程
树的深度是从根节点开始自顶向下逐层累加至最远叶节点所经过的层数，其核心特征在于它体现了树中节点层次的最大数量，反映了树
连通图的核心特征是图中任意两个顶点之间都存在路径相连
数组是由相同类型的数据元素按一定顺序排列而成的有限序列
堆是一种特殊的数据结构，它分为大顶堆和小顶堆，大顶堆中每个节点的值都大于或等于其子节点的值，小顶堆中每个节点的值都
非线性结构中数据元素之间的关系不呈线性关系
堆是一种特殊数据结构，满足特定父子节点关系特性
二分查找是在有序数组中通过不断折半查找目标值的方法
递归基础是递归算法中最简单情况，在此情况下递归函数直接返回一个确定值而不再调用自身
邻接矩阵是表示图的一种方式，其特点的核心性质为对于有向图或无向图，矩阵中的元素表示对应顶点之间是否存在边，若存在则为
算法效率的特点包括时间效率和空间效率，时间效率指算法执行时间随问题规模增长的变化情况，空间效率指算法执行过程中所需存储空间随问题规模增长的变化
引用是一种给变量起别名的机制，使得该别名与原名共享同一块内存空间，对别名的操作等同于对原名的操作
比较排序是基于元素间比较来确定元素相对次序从而将给定元素序列排列成有序序列的排序方法
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度
无向图是由顶点集和边集构成的图，边无方向
叶子节点是树结构中没有子节点的节点
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其特点的核心性质
连通图的核心性质是图中任意两个顶点之间都存在路径相连
比较相邻元素大小，将较大元素逐步交换到右侧
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式
存储结构的核心性质是数据元素及其关系在计算机存储器中的表示方式以及如何利用这种表示来高效地进行数据的存储、访问和修改等操作
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素
堆是一种特殊的数据结构，其核心性质为：对于最大堆，父节点的值大于或等于其子节点的值；对于最小堆，父节点的值小于或等于其子节点的值
队列的核心性质是先进先出即先进入队列的元素先离开队列
栈是一种后进先出（Last In First Out，LIFO）的数据结构，其操作主要包括入栈将元素添加到栈顶、出栈从栈顶移除元素以及获取
从起始节点出发沿一条路径深入探索直到无法继续再回溯找新路径
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点
叶子节点是数据结构中没有子节点的节点
单链表是一种由节点组成的线性数据结构，每个节点包含数据和指向下一节点的指针
树的查找是在给定的树结构中，依据特定的规则确定某个特定元素是否存在以及其所在位置的操作过程
树中所有结点的度的最大值就是树的度，其中结点的度是指该结点拥有的子树的数目
图的边的核心特征是连接图中的两个顶点，它描述了顶点之间的关系，通过边可以在图中建立起顶点之间的路径和连通性
快速排序是通过一趟排序将数据分为两部分并递归排序
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度
指针是一种变量，其值为内存地址，通过指针可以间接访问其所指向的内存位置，能灵活地对内存中的数据进行操作，具有高效性和灵活性，可用于
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
队列特点是先进先出，元素按顺序进出
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
子节点是树结构中直接位于某一节点下方的节点，与父节点存在直接的层级关系且是父节点所连接的下一层级的节点
时间复杂度是一个函数，它定量描述了该算法的运行时间，其核心性质为算法执行时间的增长趋势与输入规模的某个函数的增长趋势一致，用于衡量随着
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中所有数据元素按某种次序排列，且除第一个和最后一个数据元素外，每个元素都有唯一的前驱
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，其核心性质包括具有随机访问特性可
回溯法是一种通过尝试所有可能的解空间路径，利用深度优先搜索策略，在搜索过程中通过剪枝函数避免无效搜索，以找到满足特定条件的解或最优
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的；互异性即集合中的元素互不相同；无序性即集合中的元素没有顺序之分
空间复杂度的核心性质是衡量算法在运行过程中所需要的额外空间随输入规模增长的变化情况 
图的顶点是图的基本组成元素之一具有能与其他顶点通过边相连以及用于表示图中的各种实体或对象等核心性质 
回溯法是一种通过逐步构建候选解并在不满足条件时回退以找到问题所有解或最优解的算法策略
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历
抽象数据类型是数据值及操作的抽象描述
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过分别求解子问题
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层
回路是图中一条至少包含一条边且起点和终点相同的路径
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系
集合是由确定的、互不相同的元素所组成的整体
路径的核心特征是它代表了从一个起始点到一个终点的连续的移动轨迹或一系列步骤，在不同的情境下如物理空间移动、逻辑流程推进、信息传递
稳定性核心概念是系统或事物在受干扰时保持原有状态的特性
树的高度是从根节点到最远叶子节点路径上的边数或节点数所表示的垂直距离，它体现了树的纵向层次深度，反映了树结构在垂直
无向图的核心特征是其边没有方向，即连接两个顶点的边可以从任意一个顶点指向另一个顶点，顶点之间的连接关系是对称的
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心特征为有且仅有一个开始和一个终端节点，并且除了开始和终端节点外，每个节点都
指针的核心性质是其存储内存地址并可通过该地址间接访问和操作所指向的内存单元
迭代法是一种通过从一个初始估计出发，利用迭代公式逐步逼近问题精确解的方法其特点包括能将复杂问题转化为简单重复计算、可通过有限步骤得到近似
操作效率是指在一定时间内完成特定操作任务的速度和质量的综合体现
哈希表的核心性质是对于不同的关键字可能得到同一哈希地址，即key1≠key2时，可能有Hash(key1)=Hash(key2)，并且哈希表通过哈希
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续
链表是由节点组成，节点包含数据及指向下一节点的指针
集合是由确定的、互不相同的对象所组成的整体这些对象称为集合的元素集合具有确定性、互异性和无序性确定性指对于一个给定的集合任何一个对象是否
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大
树的查找特点是基于树的结构特性通过特定规则从根节点开始按路径逐步查找目标元素以确定其是否存在于树中
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的
快速排序是对数组进行排序的一种算法，其核心性质是通过选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆）或者每个节点的值都小于或
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法
树中一个节点的子树个数称为该节点的度，而树的度是树中所有节点的度的最大值
线性结构数据元素间存在一对一的线性关系
堆是一种特殊数据结构，父节点键值大于或小于子节点
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空
简单排序是对数据按特定规则依次比较交换位置的排序方法
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，分别对这些子问题进行求解，
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该地址所指向的内存单元中的数据，具有灵活高效地实现数据间
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构
线性结构是一种数据结构，其核心特征为数据元素之间存在一对一的线性关系，即除了第一个元素外，每个元素有且仅有一个前驱；除了最后一个元素
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，
树的高度是从根节点到最远叶子节点的最长简单路径上的边数
归并排序是将一个有n个记录的无序文件看成是由n个长度为1的有序子文件组成的文件，然后进行两两归并，得到⌈n
简单排序是对数据序列通过比较和交换等操作逐步将其排列成有序状态的排序方法
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等各种含义，用于描述图中顶点之间关系的
子节点是树结构中直接连接在父节点之下的节点，具有与父节点通过特定关系相连且在树的层级结构中有其特定位置和作用等特点
在有序数组中通过不断折半查找目标值的方法
栈是一种后进先出的数据结构，其核心特征在于元素的进出遵循后进先出原则，即最后进入栈的元素会最先被取出，而最先进入栈的元素则
用矩阵表示顶点间是否有边相连的图结构形式
根节点是树结构中没有前驱节点且唯一的特殊节点
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量
数据类型是对数据的一种分类方式，它定义了数据的取值范围、表示形式以及能进行的操作等属性
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表
算法效率的定义的核心性质是衡量算法执行时间和所需资源随输入规模增长的变化情况以评估算法优劣
动态规划入门的特点是通过将问题分解为相互重叠的子问题并记录子问题的解，从而以自底向上或自顶向下带备忘的方式高效求解复杂问题
归并排序是将数组分治后合并有序子数组的排序算法
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根
在树形数据结构中，若存在一个节点A，有其他节点B直接连接到A，且这种连接关系具有特定的层次结构规则，那么节点A就是节点B的父
图是由顶点集及顶点间边集组成的数据结构
队列是一种先进先出、按顺序存储和操作数据的线性结构
二叉树是一种每个节点最多有两个子节点的树形数据结构
树的查找特点是基于树的结构特性通过特定路径在树中搜索特定元素以确定其是否存在及位置
比较排序是一种排序算法，其核心特征是通过元素之间的比较来确定元素的相对顺序，从而将待排序序列转换为有序序列
广度优先搜索按层次依次扩展节点以遍历图或树结构
二叉树是每个节点最多有两个子树的树结构
算法效率是指算法执行所需要的计算机资源量，包括时间资源和空间资源，衡量算法效率主要通过时间复杂度和空间复杂度来体现
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程
在树形结构中，若存在一个节点，它有一个或多个子节点，那么这个节点就是这些子节点的父节点
图的边是连接图中两个顶点的线其具有方向或无方向且有权值或无权值不同类型的图边的具体特点根据图的类型如无向图边
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、丰富树的层次结构以及在树的遍历等操作中按特定顺序
父节点是在树形结构中，直接与一个或多个子节点相连且位于子节点之上的节点
叶子节点是树结构中没有子节点的节点
邻接矩阵是表示顶点之间相邻关系的矩阵，若图中有n个顶点，则邻接矩阵是一个n×n的矩阵，矩阵中元素的值表示对应顶点之间是否有
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列
动态规划入门的核心特征是将问题分解为相互重叠的子问题，通过求解子问题并记录其解，避免重复计算，从而高效地解决原问题，通常采用自
线性查找的核心特征是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列为止
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点
树是一种包含根节点且节点间有层次关系的非线性结构
路径具有从起点到终点的特定走向及关联等特点
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况体现了算法执行时间与输入规模之间的关系及增长趋势特点
图中任意两点都存在路径相连的图是连通图
回路是在图中从一个顶点出发，沿边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复
路径的核心性质是由一系列顶点和边依次连接而成且相邻顶点间存在边相连
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在执行过程中所需的额外空间随问题规模增长的变化情况
线性结构的核心性质是数据元素之间存在一对一的线性关系，有且仅有一个开始和一个终端元素，除开始和终端元素外，每个元素有且仅有一个前驱和
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目
二叉树遍历按特定顺序访问节点以完整呈现树结构
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图
栈是一种后进先出的数据结构，其核心特征是元素的插入和删除操作都在同一端进行，即栈顶，新元素总是被添加到栈顶，而删除
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历
数据的物理结构是指数据在计算机存储器中的存储方式包括数据元素的存储及其关系的表示它具体体现为数据元素在存储设备上的存储布局以及数据元素之间关系
贪心策略的特点是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优
完全二叉树是这样一种二叉树，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最底层节点都集中在该层最左边的若干
单链表是一种由节点组成的线性数据结构每个节点包含数据和指向下一节点的指针
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，当n>1时，其余节点分为m（m≥0）
树中没有子节点的节点就是叶子节点
迭代法的核心性质是通过从一个初始估计值开始，利用某种迭代公式不断重复计算，逐步逼近问题的精确解
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索
将未排序数据插入已排序序列的合适位置进行排序
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式
数据类型的特点的核心特征包括具有特定的数据表示形式、定义了一组操作以及有明确的取值范围
二叉树是一种每个节点最多有两个子树的树形结构
图的顶点是图结构中的基本元素，是图中数据的存储单元，与其他顶点通过边相连用于表示图的结构关系
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中至少包含一条边
堆排序是利用堆结构特性进行排序的算法 
树的查找是在给定的树结构中按照特定规则寻找目标元素的操作过程
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
子节点的核心特征是其与父节点存在特定的关联关系，处于父节点之下，是树形结构等数据结构中父节点进一步细分或延伸出来的节点，具有继承
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，
迭代法是一种不断用变量的旧值递推新值的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下一次
树的高度是从根节点开始，到最远叶子节点所经过的最长路径上的边数或节点数（取决于具体定义方式），其核心特征为体现从根到
图的顶点的核心特征是能够唯一标识图中的各个节点，且与边存在关联关系，通过顶点之间的边来体现图的结构和性质，顶点自身还可能具有
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
二分查找是在有序数组中通过不断二分区间来定位目标值
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值，且图中的顶点个数可以为零个或
无向图是由顶点集和边集组成的图，其中边集的元素是顶点集的无序对
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
图的边的核心性质是连接图中两个顶点且具有方向或无方向的元素用于表示顶点之间的关系
邻接矩阵是用于表示图的一种矩阵，其核心特征为若图中有n个顶点，则邻接矩阵是一个n×n的方阵，矩阵中元素的值表示对应顶点
在树结构中按特定规则确定元素是否存在的操作叫树的查找
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法
集合是由确定的、互不相同的对象所组成的整体
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
抽象数据类型的核心特征是将数据和操作数据的方法封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注抽象数据类型所提供的
链表是由节点组成通过指针相连的线性数据结构
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点
回路是在电路中电流能够循环流动的闭合路径 
回溯法是一种通过尝试所有可能的解路径并在发现不符合条件时退回上一步继续尝试来求解问题的算法策略，其基础在于按照深度优先策略对问题的解
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体
邻接矩阵是一种表示图的方式，其特点为用一个二维数组来存储图中顶点之间的邻接关系，矩阵中元素的值表示对应顶点间是否有边相连
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到
插入排序是将未排序数据插入已排序序列合适位置的排序算法
动态规划入门的特点是将问题分解为相互重叠的子问题并通过保存子问题的解来避免重复计算以高效求解最优解
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法
堆排序的核心性质是堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶堆），并且堆是一种
数据的物理结构的特点的核心性质包括数据元素在计算机中的存储方式有顺序存储、链式存储等，顺序存储是将数据元素依次存放在连续的存储单元中，
邻接矩阵是用来表示图的一种矩阵，其中行和列对应图的顶点，矩阵元素的值表示对应顶点之间是否有边相连，若有边相连则值为1
图的边是连接图中顶点具有特定关系的元素
图是由顶点集合及顶点间边集合构成的数据结构
指针是存储变量内存地址，能间接访问和修改数据的变量
邻接矩阵的核心特征是用一个二维矩阵来表示图中顶点之间的连接关系，矩阵中元素的值表示对应顶点之间是否存在边以及边的相关属性（如权重
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的目标元素进行比较，直到找到目标元素或遍历完整个数据序列为止
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数
简单排序是对数据序列按特定规则依次比较和交换元素位置以使其有序的排序方式
数据类型定义指数据的种类及表示与操作方式
单链表由节点组成，每个节点指向下一节点形成线性结构
回路是在电路中电流能够依次通过各元件形成的闭合路径
堆排序是利用堆结构进行排序，将数据调整为堆再提取元素
满二叉树是除叶子外每个节点都有两个子节点的二叉树
稳定性是指在数据结构中，若两个相等的数据元素在原序列中的相对先后顺序和经过某种操作后在新序列中的相对先后顺序保持一致，则该数据结构具有稳定性
树的查找是基于树的层次结构，从根节点开始，根据节点间的父子关系，按特定规则逐步比较目标值与节点值，以确定目标值是否存在于
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数
叶子节点没有子节点
回路的核心特征是其起点和终点为同一节点且存在一条不重复经过相同节点的路径可从起点回到该起点
有向图是由顶点和有方向的边组成的图结构
二叉搜索树中任意节点的左子树中的所有节点的值均小于该节点的值且右子树中的所有节点的值均大于该节点的值
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法
根节点是树结构中处于顶端无父节点的起始节点
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序
存储结构的特点的核心特征是它决定了数据在计算机内存或存储设备中的存储方式，包括数据元素之间的逻辑关系如何映射到物理存储上，以及如何通过特定
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法
快速排序是对给定数组选择一个基准值，将数组分为两部分，小于基准值的元素放在左边大于基准值的元素放在右边，然后对左右两部分分别递归进行
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，
在图论中回路是指一条至少包含一条边且起点和终点相同的路径
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它反映了算法在执行过程中所需的额外空间随问题规模增长的变化情况
引用是给已存在对象起的一个别名，指向同一内存位置
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点
树的核心特征是具有一个根节点，并且除根节点外的每个节点都有且仅有一个父节点，同时树中没有回路
满二叉树的核心性质是每一层上的节点数都达到最大值，即如果满二叉树的深度为k，那么它的节点总数为2^k - 1，
图的顶点是图结构中的基本元素，具有标识图中各个节点的作用，是构成图的重要组成部分，通过边与其他顶点相连以体现图的结构关系
简单排序的特点的核心性质是比较和交换元素以将无序序列转换为有序序列
迭代法是一种不断用变量的旧值递推新值，通过重复执行某一运算过程以求解问题的方法
线性查找是一种从数据序列的开头开始，依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是对数据序列无特定要求且查找过程
插入排序是将未排序数据插入已排序序列的合适位置
操作效率的核心性质是在给定资源和条件下以尽可能少的时间和精力完成任务并达到最优效果
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，且任意两个节点之间有且仅有一条路径，不存在回路
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）的排序算法
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，它忽略算法中常数项、低阶项等非主导因素，主要关注当输入规模无限增大
比较排序是一种基于元素间比较操作来确定元素相对次序从而将给定元素序列重新排列成有序序列的排序算法
引用的核心性质是其绑定到一个已存在的对象后就一直指向该对象，不会再重新绑定到其他对象，对引用的操作实际上就是对其所绑定对象的操作
时间复杂度衡量算法执行时间随输入规模增长的变化
贪心策略在每一步选择中都采取当前最优决策
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同
图的顶点的核心特征是在图结构中具有标识作用，用于表示图中的某个具体元素或实体，并且通过与边的关联来构建图的拓扑结构，边连接
加权图的核心特征是图中的边被赋予了一个数值（权重），这个权重可以表示诸如距离、成本、时间等某种度量，用于描述边所连接的两个顶点
双向链表是节点含前驱和后继指针的链表结构
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接
递归基础是递归算法中最简单的情况，通常是问题的最小规模或最基本形式，直接给出答案而无需进一步递归调用
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法
动态规划入门是一种通过把原问题分解为相对简单的子问题，并记录子问题的解以避免重复计算，从而解决复杂问题的算法设计策略
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树
队列的核心性质是先进先出，即先进入队列的元素先出队列
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此操作将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）从而实现对数组
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法
叶子节点是树结构中没有子节点的末端节点
动态规划入门核心概念是通过分解问题记录子问题解求最优解
有向图是边具有方向的图其边从一个顶点指向另一顶点
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点
迭代法是一种通过从一个初始估计值开始，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法其核心性质是通过重复执行相同的计算步骤逐渐改进
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级
堆是一种特殊的数据结构，其核心性质为父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序
在树结构中按特定规则找到目标节点的操作是树的查找
简单排序是对数据序列通过比较和交换等操作，按照特定规则将元素重新排列以达到有序状态的排序方法
算法效率的核心性质是指算法执行时间随问题规模增长的变化情况以及算法所需的存储空间随问题规模增长的变化情况等，体现算法运行速度和资源消耗等方面
双向链表是节点包含前驱和后继指针的链表结构
深度优先搜索是按深度优先依次访问节点直至完成搜索
树中各节点度的最大值就是树的度，树的度反映了树中节点分支情况的最大程度，它体现了树结构的复杂程度，不同树的度各不
无向图是一种图结构，其中边没有方向，顶点之间的连接是对称的即若存在从顶点u到顶点v的边则必然存在从顶点v到顶点u
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
动态规划入门的核心性质是通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而以自底向上的方式逐步求解原问题以
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过递归地解决这些子问题，然后将子问题的解合并得到原问题的解
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列
完全二叉树除最后一层外每层节点数满且最后一层靠左排列
树的高度是从根节点到最远叶子节点的最长简单路径上的边数
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在执行过程中所需的额外空间随着问题规模的变化而变化的特性 
快速排序是对无序数组通过选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行同样
引用是给变量起别名，与原变量共享内存，改变其一另一个也变
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环
树的节点的核心性质是每个节点有零个或多个子节点，且有一个被称为根的特殊节点，除根节点外每个节点有且仅有一个父节点，
按顺序逐个检查数据元素以查找目标元素的查找方式
无向图是一个二元组（V，E），其中V是顶点集，E是边集，且边集中的每条边都是顶点集V中顶点的无序对
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据对象的表示和其相关操作封装在一起，用户仅需关心
邻接矩阵是一种表示图的方式，其中用一个二维数组来存储顶点之间的连接关系，若顶点之间有边相连则对应位置的值为1（或其他表示有
邻接表是用链表存储图中顶点及邻接顶点信息的数据结构
稳定性指系统受干扰后能恢复或保持原有状态的特性
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即第i层有2^(
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
树的度是树内各结点的度的最大值其中结点的度是指结点拥有的子树的数目
树的节点是树结构中的基本单元，包含数据以及指向其子节点的链接
子节点是树状结构中直接连接在某一节点之下的节点
满二叉树的核心特征是除最后一层无任何子节点外，每一层上的所有节点都有两个子节点
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中没有
双向链表是节点含前驱和后继指针的链表结构
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数
树的高度是从根节点到最远叶节点的最长简单路径长度
树中各节点度的最大值就是树的度的核心概念
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法其核心性质是利用前一步的计算结果来生成下一步
数据类型是对数据的种类及操作方式的规定
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可不同，其核心特征在于
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法
算法效率的特点包括时间复杂度反映算法执行时间随问题规模增长的变化趋势空间复杂度体现算法执行过程中所需存储空间随问题规模增长的变化情况最优、平均和最坏时间
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点
栈是后进先出的线性数据结构
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法
堆是一种特殊数据结构满足父节点键值大于或小于子节点
队列是一种先进先出的数据结构，其核心性质为元素按照进入的先后顺序依次存储，先进入队列的元素先离开队列
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，顶点之间的连接是单向的
在树形数据结构中父节点是指其直接有子节点且是子节点的前驱节点的节点
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，边可以具有权重等属性，图中的顶点可以是各种类型的对象，边可以
算法效率的定义的核心特征是衡量算法执行时间随输入规模增长的变化情况以及算法执行过程中所占用的额外空间随输入规模增长的变化情况，即算法时间
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表
加权图的核心性质是图中每条边都被赋予一个权重值，该权重值用于表示边的某种属性或代价等，不同边的权重值可不同，基于这些
顺序查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其核心特征是逐个
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据
贪心策略是指在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据以及指向下一个节点的指针，通过这些指针将节点依次连接起来形成一个链式结构
树中没有子节点的节点即叶子节点
将问题分解为子问题，分别解决后合并得到原问题解
树中一个节点的子树个数即为该树此节点的度
树的查找是在给定的树结构中按照特定规则寻找满足某种条件的节点的操作过程
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，具有随机访问特性，可按元素序号快速访问，
树中所有结点的度的最大值就是树的度
堆排序是利用堆结构进行排序的一种算法 
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据
在树结构中按特定规则找到目标节点的操作就是树的查找核心概念
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质是顺序性地逐个检查
图的顶点是图结构中的基本元素，它可以表示各种实体，且顶点之间通过边相互连接以构成图的结构
树中数据元素及指向子树的分支构成节点
将未排序数据插入已排序序列的合适位置完成排序
线性结构是一种数据元素之间存在一对一线性关系的数据结构
链表是通过指针将节点连接起来的线性数据结构
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法
堆排序利用堆结构特性对数据进行排序操作 
图是一种由顶点集合以及顶点之间的边集合所构成的数据结构，其中顶点是图的基本元素，边表示顶点之间的关系
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别求解这些子
数据类型是一组值的集合以及定义在这组值上的一组操作的总称
树的深度是从根节点开始自顶向下逐层累加至最远叶节点所经过的层数
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构
线性结构中数据元素存在一对一的线性关系
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，反映算法执行时所需的额外空间随输入规模增长的变化情况
子节点是树结构中直接连接在父节点之下的节点
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其核心特征是逐个元素进行比较查找
映射是一种元素与元素间具有特定对应关系的概念
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它决定了数据在计算机中的存储方式和访问
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较
操作效率的特点的核心特征是在单位时间内完成的操作数量、操作的准确性以及操作过程的流畅性等方面所表现出的特性，包括速度快、精度高
平衡二叉树的核心特征是每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树
回溯法按选优条件深度优先搜索并适时回溯找解
栈是一种后进先出的数据存储和操作结构
有向图的核心性质是其边具有方向性，即从一个顶点指向另一个顶点
穷举法是对所有可能情况逐一检验以求解问题的方法
穷举法的核心性质是对问题所有可能的解逐一进行检验以找出符合条件的解
动态规划入门的核心特征包括将问题分解为相互重叠的子问题，通过求解子问题并保存其解以避免重复计算，利用子问题的解逐步构建出原问题
子节点是树结构或图结构中直接连接到某个父节点的节点，其特点的核心特征包括：在层次结构中处于父节点的下一层级，与父节点
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则
指针是一种变量，其值为内存地址，通过指针可以直接访问和操作该地址所指向的内存单元，具有灵活性和高效性，能方便地处理动态数据结构和
抽象数据类型具有数据抽象和操作抽象的特点
贪心策略每步选当前最优解期望达全局最优
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
递归基础是递归算法中最简单情况，是无需再次递归调用自身就能直接给出结果的终止条件
比较排序通过元素间比较确定其相对顺序来排序
数组是由相同类型的数据元素组成的有限序列，这些元素在内存中按顺序存储，可通过下标来唯一标识每个元素
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只考虑局部最优解，期望通过局部最优选择
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中
抽象数据类型具有数据抽象和数据封装的核心特征，数据抽象是指将数据对象的逻辑特性和操作特性抽象出来，数据封装则是把数据对象的表示和操作
邻接矩阵是用一个二维数组来表示图中顶点之间邻接关系的矩阵，其中矩阵元素的值表示对应顶点之间是否有边相连及边的相关信息
在树形结构中，根节点是没有前驱节点且位于树的顶部具有特殊地位的起始节点
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的
将问题分解为子问题，分别解决后合并得到原问题解
图是由顶点集合及顶点间的关系集合组成的数据结构
非线性结构的核心特征是存在至少一个数据元素有不止一个前驱元素或不止一个后继元素，即数据元素之间的关系不再是一对一的线性关系，可能存在一对多、
树中所有结点的度的最大值就是树的度其核心特征是反映树中各结点分支情况的最大值体现了树的复杂程度取决于树中拥有最多子树的结点
比较排序是基于元素间比较操作来确定元素间相对次序从而实现对数据序列进行排序的排序算法
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，
回路的核心性质是从回路中任意一点出发，沿回路的边遍历，最终能回到出发点且所经过的边互不重复
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法
树的度的核心特征是树中所有结点的度的最大值，它反映了树中各结点分支数的最大情况
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表
二叉搜索树的核心性质是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值
树中各节点度的最大值即为树的度
二叉树是每个节点最多有两个子树的树结构
回路是从一节点出发经一系列节点又回到该节点的闭合路径
邻接矩阵是表示图的一种方式，其特点的核心性质包括：若图中有n个顶点，则邻接矩阵是一个n阶方阵；矩阵中元素的值表示对应顶点
有向图是由顶点和有方向的边组成的图结构
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时
图的顶点是图结构中作为基本元素用于标识位置且与边共同构成图的结构关系的节点
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问
非线性结构中数据元素之间存在非一对一的关系
线性结构的核心特征是数据元素之间存在一对一的线性关系，有且仅有一个开始和一个终端节点，除开始节点外每个节点有且仅有一个前驱，除终端节点
数组是存储相同数据类型元素的有序集合
子节点是树结构中直接连接在父节点之下的节点
回溯法基础的特点是通过深度优先搜索策略，在问题的解空间树中按深度优先方式从根节点出发搜索解，当发现当前节点不满足求解条件时就
线性结构是一种数据结构，其核心特征为存在一个对数据元素的有限序列，该序列中的元素之间存在唯一的前驱和后继关系（除了第一个元素无前驱，
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，每一趟比较都会将最大（或最小）的元素“
连通图中任意两点之间都存在路径可相互连通
图中参与构成边且具有某种标识或属性的元素叫顶点
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来，形成一个链式结构，其
数据类型是对数据的一种分类方式，它定义了数据所具有的值的集合以及可以对这些值执行的操作
树的深度是从根节点到最远叶节点的最长路径长度
迭代法通过重复步骤从初始值逐步逼近问题的解
二叉搜索树是一棵空树或者一棵具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则
简单排序通过比较与交换逐步将数据按序排列
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法
动态规划入门是一种用于求解具有重叠子问题和最优子结构性质的问题的算法策略，通过保存已解决子问题的解来避免重复计算以高效得出最优解
队列是一种特殊的线性表，其核心性质是只允许在一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，相邻元素之间存在一对一的线性关系
邻接矩阵是用于表示图的一种矩阵，其中行和列对应图中的顶点，矩阵元素的值表示对应顶点之间是否存在边及边的相关信息（如权值等
引用是C++中为已存在的变量起的一个别名，通过该别名可以对变量进行操作，其本质是给一个已定义变量的内存地址起的另一个名字
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只考虑局部最优解，希望通过局部最优选择
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点可
树的度的核心特征是树中所有结点的度的最大值即树内各结点的度的取值范围中的最大值就是树的度
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法，其特点包括能将复杂问题转化为简单重复
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，最后将子
回溯法基础的特点的核心性质是在问题的解空间树中按照深度优先策略搜索，通过试探和回退的方式逐步找到满足约束条件和目标函数的解
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况
线性结构的核心性质是存在一个序列，其中元素之间具有一对一的线性关系，且除第一个和最后一个元素外每个元素都有唯一前驱和后继，第一个元素无前驱
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整
完全二叉树是除最后一层外每层节点数满且最后一层靠左排列的二叉树
抽象数据类型是对数据及操作进行抽象描述的数据类型
快速排序是对数组进行排序的一种算法，它选择一个基准值，将数组分为两部分，小于基准值的放在左边，大于基准值的放在右边，然后对左右
栈是一种特殊的数据结构，其核心特征为后进先出，即最后进入栈中的元素会最先被取出，而最先进入栈中的元素则最后被取出
递归基础是递归定义中满足特定条件的初始情况其核心性质是具有明确的、无需进一步递归即可确定的定义值或状态
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，其强调数据的逻辑结构和相关操作而不依赖于具体的实现细节
在树形结构中直接位于某个节点之上的节点即父节点
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过下标直接访问元素，时间复杂度为O(1)
平衡二叉树左右子树高度差绝对值不超过1且左右子树都是平衡二叉树
算法效率的定义的核心特征是指算法执行所需要的时间和空间资源与问题规模之间的关系，通常用时间复杂度和空间复杂度来衡量，时间复杂度关注算法执行
时间复杂度衡量算法执行时间随输入规模增长的变化
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
路径具有从起点到终点的特定轨迹及相关特性
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且
双向链表是一种每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针的数据结构
算法效率是指算法执行所需的时间和空间资源的量度它反映了算法在解决特定问题时的优劣程度体现为算法的时间复杂度和空间复杂度等指标
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的边数
树的高度是从根节点到最远叶节点的最长简单路径长度
图的边是连接图中两个顶点的线或弧，表示顶点之间的关系
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表
对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应，这就是映射定义的核心特征
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出
线性查找是按顺序逐个检查数据元素直至找到目标元素的查找方法
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解的一种策略
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的
循环链表是尾节点指针指向头节点的链表结构
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径相连
算法效率的特点的核心性质包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需额外空间随输入
无向图中边没有方向，顶点间关系是对称的
稳定性指系统受扰动后能恢复或趋近原状态的特性
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回
顺序表是一种线性表，其核心性质包括用一组地址连续的存储单元依次存储数据元素，数据元素在内存中按逻辑顺序依次存放，并且可以通过数组下标直接
无向图是由顶点集和边集组成的图，其中边集是顶点集的无序对集合且每条边都连接两个顶点
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序
存储结构是指数据元素及其关系在计算机存储器中的表示，它不仅要存储数据元素本身的值，还要存储数据元素之间的逻辑关系
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质是反映算法运行所需的额外空间随输入规模增长的变化趋势
树的查找的核心特征是基于树的层次结构，从根节点开始，按照特定规则依次比较节点值，以确定目标元素是否存在于树中，若存在则返回
树的节点是树结构中的基本组成单元，包含数据元素以及指向其子节点的若干分支
图的边是连接图中两个顶点的二元组
数据类型是对数据的一种分类，它定义了数据所具有的取值范围、存储方式以及可以进行的操作等特性
完全二叉树是深度为k的有n个结点的二叉树，对于树中的任一结点，若其序号i满足1≤i≤n，则其左孩子序号为2i
图中参与构成边且具有某种关系的基本元素是顶点
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，用于描述图中
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
顺序查找的核心性质是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应
交换排序是通过比较和交换元素位置来逐步将无序序列转化为有序序列，其核心性质是在排序过程中不断对序列中的元素进行两两比较，若顺序错误就
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
算法效率是指算法执行所耗费的时间和空间资源的度量
图的边是连接图中两个顶点的元素且顶点对与边存在一一对应关系或顶点对之间由边相连且每条边关联两个顶点
时间复杂度描述算法执行时间随输入规模增长的变化趋势反映算法效率与输入规模关系且与具体机器和编程语言无关
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果该二叉树的深度为h，那么它的节点总数为2^h - 1
二叉树是一种每个节点最多有两个子树的树形结构
根节点是树结构中没有前驱节点，处于树的起始位置，具有特殊地位的节点
比较排序通过元素间比较确定最终排序顺序
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图
加权图是一种图结构其中每条边都被赋予一个数值作为权重用于表示边的某种代价、距离、容量等相关属性
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心特征是将问题的所有可能情况无遗漏地全部
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
递归基础是递归函数中终止递归调用的初始条件
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别对这些子问题进行求解
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻的特点，其存储单元是连续的，可通过数组下标直接计算出元素的存储地址，支持随机访问
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值
数据类型特点是规定数据取值范围、操作方式等特性
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、
迭代法是一种不断用变量的旧值递推新值，从初始值出发通过有限步骤逐步逼近问题解的方法，其特点包括计算过程相对简单、易于编程实现
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上
算法效率的特点是指算法执行时间随问题规模增长的变化趋势以及算法执行过程中所需的空间资源随问题规模增长的变化情况等方面所呈现出的特性
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树
操作效率特点核心概念是单位时间内完成操作的情况
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和操作该内存地址所存储的数据
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法
比较排序是一种排序算法，其核心性质是通过比较元素之间的大小关系来确定元素的相对顺序从而实现排序
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，即任何一个对象要么是该集合的元素，要么不是，
引用是对已存在对象的别名，指向同一内存位置
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的算法策略
递归基础是递归函数中无需递归调用的最简情况
存储结构特点是指数据在存储器中的组织方式特性
二分查找是在有序数组中通过不断将区间分成两部分，每次根据中间元素与目标值的比较结果，缩小查找区间，直至找到目标值或确定目标值不存在的
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继
指针的核心性质是其存储了变量的内存地址，通过该地址能够对所指向的变量进行访问和操作
简单排序的特点的核心性质是通过比较元素大小并逐步交换位置来将无序序列转换为有序序列
存储结构是数据及其关系在计算机内存中的存储方式
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法
归并排序是将一个序列分成两个子序列分别进行排序，再把排序好的子序列合并成一个有序序列，其核心特征是通过分治策略将问题不断分解
引用是给变量或对象起别名以共享同一内存位置
二叉树是一种每个节点最多有两个子树的树结构
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点最多有一个父节点，除根节点外的其他节点被分为若干互不相交的有限集合，
二分查找是在有序数组中，通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直到找到目标值或确定目标值不存在，具有每次比较可
比较排序的核心性质是通过元素间的比较来确定元素间的相对次序从而实现排序
迭代法的核心特征是通过从一个初始估计值开始，利用相同的计算规则或公式不断重复计算，逐步逼近问题的精确解，每次迭代产生的结果会作为下
空间复杂度的核心性质是衡量算法在运行过程中所需要的额外空间随输入规模增长的变化情况
根节点是树结构中没有前驱节点且唯一的起始节点，它位于树的顶端，是树整体结构的核心起始点
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的相互关系以及数据的组织形式
树是一种分层结构且有唯一根节点的非线性数据结构
根节点是树结构中的一个特殊节点，它没有父节点，树中的其他节点都直接或间接连接到根节点，根节点是树的起始点和层次结构的基础
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序
按特定顺序访问二叉树中所有节点的操作是二叉树遍历核心概念
算法效率的特点的核心性质包括有穷性、确定性、输入、输出以及可行性，有穷性指算法必须能在执行有限个步骤之后终止；确定性指算法的每
操作效率是指在一定时间内完成的操作数量或质量与所投入资源（包括人力、物力、时间等）的比值所体现出的工作效能情况
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征在于衡量算法执行期间所需的额外空间随输入规模增长的变化情况
栈是后进先出、操作受限的线性数据结构
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正常开始并逐步展开的起始点，具有能直接给出结果而
完全二叉树是一种特殊的二叉树，其除了最后一层外，每一层上的节点数都是满的，并且最后一层上的节点都集中在最左边的若干
操作效率是指在数据结构的相关操作中，衡量算法或程序完成特定任务所需时间、空间等资源消耗情况以及执行速度等方面综合表现的指标
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否存在边以及边的相关属性
时间复杂度是指在计算机科学中，算法执行时间随问题规模增长的变化趋势，用大O符号表示的函数来描述算法执行时间的上界
完全二叉树的核心特征是：除最后一层外，每一层上的节点数均达到最大值；在最后一层上只缺少右边的若干节点
栈是一种后进先出的数据结构，其操作主要集中在栈顶，元素按照后进先出的顺序进行入栈和出栈操作
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点
比较排序是基于元素间比较来确定元素相对次序从而对序列进行排序的排序方法其核心性质是通过元素间的比较操作逐步构建有序序列
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数
路径是图中从一个顶点到另一个顶点的顶点序列且该序列中顶点间有边相连
指针的核心特征是其存储的是变量的内存地址，通过该地址可以直接访问和操作所指向变量的值，使得程序能够灵活地处理数据的存储位置和间接访问
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点
交换排序核心概念是通过元素交换实现有序排列
堆是一种特殊的完全二叉树，其每个节点的值都大于或等于其子节点的值（大顶堆）或每个节点的值都小于或等于其子节点的值（小顶堆
操作效率特点核心概念是衡量操作完成速度与质量程度
回路是在图中从一顶点出发又回到该顶点的路径
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则
简单排序是对给定元素序列按照特定规则进行比较和交换等操作以使其呈现出特定顺序的排序方式其核心特征是通过逐次比较元素并根据比较结果进行相应
回路是图中从某顶点出发又回到该顶点的路径
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾
路径是图中顶点与顶点之间的边所构成的序列且该序列中任意一条边的两个端点是相邻的顶点
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
有向图的核心性质是由顶点和有方向的边组成，边是从一个顶点指向另一个顶点，顶点之间的连接具有方向性
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关不同算法的空间复杂度因实现方式和数据处理需求而异可能存在
非线性结构中各数据元素之间的关系不再是简单的一对一，而是存在一对多、多对一或多对多等复杂关系，数据元素之间的前驱和后继关系不
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小
二叉树是一种每个节点最多有两个子树的树形结构
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
数据类型是一组值的集合以及定义在这组值上的一组操作的总称
线性查找是按顺序逐个检查数据元素以确定目标值的方法
数据的物理结构的特点的核心特征是描述数据在计算机中的存储方式包括顺序存储链式存储索引存储散列存储等以及数据元素之间的逻辑关系在计算机中的表示形式
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，然后分别对这些子问题进行求解
树的查找是在给定的树结构中确定是否存在特定元素以及找到该元素所在位置的操作
图的顶点是图结构中具有特定标识和关联关系的基本元素
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列为止，其核心特征是按顺序依次对每个元素进行比较查找
算法效率指算法执行时间和占用资源随输入规模变化情况
树中各节点度的最大值即为树的度，且树中不同节点的度可能不同，度为0的节点是叶子节点，度不为0的节点为分支节点，
用矩阵表示顶点间相邻关系的一种数据结构叫邻接矩阵
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示
栈是一种后进先出的数据结构，其操作主要集中在栈顶，元素按照进入的相反顺序被取出
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系
动态规划入门的核心特征包括将问题分解为子问题、记录子问题的解以避免重复计算、通过求解子问题并结合最优子结构性质来得到原问题的最优
操作效率是指在一定时间内完成特定操作任务的数量、质量或速度等方面所体现的综合效能指标
快速排序的核心特征是选择一个基准元素，通过一趟排序将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后
迭代法是通过重复计算逐步逼近问题解的方法
数据物理结构是数据在存储设备上的存储方式
邻接矩阵是表示图的一种方式，其特点的核心性质包括对于有向图，矩阵中元素若表示从顶点i到顶点j有边，则对应位置为1否则
子节点是树结构或图结构中，直接连接在某一节点之下的节点，具有与父节点存在特定连接关系且处于其下层的特点
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，用于表示该边的某种属性或代价等
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点
数组是由相同类型的数据元素按一定顺序排列组成的有限序列，这些元素存储在连续的内存单元中，可通过下标来唯一标识每个元素
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为
动态规划入门的特点的核心性质包括最优子结构性质即问题的最优解包含其子问题的最优解，以及重叠子问题性质即子问题被重复求解
时间复杂度的核心特征是描述算法执行时间随输入规模增长而变化的趋势，它主要关注算法中基本操作执行次数与输入规模之间的函数关系，反映了算法效率
循环链表是一种尾节点指向头节点形成循环的链表结构
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同
二叉树是一种每个节点最多有两个子树的树形结构
穷举法是对所有可能情况逐一测试以求解问题
引用是C++中为已存在的变量起的一个别名，通过该别名可以直接访问和操作原始变量，其定义时必须初始化且初始化后不能再引用其他变量
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边
比较相邻元素大小，大的往后冒最终完成排序
存储结构特点指数据在存储器中的组织与存储方式特性
回路是在图中从一个顶点出发，沿着边连续移动，最终回到起始顶点的路径且除起始顶点外所经过的顶点不重复
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问其所指向的变量，具有指向特定内存地址、可用于动态内存管理和函数参数
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置
指针的核心特征是其存储的是变量的内存地址，通过该地址能够直接访问和操作所指向变量的值，并且指针变量本身也有自己的内存地址用于存储所
数据物理结构指数据在存储设备上的存储方式及相互关系
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质
广度优先搜索按层次依次扩展节点以遍历图或树
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点
树中各节点度的最大值就是树的度的核心概念
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而变化的趋势
回路是图中一条至少包含一条边的、起点和终点相同的路径
邻接表是用链表存储图中顶点及与其相邻顶点信息的数据结构
完全二叉树除最后一层外每层节点数满且最后一层靠左排列
算法效率特点核心概念是衡量算法执行时间和资源消耗情况
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作
稳定性特点的核心概念是系统在干扰下保持原有状态的能力
哈希表通过哈希函数将键映射到特定位置以快速存取数据
从起始节点出发沿一条路径深入探索直至无法继续再回溯
图的边是连接图中两个顶点的线表示顶点间关系
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，然后分别求解这些子问题，最后
在树形结构中直接位于某个节点之上的节点就是父节点
顺序表是用一组地址连续的存储单元依次存储数据元素
线性表是数据元素有序排列且有唯一前驱和后继的数据结构
回溯法基础的特点是在问题求解过程中，通过深度优先搜索方式，按照某种规则不断尝试，当发现当前尝试不满足条件或无法达到目标时就退回上一步
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层
深度优先搜索按深度依次访问节点直至无法深入再回溯
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
树的高度的核心特征是从树的根节点到最远叶子节点所经过的最长路径上的边数或节点数
堆排序基于堆结构，通过选择和交换实现数据排序
无向图是一种图结构其中任意两个顶点之间的边没有方向且顶点集和边集共同构成该图结构
完全二叉树是除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树
算法效率是指算法执行所需的时间和空间资源，反映算法在不同规模数据下运行的快慢和对系统资源的消耗程度
线性查找是从数据序列的第一个元素开始依次逐个与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法
图的核心特征是由顶点集合以及顶点之间的边集合所构成，顶点表示事物，边表示事物之间的关系，图中的顶点之间通过边相互连接，体现了各个
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表
数据类型的特点的核心特征包括具有特定的数据表示形式、定义了一组操作以及规定了数据的取值范围
数据的逻辑结构的定义的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，仅关注数据元素
数组是由相同类型的数据元素组成的有序集合，具有存储相同类型数据、元素有序排列且有固定存储位置和大小等核心性质
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即对于深度为i的节点
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据从而实现高效的查找操作
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型
叶子节点是树结构中没有子节点的节点
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点
线性结构是一种数据结构，其核心特征为数据元素之间存在一对一的线性关系，有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意
回路是从某节点出发又回到该节点的闭合路径
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点可
在树形数据结构中，对于某一节点而言其直接连接且位于其上方的节点就是该节点的父节点
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而变化的趋势
回路是在图中从某顶点出发又回到该顶点的路径
稳定性是指在数据结构中，对于相等的元素，在排序前后它们的相对位置保持不变的性质
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，其右子树中所有节点的值均大于该节点的值
顺序查找的核心特征是从数据序列的起始位置开始，依次逐个检查每个元素，直到找到目标元素或遍历完整个序列为止
回溯法基础是一种通过尝试所有可能的解空间路径来求解问题的方法，其核心特征是在搜索过程中，一旦发现当前部分解无法导致完整的有效解，
引用是给已存在对象起的一个别名，对引用的操作实际上就是对其所引用对象的操作，引用必须在定义时初始化且初始化后不能再引用其他对象
平衡二叉树是左右两个子树高度差绝对值不超过1的二叉树
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
稳定性特点核心概念是系统受干扰后能恢复原态
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，
二叉树遍历是按特定顺序访问二叉树中所有节点的操作
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的；互异性即集合中的元素互不相同；无序性即集合中的元素没有顺序之分
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针，分别指向前一个节点和后一个节点，从而形成双向链接关系，便于在两个
图的边是连接图中两个顶点的无序对或有序对表示图中顶点之间的关系
深度优先搜索沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径
二叉树是一种每个节点最多有两个子树的树形结构
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点集合不能为空，顶点间的关系集合描述了顶点之间的连接方式
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
有向图的核心性质是其边具有方向性，即从一个顶点指向另一个顶点，这种方向性决定了图中顶点之间的关系和路径走向
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构
数据逻辑结构核心概念是数据元素间逻辑关系
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构
图的顶点是图结构中的基本元素，它可以表示各种对象，并且通过边与其他顶点相连以构成图的结构
算法效率的特点的核心特征包括时间效率和空间效率，时间效率体现为算法执行时间随输入规模增长的变化情况，空间效率体现为算法执行过程中所需存储空间随
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点后回溯到前一步再选择其他路径
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，其核心性质包括数据封装性、信息隐蔽性和抽象性，数据封装
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素
循环链表是一种首尾相连的链表，无明显头指针和尾指针
指针是一种变量，其值为内存中另一个变量的地址
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够
算法效率的特点的核心特征包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需的额外空间随
二叉搜索树中每个节点左子树值小于该节点右子树值
线性表是零个或多个数据元素的有限序列
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，其余节点分为m（m≥0）个互不相交的有限集合
树的节点是树结构中的数据元素，包含数据项及指向子节点的分支
子节点是树结构中直接连接在某一节点下方的节点
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于
指针的核心性质是其存储的是变量的内存地址，通过该地址可以对所指向的变量进行间接访问和操作
简单排序是对一组数据按照特定规则进行排列的操作，其核心特征在于通过比较数据元素之间的大小关系，依据设定的排序准则，逐步将数据调整为有序序列
树的查找是在给定的树结构中寻找满足特定条件（如等于某个特定值等）的节点的操作过程
数据类型是对数据的种类及操作方式的规定 
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，其特点的核心性质
堆是一种特殊的数据结构，它满足父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值这一核心性质
子节点的核心性质是其与父节点存在特定关联关系且在所属数据结构层次中有明确位置和作用，是构成整体结构的重要组成部分，在数据的组织和
动态规划入门是通过分解问题记录子问题解以求解复杂问题
根节点是树结构中没有前驱节点且唯一直接位于树顶端的节点
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左
线性结构中数据元素存在一对一的线性关系
交换排序通过比较元素并交换不满足顺序要求的元素位置来逐步将数组或序列调整为有序状态其核心性质是相邻元素间的比较与交换操作使得较大元素不断
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后
引用是一种给已存在的对象起别名的机制，通过引用可以使用该对象而无需额外的间接访问操作，它本质上是对象的一个替代名称，使得在代码
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是
动态规划入门的核心特征是将问题分解为相互重叠的子问题，通过求解子问题并保存其解，避免重复计算，从而高效地解决原问题，通常采用自
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系
穷举法是对所有可能情况逐一测试以求解问题
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
交换排序的核心性质是通过比较元素并在必要时交换它们的位置，逐步将无序序列转变为有序序列
迭代法是一种通过从一个初始估计值开始，按照一定的迭代公式或规则不断重复计算，逐步逼近问题的精确解的方法，其核心特征是利用前一步的
算法效率是指算法执行所需要的时间和空间资源的量度它反映了算法在不同规模输入下的运行性能包括时间复杂度和空间复杂度等方面
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
父节点具有比子节点更高一层的层级关系且在数据结构中处于直接连接子节点并对其进行管理或关联的位置
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其每一层上的节点数都达到最大值，即第i层有2^(
算法效率指算法执行时间及占用资源随问题规模变化情况
用矩阵表示顶点间邻接关系且元素值反映连接情况
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素
堆的核心特征是父节点的值大于或等于（大顶堆）其子节点的值，或者父节点的值小于或等于（小顶堆）其子节点的值
线性表的特点的核心特征是有且仅有一个开始节点和一个终端节点，并且除开始节点外每个节点有且仅有一个直接前驱，除终端节点外每个节点有
引用是一种给已存在对象起别名的机制，其特点包括与被引用对象绑定后具有相同内存地址，对引用的操作等同于对被引用对象的操作，且引用
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树
操作效率是衡量单位时间内操作产出及资源利用的指标
算法效率是指算法执行所需的时间和空间资源的多少，时间效率衡量算法执行时间随问题规模增长的变化情况，空间效率衡量算法执行过程中所需的额外空间
子节点是树结构中直接连接在父节点之下的节点，具有与父节点存在特定连接关系、在树的层级结构中有其特定位置且可能存在多个兄弟子节点
迭代法是一种不断用变量的旧值递推新值的方法，其核心特征是通过重复执行特定的计算步骤，从初始值出发逐步逼近问题的解，每次
栈的核心特征是后进先出即最后进入栈的元素最先被弹出，且操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和出栈操作
完全二叉树是除最后一层外每层节点数满且最后一层靠左对齐的二叉树
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点
将未排序数据插入已排序序列的合适位置完成排序
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h
集合具有确定性、互异性和无序性，确定性指集合中的元素必须是确定的，互异性指集合中的元素互不相同，无序性指集合中的元素没有顺序之分
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
指针的核心性质是其存储内存地址并可通过该地址访问和操作内存中的数据
非线性结构的核心性质是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，直到遍历完所有节点
有向图是由顶点集和有向边集组成的一种数据结构其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向关系
树的核心性质是树中任意两个顶点之间存在唯一的一条简单路径
路径是连接不同节点或位置具有特定走向的线路
冒泡排序是一种比较相邻元素大小并将较大元素逐步交换到右侧，重复此过程直到整个数组有序的排序算法
迭代法是一种通过从一个初始估计值开始，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问
完全二叉树是深度为k的有n个结点的二叉树，对于树中的每个结点，如果其序号i满足1≤i≤n，且i>1时其父结点序号
迭代法是一种通过从一个初始估计值开始，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法
线性查找的核心性质是从数据序列的起始位置开始，依次对每个元素进行比较，直到找到目标元素或遍历完整个序列
循环链表是一种首尾相连的链表结构
在树形结构中直接位于某节点之上的节点即父节点
邻接矩阵是用于表示图的一种矩阵，其核心性质为对于一个具有n个顶点的图，邻接矩阵是一个n×n的矩阵，若顶点i与顶点
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步并探索其他路径，其核心性质是优先访问深度大的节点，通过
有向图的核心特征是其边具有方向性，即从一个顶点指向另一个顶点，这种方向性决定了图中顶点之间的关系是单向的，不同于无向图边
线性结构的核心特征是数据元素之间存在一对一的线性关系，有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有一个前驱元素，除
穷举法是一种通过对所有可能的情况进行逐一列举和检验，从而找出满足特定条件的解的算法策略
图的边是连接图中两个顶点的元素具有能够建立顶点间关联关系的核心性质
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
动态规划入门是通过分解问题利用最优子结构求解的方法
交换排序是一种通过不断比较和交换元素位置来将无序数据序列转换为有序序列的排序方法其特点在于相邻或不相邻元素之间基于比较结果进行位置互换以逐步
回路是图中一条起点和终点相同的路径
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法
树是n（n≥0）个节点的有限集，有根且关系唯一
数据的逻辑结构是指数据元素之间抽象化的相互关系，它不考虑数据在计算机中的存储方式，仅关注数据元素之间的逻辑关系
时间复杂度是衡量算法执行时间随输入规模增长的变化
穷举法是对所有可能情况逐一检验以求解问题的方法
加权图中边被赋予权重以反映某种属性或代价
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，
空间复杂度是指算法运行过程中所需的最大存储空间
树中包含数据及指向子节点关系的基本单元叫节点
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改元素
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表
满二叉树是除叶节点外每个节点都有两个子节点的二叉树
映射是一种特殊的二元关系，它在两个集合之间建立对应关系，使得对于一个集合中的每一个元素，在另一个集合中都有唯一确定的元素与之对应
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，尽可能深地探索一条路径，直到无法继续或达到目标节点，然后
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡
子节点是树状结构中直接连接在父节点之下的节点
简单排序是对数据序列进行比较和交换等操作以逐步将数据按特定顺序排列的排序方法，其特点是实现相对简单、基本思想易于理解但通常效率不如一些
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况体现出算法执行时间的增长趋势与输入规模之间的关系特点
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻的数据结构
顺序查找是从数据序列的一端开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列为止的查找方法
路径是图中从一个顶点到另一个顶点的顶点序列，序列中相邻顶点之间存在边且该序列表示了从起始顶点到终止顶点的一条通路，其特点包括
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点的路径且路径中至少包含一条边
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，分别对这些子问题
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对
数据类型的核心特征是定义了一组值以及可作用于这些值的一组操作
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法，其核心特征是对问题的所有可能情况进行全面无
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系可以是有向边或无向边，顶点集合不能为空且顶点间关系集合定义了顶点
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此操作将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）从而实现
集合是具有某种特定性质的具体或抽象对象汇总
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素
算法效率的特点是指算法执行时间随问题规模增长的变化趋势以及占用资源如内存等方面的特性包括时间复杂度和空间复杂度等综合表现
非线性结构的核心特征是存在至少一个数据元素有不止一个前驱元素或不止一个后继元素或者元素之间的关系不满足线性关系
邻接矩阵是用于表示图的一种矩阵，其中矩阵的行和列分别对应图的顶点，矩阵元素的值表示对应顶点之间是否存在边（对于无向图，若
树的高度是从根节点到最远叶节点的最长简单路径上边的数目
操作效率特点核心概念是反映操作快慢及效果的特性
将问题分解为子问题求解再合并得到原问题解的策略
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它描述了数据在存储器中的存储方式，如
算法效率是指算法执行所需的时间和空间资源的量度，反映了算法在解决特定问题时的优劣程度
路径是图中顶点与顶点之间经过边的有序序列且路径长度是路径上边的数目
集合是由确定的不同对象所构成的整体
数据结构中稳定性是指在排序过程中，相等元素之间的相对顺序在排序前后保持不变的特性
回溯法基础特点是按条件深度优先搜索并适时回溯
连通图的核心性质是图中任意两个顶点之间都存在路径相连
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找
递归基础是递归函数中最简单的情况，通常是函数直接返回一个已知值而不再进行递归调用，其核心性质是为递归函数提供了一个终止条件，使得递归调用
树的查找的核心特征是基于树的层次结构，从根节点开始，按照特定规则（如比较节点值等）逐层向下搜索，以确定目标元素是否存在于树
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
邻接表是用链表存储图中顶点及与其邻接顶点信息的数据结构
比较排序是基于元素间比较来确定元素相对次序从而进行排序的排序方法
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表
稳定性是指在排序算法中，相等的元素在排序前后相对位置保持不变的特性
存储结构是指数据元素及其关系在计算机存储器中的表示形式
双向链表是节点包含前驱和后继指针的链表结构
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个
引用是给已存在的变量起一个别名，通过该别名可以访问和操作原来的变量
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
线性结构是一种数据结构，其核心特征为数据元素之间存在一对一的线性关系，有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法
图的顶点是图结构中的基本元素，是图中各个节点的统称，它们通过边相互连接，共同构成图的拓扑结构，每个顶点可以具有不同的属性和特征
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有
回路是从一点出发经一系列节点后又回到该点的路径
快速排序是通过一趟排序将数组分为两部分并递归排序
将问题分解为子问题求解后合并子问题解来解决原问题
树的度是树内各结点的度的最大值其中结点的度是指结点拥有的子树的数目
线性表是一种由有限个数据元素组成的序列，其中每个元素都有唯一前驱和后继（除第一个元素无前驱，最后一个元素无后继）
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其存储结构采用顺序存储方式，即把逻辑上相邻的元素存储在物理位置上
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数
冒泡排序的核心性质是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序都会将未排序数据中最大（或最小）的元素“冒泡”到
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的
连通图是任意两个顶点之间都存在路径的图
路径是图中顶点之间的边序列或顶点序列
深度为k有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点一一对应时为完全
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表
比较排序是基于元素比较来确定元素相对位置的排序方式
快速排序的核心特征是通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后分别对这两部分
链表是一种通过指针将若干个节点按顺序连接起来的数据结构每个节点包含数据和指向下一节点的指针
无向图中边没有方向，顶点间关系是对称的
树的节点是树结构中的基本组成单元包含数据元素及指向其子节点的分支
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
无向图是一种图结构，其中边没有方向，顶点之间的连接是双向的，任意两个顶点之间若存在边则可从其中一个顶点到达另一个顶点且反之
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
父节点是在树形结构中，有其他节点直接连接在其下方并以其为直接前驱的节点，这些连接在其下方的节点即为该父节点的子节点，
叶子节点是树中没有子节点的末端节点
根节点是树结构中的起始节点，没有父节点，是整个树的入口点，它与其他节点通过边相连并处于树的最顶层位置，是树状结构中
图的边是连接图中两个顶点的线，其具有方向性或无方向性且可能有权值用于表示顶点间的某种关系或代价等
穷举法的核心特征是对问题所有可能的情况进行逐一列举和检验，通过遍历所有可能解来找到符合条件的答案
堆排序是利用堆结构进行排序的算法
指针是一种变量，其值为内存中另一个变量的地址
树是一种非线性的数据结构，它有一个根节点，并且每个节点可以有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式
图中任意两点都存在路径可相互连通的图是连通图
简单排序是对一组数据按特定规则进行排列，其核心特征是通过比较和交换数据元素的位置，将无序的数据序列逐步转换为有序序列，在排序过程中基于
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径，没有回路
树中各节点度的最大值就是树的度
叶子节点是树结构中没有子节点的节点
队列特点是先进先出，元素按顺序进出
有向图是一种由顶点集合及顶点间的有向边构成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点
有向图是一种图结构其中边具有方向即从一个顶点指向另一个顶点
完全二叉树的核心性质是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数
非线性结构中各数据元素之间的关系不再是一对一的，可能存在一对多、多对一或多对多的关系
比较排序是基于元素之间的比较操作来确定元素的相对次序从而实现排序，其核心性质是决策树模型中叶子节点表示最终排序结果，内部节点为元素间的
操作效率的核心性质是在一定时间内完成更多有效操作以实现资源的高效利用和目标的快速达成
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的边数
路径是在图或树等数据结构中，从一个顶点（或节点）出发，沿着边（或分支）连续经过一系列顶点（或节点）最终到达另一个顶点（
时间复杂度是指在计算机科学中，算法执行时间随问题规模增长而增长的变化程度的一个度量
邻接表是用链表存储图中顶点及与它相邻接顶点的一种数据结构
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个
引用是一种变量，其值为其他变量的内存地址，通过该变量可访问其所引用的变量，从而对引用的变量进行操作
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒
算法效率的核心性质是指算法执行所需要的时间和空间资源与问题规模之间的关系
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，其右子树中的所有节点的值均大于该节点的值
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心特征是将问题的所有可能情况无遗漏地进行
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况反映算法执行时间随问题规模增长的变化趋势
引用是一种给已存在对象起别名的机制，其特点包括与被引用对象绑定后具有相同内存地址，对引用的操作等同于对被引用对象的操作，通过引用
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称从v到w是可达的
图中参与构成边且具有某种标识的基本元素叫顶点
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点
邻接表是一种用于表示图的数据结构，它为图中的每个顶点建立一个单链表，链表中的每个节点表示与该顶点相邻接的顶点，通过这种方式来直观
图的顶点是图结构中用于表示数据元素的基本单元，是构成图的重要组成部分且在图的各种操作和关系中具有关键作用
邻接矩阵是用一个二维数组来表示图中顶点之间的邻接关系，矩阵中元素的值表示对应顶点之间是否存在边或弧以及边或弧的相关信息，
操作效率的定义的核心性质包括完成特定任务所需时间短、资源消耗少、能以较高速度和质量达成目标等方面
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以链表形式直观地表示图中
根节点是树结构中没有父节点且处于树的最顶端具有特殊地位的节点
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法
栈是一种只能在一端进行插入和删除操作的特殊线性表
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其元素值根据顶点间是否有边相连等情况来确定
集合是由确定的、互不相同的对象所组成的整体这些对象具有明确的定义使得对于任何一个对象都能明确判断它是否属于该集合
指针是存储变量内存地址并通过该地址访问变量的变量
分治策略是将问题分解为子问题求解再合并结果
在树形数据结构中，若存在一个节点，有其他节点直接连接到它，那么该节点就是这些直接连接节点的父节点
哈希表是通过哈希函数将键映射到特定位置存储数据的数据结构
比较排序是通过比较元素大小来确定其最终位置的排序方法
堆排序的核心性质是堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶堆）
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值
堆是一种特殊的数据结构，父节点键值大于或小于子节点
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回
选择排序的核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系
深度优先搜索是一种在图或树等数据结构中进行遍历或搜索的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续
单链表是一种每个节点只含一个指针域的线性表
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性
顺序表是一种线性表，其核心特征是逻辑上相邻的元素在物理存储位置上也相邻，它用一组地址连续的存储单元依次存储线性表中的数据元素，
抽象数据类型具有数据封装、数据抽象、信息隐蔽、使用与实现分离等核心特征，它将数据和操作数据的方法封装在一起，对外提供统一的接口，隐藏数据
子节点是树结构中直接连接在某个父节点之下的节点，具有直接与父节点相连且处于父节点下一层级的特点
贪心策略的核心性质是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，所做出的仅是在某种意义上的局部最优
快速排序的核心性质是通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后对这两部分分别
二叉搜索树中每个节点左子树值小于该节点右子树值
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表
在树形结构中直接位于某节点之上的节点就是父节点
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时
图由顶点集和边集组成，顶点集中的元素称为顶点，边集是顶点对的集合，图中的边可以是有向的也可以是无向的，有
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题形式相同，递归地解这些子问题，
稳定性的特点的核心性质是在一定条件下系统或事物能够保持其原有状态或特性不发生显著变化
树是一种分层结构有根且子节点唯一或多的非线性数据结构
每次从未排序数据中选最小（大）值放已排序序列末尾
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法
在树形结构中，根节点是没有前驱节点且位于树顶端的起始节点
存储结构的特点的核心特征是数据元素之间的逻辑关系在计算机中的存储表示，包括顺序存储结构中数据元素按逻辑顺序依次存放在一组连续存储单元里，链式
归并排序是将一个序列分成两个子序列分别进行排序，再把已排序的子序列合并成一个最终的有序序列，其核心特征是通过递归地将序列不断
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征是衡量算法运行所需的额外空间随输入规模增长的变化情况
堆的核心特征是对于堆中的每个节点，其值大于或等于其子节点的值（最大堆）或者小于或等于其子节点的值（最小堆），并且堆是一种完全
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直至找到目标节点或遍历完所有节点，它通过
动态规划入门是一种通过将问题分解为相互重叠的子问题并利用子问题的解来求解原问题，以优化解决具有最优子结构性质问题的算法策略
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分
堆的核心特征是对于堆中的每个节点，其值都大于或等于其子节点的值（大顶堆），或者小于或等于其子节点的值（小顶堆）
操作效率的核心特征是在一定时间内以最少的资源消耗（包括人力、物力、时间等）完成尽可能多的有效操作，且操作过程具有高度的准确性、流畅
算法效率是指算法执行所需要的计算机资源量，包括时间资源和空间资源，通常分别用时间复杂度和空间复杂度来衡量
算法效率的特点是指算法在执行过程中所表现出的与时间和空间相关的特性，包括时间复杂度反映算法执行时间随输入规模增长的变化趋势以及空间复杂度
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点
回溯法基础是一种通过逐步构建问题的解空间并在构建过程中根据约束条件和目标条件进行搜索，当发现当前构建的部分解无法满足要求时就退回上
操作效率是指在一定时间内完成特定操作的数量或质量与所投入资源（包括人力、时间、设备等）的比率所反映出的效能情况
顺序表是用一组地址连续的存储单元依次存储数据元素
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在执行过程中所需的额外空间随问题规模增长的变化情况
指针是一种变量，其值为内存中另一个变量的地址
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值
从根节点到最远叶子节点所经最长路径包含的节点数为树的深度
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
图的顶点是图结构中的基本元素，它可以用来表示各种实体，并且与其他顶点通过边相连以构成图的结构
比较排序的核心性质是其排序过程仅通过元素间的比较来确定元素间的相对次序
树中各节点度的最大值就是树的度的核心概念
用矩阵表示顶点间邻接关系的一种数据结构
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
完全二叉树是一种特殊的二叉树，其特点为：除最后一层外，每一层上的节点数均达到最大值；最后一层上的节点都集中在该层最
图由顶点及顶点间边构成的一种数据结构
叶子节点是树结构中没有子节点的节点
叶子节点是树结构中没有子节点的节点
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况，反映了算法执行时间随问题规模增大而呈现的变化趋势
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值
回溯法基础的特点的核心特征是在搜索过程中通过深度优先策略逐步构建解空间树，在每一步决策时试探各种可能情况，若当前选择导致无法继续构建
图的边是连接图中两个顶点的线，具有方向性或无方向性，且可能有权重或无权重等特点
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在运行时所需的额外空间随输入规模增长的变化情况
图的顶点具有可作为图的基本元素用于构建图结构、可通过边与其他顶点建立连接关系以及在图的各种操作和算法中发挥关键作用等核心性质
交换排序是一种通过比较元素并交换不满足顺序要求的元素位置来逐步将无序序列转变为有序序列的数据排序方法
叶子节点是数据结构中树状结构里没有子节点的节点
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
穷举法的核心性质是对问题所有可能的情况进行逐一列举和检验以找到符合条件的解
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过分别解决这些子问题，然后将子问题的解合并得到原问题解的一种
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希
简单排序是对数据序列通过特定比较和交换等操作逐步将元素按序排列的排序方法
图的顶点是图结构中的基本数据元素，它可以用来表示各种实体或对象，并且通过边与其他顶点相连以构成图的结构
动态规划入门是通过分解问题记录子问题解以求解最优解
递归基础是递归算法中存在的一种情况，即当问题规模减小到某一特定值时，可直接得出问题的解而无需再次递归调用
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征
树的节点是包含数据以及指向其子节点的指针（若存在子节点）的基本数据结构单元
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
数据的物理结构的核心特征是数据元素在计算机中的存储方式以及数据元素之间的逻辑关系在计算机中的存储表示，包括数据元素的存储位置以及它们之间的连接关系
存储结构是指数据元素及其关系在计算机存储器中的表示，其核心性质包括数据元素的表示以及数据元素间关系的表示，它决定了数据在计算机中的存储方式和
父节点是树结构中位于某个节点之上，与该节点存在直接连接关系且具有较高层级的节点，其具有能够直接衍生出子节点的特点，在树的层级
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树
树中各结点度的最大值就是树的度
引用是给已存在变量起的一个别名，对引用的操作实际上就是对其引用的变量的操作，引用必须在定义时初始化且初始化后不能再引用其他变量
树是一种分层结构，有根且子树不相交
连通图是图中任意两个顶点之间都存在路径的图
栈是一种后进先出的数据结构，其核心性质为元素按照后进先出的顺序进行入栈和出栈操作
从根节点到最远叶节点所经最长路径上的节点数为树的深度
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法
堆是一种特殊的数据结构，它满足父节点的值大于或小于其子节点的值（大顶堆或小顶堆），并且具有完全二叉树的结构
存储结构特点指数据在存储器中存储方式及相互关系
数组是相同类型数据的有序集合通过下标访问
树的度是指树中所有结点的度的最大值其中结点的度是该结点拥有子树的数目
树的查找是在树形结构中基于节点间层次关系与连接特性，通过特定规则从根节点或指定起始节点出发，沿着分支路径遍历节点以确定目标元素是否存在
叶子节点是数据结构中没有子节点的节点
无向图是一种图结构其中任意两个顶点之间的边没有方向即顶点对(u,v)和顶点对(v,u)表示同一条边
二叉树遍历是按特定顺序访问二叉树中所有节点
数据的物理结构的特点的核心特征是描述数据在计算机存储器中的存储方式包括顺序存储链式存储索引存储散列存储等体现数据元素之间的逻辑关系以及数据元素在
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应
集合是由确定的、彼此不同的一些对象所组成的整体
算法效率的特点包括时间复杂度反映算法执行时间随问题规模增长的变化趋势空间复杂度体现算法执行过程中所需存储空间随问题规模增长的变化情况最优情况、最坏情况和
映射具有对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应这一核心性质
邻接矩阵是表示图的一种方式，对于有\(n\)个顶点的图，其邻接矩阵是一个\(n\times n\)的矩阵，若顶点
子节点是树状结构中直接位于某个节点下方的节点
连通图中任意两点之间都存在路径可相互连通
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值
递归基础是递归算法中最简单情况，通常是无需递归调用即可直接得出结果的终止条件
集合是具有确定的、互异的、无序的元素总体
线性表是数据元素按线性关系排列的有限序列
堆是一种特殊的数据结构，其核心特征为：父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值，并且堆通常采用
树是一种分层数据结构包含根节点及子节点
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来访问和修改元素，内存中存储紧凑且连续，在数据量较大时可方便地批量处理
非线性结构中至少存在一个数据元素有两个或两个以上直接前驱或直接后继即各数据元素之间的逻辑关系不再是线性的
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步转换为有序序列，其特点包括在排序过程中相邻元素不断比较大小，若顺序错误则进行
操作效率的特点是指在完成特定任务或一系列操作过程中，所展现出的关于速度、准确性、资源利用等方面的综合特性表现
抽象数据类型定义的核心性质包括数据对象集、数据关系集以及定义在数据对象集和数据关系集上的基本操作集
引用是给已存在的变量起一个别名，对引用的操作实际上就是对其所引用变量的操作，引用必须在定义时初始化且一旦初始化便不能再引用其他变量
二叉树的核心性质是在二叉树的第i层上至多有2的i-1次方个节点，深度为k的二叉树至多有2的k次方减1个
归并排序是将数组分成子数组排序后再合并的排序算法
数据类型是一组值的集合以及定义在这组值上的一组操作的总称
数据的物理结构是指数据在计算机中的存储方式包括数据元素的存储表示及其逻辑关系的表示
深度优先搜索是一种从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索算法
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
堆排序是利用堆结构特性进行排序的算法
递归基础是递归算法中满足特定条件的初始情况，通常是问题规模足够小以至于可以直接得出结果而无需进一步递归调用的情况
堆是一种特殊的数据结构，它满足对于堆中任意一个非叶子节点，其值都大于或等于其子节点的值（大顶堆）或者小于或等于其子节点的值（
图的顶点是图结构中的基本元素，是图中数据的载体，它们通过边相互连接以构成图的整体结构
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响
引用是为对象起的别名，通过引用可操作原对象
用矩阵表示图中顶点间邻接关系，元素值反映连接情况
数据的物理结构的特点的核心特征是描述数据在计算机内存或存储设备中的实际存储方式，包括数据元素的存储位置以及它们之间的存储关系，它与数据的
二叉树是一种每个节点最多有两个子树的树形结构
链表的核心特征是通过指针将一系列节点连接起来，每个节点包含数据和指向下一个节点的指针，从而形成一个逻辑上连续的数据结构
递归基础是递归函数中无需再次递归调用的终止条件
比较排序是基于元素之间的比较来确定元素的相对顺序从而实现排序的排序算法其核心特征是通过比较元素大小来逐步构建有序序列
父节点是在树形结构中直接有子节点与之相连且处于较高层次或位置能对其下一层子节点起到统领、关联或作为其源头等作用的节点
堆是一种优先队列数据结构，其特点是父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
根节点是树结构中的起始节点，它没有父节点，是整个树结构的入口点，所有其他节点都直接或间接连接到根节点，它处于树的顶层位置
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序
冒泡排序比较相邻元素大小，若顺序错误就把它们交换过来，对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样一趟下来最后
树的查找特点是基于树的结构特性通过特定的遍历或比较方式在树中定位特定元素以确定其是否存在或获取其相关信息
在图论中回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点且路径中各边互不相同的路径（若允许边重复
堆是一种特殊数据结构，父节点键值大于或小于子节点
栈是一种后进先出的数据结构，其核心性质为元素的插入和删除操作都在栈顶进行，新元素总是被添加到栈顶位置，而删除操作也总是
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置
回路的核心性质是从回路中任意一点出发，沿着回路的边前进，最终能回到出发点且所经过的边互不重复（简单回路）或经过的边可以重复（
线性查找是从数据序列的起始位置开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只期望通过局部最优解来达到全局最优解
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列仍未找到
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树的层次结构特性及节点分布的纵向跨度
稳定性指系统受干扰后能恢复或保持原有状态的特性
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个
图的边是连接图中两个顶点的线段或弧表示的一种关系，其具有方向或无方向且可以有权值或无权值等特点
完全二叉树是深度为k的，有n个结点的二叉树，对树中的结点按从上至下、从左到右的顺序进行编号，如果编号为i（1
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点，若设二叉树的
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历
无向图的核心特征是其边没有方向，即任意两个顶点之间的边是双向的，顶点之间的连接关系是对称的
比较排序是基于元素间比较来确定元素相对次序从而将输入序列转换为有序序列的排序算法
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即各数据元素之间的逻辑关系不再是线性的一对一关系
根节点是树结构中位于顶端没有父节点的节点
回溯法是通过尝试多条路径来求解问题并在不满足条件时回退的方法
栈的核心特征是具有后进先出的特点，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
二叉树遍历是按特定顺序访问其所有节点的操作
递归基础是递归算法中存在的一种简单情况，在此情况下递归函数可直接返回一个确定值而无需再次调用自身
用矩阵表示顶点间邻接关系的数据结构叫邻接矩阵
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，分别求解这些子问题，然后将
简单排序通过比较交换元素位置逐步实现有序排列
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数
比较排序的核心性质是其排序过程仅通过元素间的比较操作来确定元素的相对次序
操作效率特点核心概念是衡量操作完成的快慢程度
线性结构的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和一个直接
迭代法的核心特征是基于已有的初始值，按照固定的迭代公式不断重复计算，逐步逼近问题的解，每次迭代的结果都作为下一次迭代的输入，直到
树的高度是从根节点开始，沿着最长简单路径到最远叶节点所经过的边的数目
回溯法基础的定义的核心性质是在问题的解空间树中按深度优先策略搜索，以找到问题的解，在搜索过程中，通过对部分解的可行性判断
树是一种分层结构的非线性数据结构包含根节点等
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，
堆的核心特征是对于堆中的每个节点，其值大于或等于其子节点的值（大顶堆），或者小于或等于其子节点的值（小顶堆），并且堆
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问
简单排序通过比较与交换逐步将数据按序排列
有向图是由顶点和有方向的边组成的图结构
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的
栈是一种限定仅在表尾进行插入和删除操作的线性表
在树形结构中直接位于某节点之上的节点就是父节点
有向图中边具有方向，顶点间关系有特定指向
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而
有向图是一种由顶点集合及顶点间的有向边构成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点
抽象数据类型是数据及操作封装，强调抽象层次
路径具有从起点到终点的特定走向，其长度由所经过的边或节点数量决定，具有唯一性，且连接着特定的节点或区域，能够反映出在相应结构
图的顶点是图结构中的基本数据元素，它可以代表各种实体或对象，并且与其他顶点通过边相互连接从而构成图的结构
数据类型是对数据的种类及操作方式的定义
回溯法基础的特点的核心性质是在问题的解空间树中，按照深度优先策略，从根节点出发搜索解空间，通过判断当前节点是否满足约束条件和目标
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树
图的顶点是图结构中的基本元素，用于表示某个实体或对象，它具有标识性且能与图中的其他顶点通过边建立关联关系从而构成图的结构
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
简单排序的核心特征是通过比较元素之间的大小关系，将无序序列逐步转换为有序序列，其排序过程相对直观和基础，通常基于相邻元素的比较与交换操作
二叉树每个节点最多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒
叶子节点是树结构中没有子节点的节点
在树形数据结构中父节点是其直接子节点的上一级节点且拥有指向这些子节点的引用或链接
数据逻辑结构特点是数据元素间抽象关系的体现
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数
加权图是顶点和边都带有权重属性的图结构
在树形结构中，父节点是直接有子节点连接在其下方，且自身不是任何其他节点子节点的节点
比较排序是基于元素间比较来确定元素相对次序从而将给定元素序列重新排列成有序序列的排序算法
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中数据元素之间存在一对一的线性关系
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体
二分查找是在有序数组中通过不断将区间分成两半，每次比较中间元素与目标值，根据比较结果缩小查找区间，直到找到目标值或确定目标值不存在，其
空间复杂度是算法运行中所需额外空间随输入规模变化情况
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树
比较相邻元素大小，将较大元素逐步交换到右侧
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系集合以及对数据对象的基本操作集合所构成且仅通过这些基本操作来访问和处理数据对象
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，访问元素的时间复杂度为O
映射是一种元素对应关系一个集合到另一个集合的对应
递归基础是递归定义中确定的最简单情况，它直接给出问题在最小规模或最基本形式下的解，不依赖于递归调用，是递归过程能够开始并逐步展开
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中节点存放与该顶点相邻接的顶点
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，或者说数据元素之间的关系不是一对一的线性关系
堆是一种满足特定父子节点关系的完全二叉树数据结构
回路是在电路或系统中能形成电流循环的闭合路径
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而形成双向链接关系，使得可以双向遍历
在树形结构中位于顶层、没有父节点的起始节点是根节点
引用是对已存在内容的一种复用性指代方式
加权图各边有代表某种属性值的权重
有向图中边具有方向性，顶点之间的连接是单向的 
回溯法基础的特点的核心性质是在搜索过程中通过深度优先策略系统地尝试所有可能的解，当发现当前部分解无法导致可行解时就回溯到上一步
堆是一种特殊的数据结构，它满足父节点的值大于或小于其子节点的值（大顶堆或小顶堆），并且具有完全二叉树的形态
队列具有先进先出的特点，即先进入队列的元素先离开队列
比较排序是一种排序算法，其通过比较元素之间的大小关系来确定元素在排序序列中的最终位置
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而形成双向链接关系
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入
图的顶点是图结构中的基本元素，具有标识图中各个对象的作用，每个顶点都可以与其他顶点通过边建立连接关系，并且顶点之间的连接关系构成了
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次
时间复杂度的核心特征是衡量算法执行时间随输入规模增长的变化趋势，反映算法执行时间与输入规模之间的关系
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树
树的查找的核心特征是从根节点开始，按照特定规则遍历树的节点，通过比较节点的值来确定目标元素是否存在于树中，若存在则返回该节点
抽象数据类型的核心特征是将数据和操作数据的方法封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注如何使用这些接口来操作
图是一种由顶点集合及顶点间的关系集合组成的数据结构
数组是由相同类型的数据元素按一定顺序排列组成的有限序列
迭代法是一种不断用变量的旧值递推新值，通过重复执行特定计算步骤，从初始值出发逐步逼近问题解的方法
引用是对已存在变量或对象起一个别名，使不同名称可指向同一内存位置，对引用所做的操作等同于对其引用的变量或对象直接操作
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次
树的高度是从根节点到最远叶节点的最长简单路径上的边数
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，递归地求解这些子问题，然后将各个子
栈的核心性质是后进先出即最后进入栈的元素最先离开栈
二叉树每个节点最多有两个子节点
有向图是一种图结构，其边具有方向性，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，通过有向边
回溯法基础的核心性质是在问题求解过程中通过深度优先搜索尝试所有可能解，当发现当前部分解无法得到完整有效解时及时回溯到上一步重新选择，
数据的物理结构的核心特征是数据元素在计算机存储空间中的存储方式，包括数据元素自身值的存储表示以及数据元素之间关系的存储表示
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序
时间复杂度是指在计算机科学中，对于一个算法，随着输入规模的不断增大，其执行时间增长的量级所对应的函数，它用于衡量算法执行效率随输入规模变化
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表
贪心策略每步选当前最优解期望达全局最优
存储结构的核心特征是数据元素之间的逻辑关系在计算机中的存储表示以及数据元素在存储空间中的相对位置关系，它决定了数据在计算机中的存储方式和访问方式，
数据类型的定义具有一组值以及定义在这组值上的一组操作这一核心性质
引用具有指向同一对象节省空间共享数据等特点
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
完全二叉树是深度为k的有n个结点的二叉树，若按层次序编号后其所有结点均与深度为k的满二叉树中编号从1至n
穷举法的核心性质是对问题所有可能的解逐一进行检验以找出符合条件的解
贪心策略是指在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
引用是给已存在的变量起的一个别名，它和被引用的变量共享同一块内存地址
叶子节点是树结构中没有子节点的节点
按顺序逐个查找数据直至找到目标或遍历完所有数据
邻接表是用链表存储图中顶点及与其相邻顶点关系的数据结构
回路是在电路或系统中能形成电流循环的闭合路径
父节点是树状结构中位于某一节点之上，直接与该节点相连，具有指向其所有子节点的连接关系，且处于比子节点更高层级位置，能够对
交换排序是一种通过不断比较和交换元素位置来将无序数据序列调整为有序序列的排序方法
算法效率指算法执行时间和占用资源随问题规模变化情况
邻接矩阵的核心性质是其元素表示图中顶点之间是否存在边，若顶点\(i\)与顶点\(j\)之间有边相连，则邻接矩阵
操作效率的特点涵盖完成操作所需时间、资源利用情况、单位时间内完成操作的数量等方面，反映操作过程中资源投入与产出的关系及操作进行的快慢程度
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；若任意
空间复杂度的核心性质是衡量算法在运行过程中所需的额外空间随输入规模增长的变化情况
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，具有空间复杂度低、
栈具有后进先出的特点，其核心性质是元素按照后进先出的顺序进行入栈和出栈操作
深度优先搜索是一种在图或树等数据结构中，从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索
叶子节点是树结构中没有子节点的末端节点
二叉搜索树是一种二叉树，其每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值
线性结构数据元素之间存在一对一的线性关系
交换排序通过比较与交换元素位置将无序序列变为有序
穷举法的核心特征是对问题所有可能的解逐一进行尝试，通过检查每一个可能情况来找到符合条件的解，在面对问题时会遍历所有可能的取值
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，且每个节点有零个或多个子节点，除根节点外
递归基础的核心特征是存在一个或多个明确的终止条件，当满足这些条件时递归过程不再继续调用自身而是直接返回一个确定的结果
叶子节点是树结构中没有子节点的节点
动态规划入门是通过分解问题记录子问题解以求解复杂问题
比较相邻元素大小，将较大元素逐步交换到右侧
指针是存储变量内存地址并可通过它间接访问变量的变量
线性表的核心特征是具有有限个数据元素，这些元素之间存在一对一的线性关系，即除第一个元素外每个元素有且仅有一个直接前驱，除最后一个元素外
无向图的核心性质是任意两个顶点之间的边没有方向，即若顶点u和顶点v之间存在边，则从u到v和从v到u是同一条边
完全二叉树是除最后一层外每层节点数满且最后一层靠左对齐的二叉树
路径是连接起点与终点且具有方向等特性的线路
交换排序是一种通过比较和交换元素位置来将无序数组转变为有序数组的排序算法
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序算法
深度优先搜索是一种沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径重复该过程以遍历或搜索图或树等数据结构的搜索
父节点具有在树形结构中处于上一层级且与子节点存在特定关联关系的特点，它是子节点的直接前驱，对其下一层级的子节点起到组织
邻接表的核心性质是通过为图中每个顶点建立一个单链表，链表中每个节点包含与该顶点相邻的顶点信息，从而简洁高效地表示图的结构及
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问
按顺序依次查找数据序列中目标元素的查找方法
线性结构的特点的核心性质是数据元素之间存在一对一的线性关系，有且仅有一个开始和一个终端元素，除开始和终端元素外，每个元素有且仅有一个
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点指向另一个顶点的单向关系
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组
数据的物理结构的特点的核心特征是描述数据在计算机中的存储方式包括数据元素的存储及其关系的表示，它具体体现为顺序存储结构中数据元素按逻辑顺序
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度
数据的物理结构的特点的核心性质是描述数据在计算机存储器中的存储方式包括顺序存储链式存储索引存储散列存储等以及数据元素之间的逻辑关系如何在物理存储
比较排序的核心性质是其排序过程仅通过元素间的比较来确定元素间的相对次序
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的
连通图是指图中任意两个顶点之间都存在路径相连的图
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列
叶子节点是树结构中没有子节点的节点
数据逻辑结构指数据元素间抽象的逻辑关系
堆是一种完全二叉树，父节点键值大于或小于子节点
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，关系集合中的元素为边，边是顶点的无序对或有序对用于表示
图是由顶点集合及顶点间的关系集合组成的数据结构
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都
邻接矩阵是表示图的一种方式，其特点的核心性质包括：矩阵元素表示顶点间的连接关系，若两顶点相邻则对应位置元素为特定值（通常为
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表 
比较排序是基于元素之间的比较来确定元素在有序序列中的相对位置从而实现排序的一种排序算法
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点间的关系集合描述了顶点之间的连接情况
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个
回溯法基础的核心性质是在问题的解空间树中，按照深度优先策略从根节点出发搜索解空间，当搜索到某一节点时，先判断该节点是否
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置没有分支延伸，在数据处理和遍历等操作中作为最终的访问对象，代表了
回路是在图中从一个顶点出发，沿着边连续移动，最终回到起始顶点且经过的边不重复的路径
树的深度是从根节点到最远叶子节点的最长简单路径上的边数，体现了树在垂直方向上的层次数量，反映了树的结构复杂程度，不同
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，
动态规划入门的特点的核心性质包括最优子结构性质和重叠子问题性质，最优子结构性质指问题的最优解包含其子问题的最优解，重叠子问题性质指
满二叉树是除叶节点外每个节点都有两个子节点的二叉树
递归基础具有明确的终止条件，是递归过程能够结束的关键，其核心性质是为递归提供了一个不需要再次递归调用的初始状态或边界情况
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的一个元素与之对应
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是以深度为导向进行搜索，从起始节点开始，沿着一条路径尽可能深地探索，直到
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来
树的查找特点是基于树的结构特性通过特定的遍历或比较方式在树中定位特定元素以获取所需信息
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等
有向图是由顶点集和有向边集组成，其中有向边是顶点的有序对，每条有向边都有明确的方向，从一个顶点指向另一个
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树
有向图是一种由顶点集合及顶点间的有向边组成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点
图中参与构建结构并具有相关关系的基本元素就是顶点
数据类型特点包括取值范围、操作及表示形式等特性
交换排序是一种排序算法，其核心特征是通过比较元素并交换位置，逐步将无序序列转换为有序序列，在排序过程中不断地对相邻或不相邻的元素
图的边是连接图中两个顶点的线段或弧，它表示顶点之间的某种关系
树的查找是在给定的树结构中，按照特定规则寻找满足特定条件的节点的操作过程
父节点是在树形结构中，直接与某个节点相连且处于该节点之上一层的节点，具有比该节点更高的层级关系并能通过特定的连接关系追溯到它
树的高度是从根节点到最远叶节点的最长简单路径上边的数目
邻接表的核心特征是对于图中的每个顶点，用一个单链表来存储其所有邻接顶点，通过这种方式可以直观地反映出图中顶点之间的邻接
完全二叉树的核心特征是其叶子节点只能出现在最下层和次下层，并且最下层的叶子节点集中在树的左部，若设二叉树的深度为h
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个
数据的物理结构是数据在计算机中的存储表示形式，其核心性质包括数据元素的存储方式以及数据元素之间关系的表示方法
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质
树的查找的特点的核心特征是基于树的层次结构从根节点开始按照特定规则逐层或分支遍历节点以确定目标元素是否存在于树中
深度优先搜索是一种在搜索过程中优先沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到上一层继续探索其他路径的搜索策略
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法
连通图是一个无向图，若其中任意两个顶点之间都存在路径相连则为连通图
树的查找是在给定的树结构中，从根节点开始，按照特定规则遍历节点，以确定是否存在特定值的节点或获取满足特定条件的节点的操作过程
二叉搜索树是一棵空树或者是具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法
图的边是连接图中两个顶点的线段或弧，表示这两个顶点之间存在某种关系
数组是相同类型数据元素的有序集合
引用的核心特征是对已存在的特定内容（如语句、段落、数据、观点等）进行直接或间接的提及和使用，以借助其权威性、准确性、代表性等来
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数
抽象数据类型的核心特征是将数据及数据上的操作封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注接口所提供的功能而
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关且体现算法运行时除输入和程序代码外额外所需的存储空间
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完 
数据类型是对数据的种类及操作方式的规定
回溯法基础的特点的核心性质是在问题的解空间树中按照深度优先策略进行搜索以找到问题的解，通过不断尝试和回退来探索所有可能的解
堆是一种特殊的数据结构，它满足父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问所指向的变量，从而实现对内存中数据的灵活操作和管理
堆排序是利用堆结构进行排序的算法，先建堆再调整
叶子节点是树结构中没有子节点的节点
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构，其中边是没有方向的，即若顶点v和顶点w之间存在边，则从v到
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻的特点，其内存空间是连续分配的，支持随机访问，可通过下标直接定位到元素，插入和
树的节点是树结构中的基本单元，包含数据以及指向子节点的指针或引用从而构成树形层次关系
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法其特点在于利用前一步或前几步的计算结果
快速排序的核心特征是选择一个基准元素，将数组分为两部分，小于基准的元素放在左边，大于基准的元素放在右边，然后对左右两部分分别递归进行同样
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法
树的查找的特点的核心性质是若树中存在关键字值等于给定值的结点，则一定可以通过从根结点开始的一条路径找到该结点，若不存在则查找失败
有向图是一种由顶点集合及顶点间的有向边构成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点
比较排序是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置从而实现排序的一种排序算法
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素
邻接矩阵是表示图的一种方式，其特点的核心特征包括：是一个二维数组，行数和列数等于图中顶点的个数；矩阵中元素的值表示对应顶点
简单排序的特点的核心特征是通过比较元素大小并逐步交换位置来将无序序列转化为有序序列
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层
递归基础是递归算法中当问题规模达到最小时可直接得出结果而无需再次递归调用的特定情况
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值，即第i层有2^(i
在树形结构中位于顶端没有前驱的节点是根节点
广度优先搜索按层次依次扩展节点以寻找目标
叶子节点是树结构中没有子节点的节点
树的查找的核心特征是从树的根节点开始，按照某种特定规则（如二叉排序树的比较大小规则等）沿着树的分支逐步向下查找目标元素，通过
指针的核心性质是其存储的是变量的内存地址，通过该地址能够直接访问和操作所指向变量的值
穷举法的核心特征是对问题所有可能的解逐一进行尝试，通过检验每个可能解是否满足问题的条件来找出正确答案
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据
子节点是树结构中与父节点直接相连且处于较低层次的节点，它具有依赖于父节点的层级关系并可能有自己的子节点从而形成树形结构
存储结构是指数据元素及其关系在计算机存储器中的表示，包括数据元素的表示和关系的表示
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势它忽略算法中所有与机器相关的常量因素主要关注输入规模无限增大时算法执行时间的增长
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它是关于问题规模n的函数，记作S(n)，表示随问题规模n的增大，
图的边连接图中的两个顶点具有方向性或无方向性且每条边都有其特定的连接关系决定了图的结构和性质
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的节点数
根节点是树结构中处于顶层无父节点的起始节点
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此
路径是图中从一个顶点到另一个顶点的顶点序列且该序列中相邻顶点之间存在边
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树
映射的核心特征是对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向连接
图的边是连接图中两个顶点的线或弧，它描述了顶点之间的关系且具有一定的属性（如权重等）
稳定性是指在数据结构中，对于相等的元素，在排序前后它们的相对顺序保持不变的特性
在树结构中按特定规则确定目标元素是否存在的操作
穷举法是对所有可能情况逐一测试找出答案的方法
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的元素在物理位置上也相邻的数据结构
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样一趟
叶子节点是树结构中没有子节点的节点
简单排序是对数据序列通过比较和交换等操作逐步将元素按特定顺序排列的排序方法
图的边是连接图中两个顶点的线，它表示顶点之间的某种关系或连接
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质
时间复杂度衡量算法执行时间随输入规模增长的变化
存储结构是指数据元素及其关系在计算机存储器中的表示方式，它具有能体现数据元素间逻辑关系、规定数据的存储方式及相关操作等特点
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤
图的边是连接图中两个顶点的线或弧其表示顶点之间的某种关系并且在有向图中边具有方向无向图中边无方向且边可能具有
数据类型的完整定义是对数据的取值范围、数据元素之间的逻辑关系以及在这些数据上所允许进行的操作的明确规定
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点为数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，然后分别求解这些子
数据逻辑结构核心概念是数据元素间逻辑关系
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完 
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向连接
线性表的核心特征是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个元素外，集合中的每个数据
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
时间复杂度衡量算法执行时间随输入规模增长的变化
稳定性是指在数据结构的操作过程中，相同元素之间的相对位置在经过特定操作后保持不变的特性
路径是图中从一个顶点到另一个顶点的顶点序列
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值称为树的度
抽象数据类型具有数据对象、数据关系和基本操作这三个核心性质，数据对象是所操作数据的集合，数据关系定义了数据对象间的关系，基本操作是对
无向图是一种图结构，其中边没有方向，任意两个顶点之间的边是双向的，即若存在连接顶点u和顶点v的边，则从u到v和
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有
邻接矩阵的核心特征是能清晰直观地表示图中各顶点之间的邻接关系，矩阵中元素的值表示对应顶点之间是否存在边或弧，其行列分别对应
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的顶点，从而直观地反映图中各
树的高度是从根节点到最远叶节点的最长简单路径长度
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法
图的边是连接图中两个顶点的线条，其特点包括具有方向（有向边）或无方向（无向边），边可有权重表示顶点间关系的
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性可通过下标直接定位元素且存储空间连续紧凑
深度优先搜索是按路径延伸到最深层再回溯的搜索方法
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解的
选择排序的核心性质是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）
树中各结点度的最大值就是树的度的核心概念
二叉树每个节点最多有两个子节点且有特定层次结构
引用是给已存在的对象起一个别名，使得对引用的操作等同于对其所引用对象的操作，其核心特征包括：与被引用对象绑定，通过引用访问和操作
穷举法的核心特征是将问题所有可能的情况逐一进行尝试，通过对每一种情况进行检验，来找出符合条件的解
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右
平衡二叉树的核心特征是其每个节点的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
归并排序是将数组分成子数组排序后合并成有序数组的算法
叶子节点是指在树状结构中没有子节点的节点
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向
树的深度是从根节点到最远叶子节点的最长路径长度
指针是存储变量内存地址并通过该地址访问变量的变量
顺序查找是按顺序逐个检查数据元素以确定目标元素
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，任意一条边都连接图中的两个顶点，且顶点的个数可以是有限个也
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质
交换排序是通过元素交换位置实现排序的方法
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法
连通图是图中任意两点都存在路径可相互到达的图
存储结构特点指数据在存储器中存储方式及相互关系特性
时间复杂度是指执行算法所需要的计算工作量，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排
从数据序列首项起逐个检查直至找到目标元素的查找方法
线性表是一种具有零个或多个数据元素的有限序列，其特点包括有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有一个直接
二叉树是一种每个节点最多有两个子树的树形结构
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是比较次数与数据规模相关且平均
贪心策略是在每一步选择中都采取当前状态下的最优决策
哈希表通过哈希函数将键映射到特定位置以快速存取数据
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机的存储结构
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点间有且仅有一条路径相连，除根节点外
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，来快速定位目标元素的查找算法。其核心特征为：首先数组必须是有序的，
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构
图的边是连接图中两个顶点的线表示顶点间关系
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树
树中一个节点的子树数目称为该节点的度，树中节点的最大度数称为树的度
归并排序是将数组分治后合并以达有序的排序算法
引用是给已存在的对象起一个别名，通过引用可以使用该对象的原始名称来访问和操作它，其核心特征包括与被引用对象绑定且引用类型与被
树的高度是从根节点到最远叶子节点的最长简单路径上的边数
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）
父节点是在树形结构中，其直接有子节点与之相连，且对于子节点来说该节点处于上一级的节点，它在层级关系中具有高于其子节点的位置
二叉树是一种每个节点最多有两个子树的树形结构
比较排序是基于元素间比较来确定元素相对次序从而进行排序的算法
树中各节点度的最大值就是树的度
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大节点数
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解的一种策略
算法运行过程中所需的最大存储空间与数据规模的关系
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则
路径是图中顶点与顶点之间经过边的有序序列具有有向性或无向性且可能存在重复顶点和边的特点
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的
叶子节点是树中没有子节点的末端节点
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列
树的查找是在给定的树结构中，按照特定规则寻找满足特定条件的节点的操作过程
图的顶点是图结构中表示元素的基本单元
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的
穷举法是一种通过对问题所有可能情况进行逐一列举和检验，从而找出符合条件的解的解题方法
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左
图的核心性质是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点之间通过边进行连接，边可以具有权重等属性，图可分为有向图和
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法
递归基础是递归算法中满足特定条件的初始情况，在此情况下递归函数直接返回一个已知结果而不再进行递归调用
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作
数据物理结构是数据在存储设备上的存储方式及关系
算法效率是指算法执行所需要的计算机资源量，包括时间资源和空间资源，通常用时间复杂度和空间复杂度来衡量
图的边是连接图中两个顶点的元素其核心特征包括有方向或无方向有向边规定了顶点之间的单向关系无向边则表示顶点之间的双向连接
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复
顺序查找的核心性质是从数据序列的第一个元素开始，依次将每个元素与目标元素进行比较，直到找到目标元素或遍历完整个序列
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序方法其特点在于相邻或不相邻元素间的两两比较并适时交换以逐步实现
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法
邻接矩阵是表示顶点之间相邻关系的矩阵，若图中有n个顶点，则邻接矩阵是一个n×n的矩阵，矩阵中元素的值表示对应顶点之间是否有
父节点是在树形结构中位于上一层可连接子节点的节点
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点值都小于该节点值，其右子树中的所有节点值都大于该节点值
空间复杂度是算法运行中所需额外空间随输入规模变化情况
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，图中顶点的位置和边的形状不影响图的逻辑结构，图可分为
树中所有结点的度的最大值即为树的度它反映了树中各结点分支数目的最大值体现了树的复杂程度
线性结构的特点的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径
邻接矩阵是用于表示图的一种矩阵，其中若图中存在从顶点i到顶点j的边，则矩阵中第i行第j列的元素值为1，否则
交换排序是指通过比较和交换元素位置，将无序序列逐步转换为有序序列的排序方法
树的查找是在给定的树结构中按照特定规则寻找特定元素或满足特定条件的元素的操作过程
邻接矩阵是用于表示图的一种矩阵，其中若图中存在从顶点i到顶点j的边，则邻接矩阵中第i行第j列的元素值为1
操作效率的特点是在特定操作过程中体现出的关于完成操作的速度、资源利用程度、流程顺畅性及准确性等方面的特性
递归基础是递归函数中最简单情况的定义及处理
广度优先搜索按层次依次扩展节点以遍历图或树结构
简单排序是对一组数据按照特定规则依次比较元素大小并进行交换等操作，使数据按升序或降序等顺序排列，其核心特征是基于元素间的比较
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等各种与边相关的度量，图由顶点集合
堆排序的核心性质是堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶堆）
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
回溯法是一种通过系统地尝试所有可能解，以深度优先搜索方式遍历解空间树，在搜索过程中通过剪枝函数避免无效搜索，从而找出问题所有解或
算法效率特点核心概念是衡量算法执行时间和资源消耗
集合具有确定性互异性无序性这三个特点
图的边是连接图中两个顶点的无序对或有序对用于表示顶点之间的关系
数组是由相同类型的数据元素按一定顺序排列而成的有限序列，这些元素存储在连续的内存空间中，通过数组名和下标来唯一标识每个元素
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，以此来直观反映图中
树的查找是在给定的树结构中寻找特定元素的操作过程
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法其核心特征在于对问题的所有可能情况无一遗漏地进行
堆的核心性质是父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
有向图中边具有方向，顶点间关系非对称
叶子节点是树结构中没有子节点的节点其核心性质为没有子节点
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够
堆是一种特殊的数据结构，其特点的核心性质为：父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一特点
数据的逻辑结构的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的相互关系以及数据的组织方式，而不涉及数据在计算机中的存储方式
抽象数据类型是指一个数学模型及定义在该模型上的一组操作
时间复杂度衡量算法执行时间随输入规模增长的变化
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法
稳定性是指在系统运行过程中，当受到外界干扰因素影响时，系统能够保持其原有性能、状态或行为特征不发生显著变化的性质
回路是图中一条起点和终点相同的路径且除起点和终点外其余顶点均不重复
在树形结构中，对于某一节点而言，直接位于其上方且与该节点通过特定关系相连的节点就是该节点的父节点，父节点拥有比子节点更高的
穷举法的核心性质是对问题所有可能的情况逐一进行检验以找到符合条件的解
加权图是一种图结构，其中图的每条边都被赋予一个数值作为权值，这些权值可表示诸如距离、成本、容量等与边相关的某种度量
根节点是树结构中处于顶层无父节点的起始节点
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而变化的趋势
堆是一种满足特定父子节点关系的完全二叉树数据结构
动态规划入门是一种用于解决优化问题的算法策略，其核心特征包括将问题分解为重叠子问题，通过求解子问题并存储其解以避免重复计算，利用最优
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右
数据逻辑结构特点指数据元素间抽象关系及组织方式
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
选择基准分区递归排序以达快速有序效果
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到
回溯法是一种通过试探性地逐步构建问题的解，当发现当前部分解无法导致完整有效解时就回溯到上一步重新选择，以找到所有可能解或最优
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到
空间复杂度是指算法运行过程中所需的额外空间大小
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点
堆排序的核心性质是堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶堆）
满二叉树是一棵深度为k且有2^k-1个节点的二叉树其每一层上的节点数都达到最大值即第i层有2^(i-1
树的查找是在给定的树结构中，按照特定规则寻找满足特定条件的节点的操作过程
图的边是连接图中两个顶点的元素用于表示顶点之间的关系其核心特征包括边具有两个端点分别与图中的两个顶点关联边描述了顶点之间的某种连接
非线性结构中元素之间的关系不满足线性关系
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系
在树形结构中直接位于某节点之上的节点即父节点
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示
邻接矩阵是用于表示图的一种矩阵，其核心特征为对于有n个顶点的图，矩阵是n阶方阵，若两顶点相邻则对应位置元素为1否则
堆是一种优先队列的数据结构，它通常分为最大堆和最小堆，最大堆中父节点的值大于或等于其子节点的值，最小堆中父节点的值小于或等于其子
子节点的核心特征是其与父节点存在特定的关联关系，在树形结构等数据结构中，子节点是直接连接在父节点之下的节点，具有从属于父
堆排序是利用堆结构进行排序的一种排序算法
加权图的核心特征是图中的边被赋予了一个数值作为权重，该权重用来表示边的某种属性或代价，不同边的权重值可以不同，基于这些权重可
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，再将子
循环链表是尾节点指向头节点形成环形结构的链表
线性结构中数据元素之间存在一对一的线性关系
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效
图的顶点具有可作为图的基本元素用于表示各种实体或对象且与边相关联以构成图的结构的特点的核心性质
快速排序是对数组进行划分，选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行
回路的核心性质是从回路中任一顶点出发，沿回路的边可以遍历回该顶点且经过的边不重复
树结构中没有子节点的节点就是叶子节点
栈的核心特征是后进先出，即最后进入栈的元素会最先被取出，而最先进入栈的元素会最后被取出
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，并且最后一层上要么是全有节点，要么是从左至右
树中包含数据及指向子节点关系的基本单元叫节点
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质为逐个元素顺序比较以
快速排序以基准值分区，递归分治实现高效排序
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点
图的顶点是图这种数据结构中组成图的基本元素之一，是图中用于表示某个对象或实体的节点，在有向图或无向图中具有标识作用
指针是内存中存储变量地址并可通过它访问变量的变量
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
数据的物理结构的特点的核心特征是描述数据在计算机内存或存储设备中的实际存储方式包括存储位置存储顺序以及数据元素间的物理关系等
二叉树的核心特征是每个节点最多有两个子节点，它可以为空树，若不为空树则包括一个根节点以及两棵互不相交的、分别称为左子树和
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序
算法效率的特点包括时间复杂度和空间复杂度等方面，时间复杂度衡量算法执行时间随输入规模增长的变化，空间复杂度衡量算法执行过程中所需存储空间随输入规模增长的
二叉搜索树中左子树节点值小于根节点小于右子树节点值
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，且可以通过下标直接计算出元素的存储地址，具有随机访问特性，存储密度高
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到
二叉树遍历按特定顺序访问节点以全面了解结构
线性表是零个或多个数据元素的有限序列
时间复杂度衡量算法执行时间随输入规模增长的变化
空间复杂度的核心特征是衡量算法在运行过程中所需要的额外空间随输入规模增长的变化情况
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征是描述数据在计算机内存或存储设备中的
完全二叉树是深度为k的具有n个结点的二叉树，若其中每一个结点都与深度为k的满二叉树中编号从1至n的结点一一对应
集合是具有某种特定性质的具体或抽象对象汇总成的集体
数据物理结构指数据在存储设备上的存储方式及相互关系
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，依次对每一对相邻元素进行此操作，直到整个数组都被排序的排序算法
动态规划入门是一种用于解决优化问题的算法策略，其核心特征包括将问题分解为相互重叠的子问题、通过求解子问题并存储其解来避免重复计算、
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点
连通图是任意两点间都存在路径可相互到达的图
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解的一种策略
图由顶点集合及顶点间边的集合组成的一种数据结构
父节点是指在树形结构中，直接位于某个节点之上的节点，其核心性质包括拥有子节点且在树的层级关系中处于比子节点更高一级的位置
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程
从数据序列开头依次逐个查找目标元素的查找方法
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体
树是一种非线性数据结构有根节点及子树关系
单链表是由节点组成，每个节点含数据及指向下一节点的指针
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值就是树的度，树的度的核心特征是反映树中节点拥有子树
加权图是边或顶点带有数值权重的图结构
链表由节点组成各节点通过指针相连数据存储不连续
堆是一种特殊的数据结构，它是一个完全二叉树，并且每个节点的值都大于或等于其子节点的值（最大堆），或者每个节点的值都小于或等于其子节点
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步转换为有序序列，在排序过程中，相邻元素或不相邻元素不断进行比较和交换操作以
树的深度是从根节点到最远叶节点的最长路径长度
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
算法效率的核心性质是指算法执行时间随输入规模增长的变化情况以及算法占用空间资源随输入规模增长的变化情况 
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法
路径的核心性质是由一系列顶点和边组成且顶点与边交替出现并按顺序连接相邻顶点
树的节点是树结构中的基本组成单元包含数据项以及指向其子节点的指针
比较排序通过比较元素大小来确定其最终排序位置
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化趋势体现出算法效率的高低等特点
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上边的数目
加权图的核心特征是图中的边被赋予了一个数值（权重），该权重用于表示边所连接的两个顶点之间的某种关系或属性的度量，比如距离、
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的
对于给定的某个排序算法，若存在两个相等的元素，在排序前后它们的相对位置保持不变，则该排序算法具有稳定性
父节点的核心特征是在树形结构中，处于较高层级且与其他节点存在特定关联关系，能够直接衍生出子节点，对整个树形结构的层次和关系起到关键
连通图的核心性质是图中任意两个顶点之间都存在路径相连
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点
邻接表是用链表存储图中顶点及与其相邻顶点关系的数据结构
双向链表是一种链表结构，其每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，从而支持双向遍历
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直到找到目标节点或遍历完所有节点的搜索算法
顺序查找是从数据序列开头依次逐个查找目标元素
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在执行过程中所需的额外空间随问题规模增长的变化情况
简单排序是对数据按特定规则依次比较交换以排好序的方法
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点可
穷举法的核心特征是将问题所有可能的解一一列举出来，然后逐一检查这些解是否符合问题的条件，直到找到满足条件的解或确定所有解均不符合
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，从而直观地反映图
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，再将子
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等信息，图中顶点之间通过带权重的边
子节点是树结构中相对于父节点而言，直接连接在父节点之下的节点，具有与父节点存在直接层级关联且处于较低层级这一核心特征 
图的边是连接图中顶点的线段或弧，其核心性质包括边具有两个端点分别与两个顶点相连，边可以有方向（有向边）或无方向（
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法
在图论中，回路是指从图中某一顶点出发，沿着边连续移动，经过若干个不同顶点后又回到起始顶点的路径
哈希表通过哈希函数将键映射到地址以快速存取数据
贪心策略是在求解问题时每步都选当前最优决策的方法
在树形结构中，若存在节点A，有节点B直接连接到A且这种连接关系规定了B相对于A的特定层级关系，那么节点A就是节点B的父节点
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称v和w是连通的，且路径长度是路径
引用是一种给已存在的变量起别名的机制，使得对引用的操作实际上是对其关联的变量进行操作
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归
图由顶点及连接顶点的边构成用于表示多对多关系
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点
数据的物理结构是数据在计算机中的存储表示，包括数据元素的存储方式以及数据元素之间关系的存储方式
动态规划入门是一种用于解决优化问题的算法策略，其核心特征是将问题分解为相互重叠的子问题，通过求解子问题并存储其解，避免重复计算，
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心特征为数据元素之间有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素
比较排序是基于元素间比较来确定元素之间的相对次序从而将给定序列重新排列成有序序列的排序算法
栈是一种后进先出的数据结构，其核心性质为元素按照后进先出的顺序进行入栈和出栈操作
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是算法简单但平均查找长度较大时间
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在
递归基础是递归算法中最简单情况的定义，通常是当问题规模减小到一定程度时可直接得出答案无需进一步递归调用的情况
操作效率是指在一定时间内完成的操作数量或质量与所投入资源（包括人力、物力、时间等）的比值所反映出的工作效能情况
指针是存储变量内存地址并能通过它访问变量的变量
树的查找的核心特征是基于树的结构特性，通过特定的遍历方式从根节点开始沿着树枝逐步搜索目标节点，利用节点之间的层次关系和连接信息以提高
回溯法是一种通过试探并逐步回溯来求解问题的方法，它从初始状态出发，按照深度优先策略，在每一步决策时尝试所有可能的选择，当发现当前
操作效率指单位时间内完成操作的有效成果量
稳定性特点核心概念是系统状态在干扰下的保持性
操作效率是指在数据结构的各种操作（如插入、删除、查找等）中，完成这些操作所需要的时间、空间等资源的消耗情况以及与问题规模之间
树的高度是从根节点到最远叶节点的最长路径长度
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树
稳定性是指在数据结构中，对于相等的元素，在排序前后它们的相对位置保持不变的性质
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上
数据类型是对数据的种类及操作方式的规定
双向链表是节点包含前驱和后继指针的链表结构
队列是一种先进先出的线性数据结构
顺序表是一种线性表，其核心性质为用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻
堆是一种特殊的数据结构，它满足父节点的键值大于或小于其子节点的键值（大顶堆或小顶堆），且具有完全二叉树的性质
时间复杂度是指执行算法所需要的计算工作量，其核心性质为算法执行时间的增长趋势与问题规模之间的关系，反映了算法效率随输入规模增加的变化情况
深度为k有n个结点的二叉树，若与同层满二叉树对应结点位置相同
递归基础是递归函数中最简单无需再递归的终止条件
交换排序是通过元素交换位置来实现排序的方法
图的边是连接图中两个顶点的线段或弧表示的关系其包含有向边和无向边有向边有起始顶点和终止顶点无向边所连接的
抽象数据类型是数据值及操作数据值的一组抽象运算
加权图是一种图结构，其中图的每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、容量等具有实际意义的量
映射是一种元素与元素按对应关系的对应
二叉树是一种每个节点最多有两个子树的树形结构
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问
在树形结构中直接位于某节点之上的节点即父节点
存储结构的特点的核心性质包括数据元素在计算机内存中的存储方式以及它们之间的逻辑关系如何通过物理存储来体现 数据元素的存储位置反映其逻辑关系 且
子节点是树结构中与某个节点直接相连且处于该节点下方层次的节点
回溯法基础特点是按条件深度优先搜索并适时回溯
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是
树的查找是在给定的树结构中按照特定规则寻找满足某种条件的节点的操作过程
叶子节点是树结构中没有子节点的末端节点
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
操作效率特点的核心概念是单位时间内完成操作的水平
二叉搜索树的特点是每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个序列都未找到匹配
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循先进后出原则
树的查找是在给定的树结构中，按照特定规则从根节点开始，通过比较节点值等方式确定是否存在特定目标元素以及其所在位置的操作过程
线性结构是一种数据元素之间存在一对一线性关系的数据结构
分治策略是将一个规模为N的问题分解为K个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
叶子节点没有子节点
单链表的核心特征是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，且除了最后一个节点
指针的核心性质是其存储的是变量的内存地址，通过该地址可以直接访问和操作对应变量所存储的数据
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括从起始节点开始，每次选择一个
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的数值计算方法
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点，从而以一种链表形式直观地表示图中
堆是一种特殊的数据结构，其核心特征为：它是一个完全二叉树，并且每个节点的值都大于或等于其子节点的值（最大堆），或者每个节点的值都
贪心策略的核心性质是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，所做出的仅是在某种意义上的局部最优
交换排序是通过比较和交换元素位置，将无序序列逐步转换为有序序列，核心性质是比较相邻元素大小，若顺序错误就把它们交换过来，不断重复此过程
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式逐步逼近问题精确解的方法，其核心性质是利用前一步的计算结果来生成下一步的近似解
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否有边相连及边的相关属性（如权值等）
存储结构的特点的核心性质包括数据元素在计算机内存中的存储方式以及它们之间的逻辑关系的表示方法 ，并且涉及到如何通过特定的存储布局来高效地进行
快速排序是对无序数组进行排序的高效算法，其核心特征是选择一个基准值，将数组分为两部分，小于基准值的元素在左边，大于基准值的元素
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，且右子树中的所有节点的值均大于该节点的值
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法
树的节点是包含数据及指向子节点的指针的基本数据结构单元
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，且左右
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，搜索至解空间树的任一
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，不断
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的
递归基础是递归算法中当问题规模小到一定程度时可直接得出结果无需再进行递归调用的初始条件或终止情况
将问题分解为子问题，分别求解后合并得到原问题解
树的节点是包含数据及指向子节点的指针等相关信息的结构单元
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，
回路的核心特征是从图中某一顶点出发，沿着边依次访问若干顶点后又回到该起始顶点，所经过的路径中除起始顶点可重复外其余顶点均
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点
根节点是树结构中位于顶端无父节点的起始节点
引用是一个已定义变量的别名，对引用的操作等同于对其引用的变量的操作，其核心性质包括：引用必须在定义时初始化且初始化后不能再引用其他
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示这条边的某种代价、成本、距离或其他相关度量，可用于在图的
堆排序是利用堆结构特性进行排序的算法
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层
回溯法是按选优条件深度优先搜索解空间树找可行解
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该
集合中的元素具有确定性、互异性和无序性。确定性是指对于一个给定的集合，任何一个对象是否属于这个集合是明确的；互异性是指集合中的元素互不
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重用于表示边的某种属性或代价等，边和其对应的权重共同构成加权图的
栈是一种只能在一端进行插入和删除操作的特殊线性表
操作效率特点核心概念是单位时间内完成操作的效能
引用的核心特征是在文本中提及其他已存在的内容，将其引入以增强表达效果、提供支持依据、丰富文本内涵等，通过特定的方式明确指出所引用
交换排序通过比较交换元素位置来实现排序
贪心策略是在求解问题时每步都选当前最优决策的方法
数组是一种有序的数据集合，其中的元素具有相同的数据类型，并且可以通过下标来访问和操作这些元素
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法
比较排序的核心特征是通过元素之间的比较来确定元素的相对顺序从而实现排序，其时间复杂度下限为O(n log n)，这意味着在最坏情况下，任何基于
平衡二叉树左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
比较排序是基于元素间比较来确定元素间相对次序从而进行排序的排序算法
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示，它具体体现为数据元素在存储器中的存储位置以及数据元素之间逻辑关系
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正确开始和终止的关键，通过定义初始条件或边界情况使得
根节点是树结构中的一个特殊节点，它没有父节点，是整个树的起始点，其他所有节点都直接或间接连接到根节点
在树形结构中直接位于某节点之上的节点即父节点
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它反映了算法在执行过程中所需的额外空间随问题规模增长的变化情况
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机，仅考虑数据元素之间的逻辑关系
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找
深度优先搜索沿一条路径深入探索直到无法继续再回溯
加权图的核心性质是图中每条边都被赋予一个数值权重，这些权重用于表示边的某种属性或代价等，不同边的权重值可以不同，并且权重在
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直到找到目标节点或遍历完所有可达节点
广度优先搜索按层次依次扩展节点以寻找目标节点
映射是一种元素到元素的对应关系且具有唯一性
用矩阵表示图中顶点间邻接关系，元素值体现连接情况
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有
分治策略的特点是将一个规模较大的问题分解为若干个规模较小的子问题，通过分别解决这些子问题，然后将子问题的解合并得到原问题的
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯
无向图是一种图结构，其中边没有方向，任意两个顶点之间的边是双向的，即若顶点u和顶点v之间存在边，则从u到v和从
树的度是指一棵树中，其节点拥有子树的最大数目
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
存储结构的核心性质是数据元素及其关系在计算机存储器中的表示方式以及如何利用这种表示方式来高效地进行数据处理和操作
堆的核心特征是对于最大堆，每个节点的值都大于或等于其子节点的值；对于最小堆，每个节点的值都小于或等于其子节点的值，并且堆是一种完全
二叉树遍历是按特定顺序访问二叉树中所有节点的操作
存储结构是指数据元素及其关系在计算机存储器中的表示，它包含数据元素的表示以及数据元素之间关系的表示这两个核心特征
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层
完全二叉树是除最后一层外每层节点数满且最后层靠左排列的二叉树
比较排序通过元素间比较确定元素间相对次序来实现排序
广度优先搜索按层次依次扩展节点以寻找目标节点
数据类型定义的核心特征是规定了数据的取值范围以及在该数据上可进行的操作集合
线性表是具有相同数据类型的n个数据元素的有限序列，其中每个元素在序列中有唯一的前驱和后继（除第一个元素无前驱，最后一个元素无后继外
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个
二叉树是一种每个节点最多有两个子树的树形结构
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，反映数据在组织上的一种抽象表示
线性结构中数据元素存在一对一的线性关系
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序
在树形数据结构中，位于树的顶部没有父节点的节点就是根节点
二叉树是一种每个节点最多有两个子树的树形结构
根节点是树结构中没有前驱节点的特殊节点，它处于树的起始位置，是树中所有其他节点的祖先
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，
单链表通过节点指针依次连接，每个节点指向下一节点
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组都被排序，较大元素会像气泡一样逐渐“浮”到数组末尾，每次
邻接矩阵是用于表示图的一种矩阵，其中若图中存在从顶点i到顶点j的边，则矩阵中第i行第j列的元素值为1，否则
深度优先搜索沿一条路径深入探索直到无法继续再回溯
在树形结构中直接位于某节点之上的节点即父节点
每趟从未排序元素中选最小（大）值与未排序首元素交换
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解的一种策略
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，且其强调数据封装和信息隐藏，用户只能通过特定接口访问和操作
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系以及定义在这些数据对象和关系上的操作组成 
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法其核心性质是利用前一步的计算结果来生成
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括总是优先往深度方向搜索，通过
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将节点依次连接起来形成链表结构，其核心特征是
贪心策略是在对问题求解时，每一步都做出当前最优选择
广度优先搜索按层次依次扩展节点以遍历图或树
归并排序的核心性质是将一个序列分成两个子序列分别排序后再合并成一个有序序列
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的
树中各节点度的最大值为树的度
数据的物理结构是指数据在计算机中的存储方式包括数据元素的存储及其关系的表示
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从
堆是一种特殊的数据结构，分为大顶堆和小顶堆，大顶堆中每个节点的值都大于或等于其子节点的值，小顶堆中每个节点的值都小于
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素本身的表示以及元素之间关系的表示，并且它决定了数据在计算机内存
图的顶点是图结构中的基本元素，是图中数据的载体，图中各边所连接的对象，具有标识性和与边的关联关系以构成图的整体
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，将数据的表示和操作的实现细节封装起来，强调数据
回路是在图中从一个顶点出发，沿着边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复出现所构成的闭合路径
树是一种包含根节点且具有层次结构，每个节点有零个或多个子节点的非线性数据结构
线性查找是按顺序逐个检查数据元素以确定目标元素的方法
时间复杂度是算法执行时间随数据规模增长的变化趋势
完全二叉树是深度为k的具有n个结点的二叉树，若按层次序对其编号后，编号为i（1≤i≤n）的结点与满二叉
穷举法是一种通过对所有可能的情况进行逐一列举和检验，从而找到满足条件的解的方法其核心性质是在解决问题时会遍历问题的所有可能解
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点
二分查找是在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间，直到找到目标值或确定目标值不存在的查找算法
在图论中，回路是指从图中某一顶点出发，沿着边连续移动，经过若干个顶点后又回到该起始顶点且路径中各边互不相同的路径
树的节点是包含数据以及指向子节点的指针或引用的基本数据结构单元
指针是一种变量，其值为内存中另一个变量或对象的地址，通过指针可以间接访问和操作其所指向的内存位置的数据
邻接矩阵是表示图的一种方式，其特点为用二维数组来存储图中顶点之间的邻接关系，矩阵元素的值反映了对应顶点间是否有边相连及
引用的核心性质是其为对象起的别名，绑定到已存在的对象，对引用的操作等同于对其所绑定对象的操作
叶子节点是树结构中没有子节点的节点
完全二叉树是除最后一层外每层节点数满且最后一层靠左排列的树
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其每一层上的节点数都达到最大值，即第i层有2^(i
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法
图的边是连接图中两个顶点的线表示它们的关系
栈具有后进先出的特点即最后入栈的元素最先出栈
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
数据类型定义的核心性质包括具有特定的值集以及定义在这些值上的一组操作
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图
抽象数据类型是数据值及定义在这些值上一组操作的总称
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
树的高度是从根节点到最远叶子节点的最长路径长度
线性表是一种数据元素之间存在一对一线性关系的有限序列，具有有且仅有一个开始元素和一个终端元素且除开始元素外每个元素有且仅有一个直接前驱、
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环
二叉搜索树中左子树节点值小于根节点小于右子树节点值
树的查找是在树这种数据结构中通过特定方法寻找满足特定条件的节点的操作
满二叉树是每一层节点数都达到最大的二叉树
在树这种数据结构中，从根节点开始，依据树的结构特性和节点之间的关系，通过特定的规则（如比较节点的值等），沿着树的分支进行
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中
递归基础的核心特征是存在一个或多个明确的终止条件，当满足这些条件时递归过程不再继续调用自身而是直接返回一个确定的结果
回路是图中一条至少包含一条边且起点和终点相同的路径
深度优先搜索是按深度依次探索节点直到无法继续或达到目标
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价等，通过这些权重值可用于衡量图中节点之间
交换排序是通过比较序列中元素，若顺序错误就把它们交换过来，直到整个序列都被正确排序的一种排序方法
线性查找的核心特征是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点的关系且在树的层级结构中有其特定位置
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法
比较排序是基于元素间比较来确定元素间相对次序从而对元素序列进行排序的排序方法其核心性质是排序结果仅取决于元素间的比较关系
加权图是边带有代表某种数值权重的图
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，分别求解这些子问题，然后将子问题的
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子集，每个子集又是一棵树且称为该根节点的子树，具有层次关系、递归
从数据序列开头依次逐个比较查找目标元素
操作效率核心概念是单位时间内有效完成操作的能力
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和相关操作的定义而不涉及具体的存储结构和实现细节
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度 
数据的逻辑结构的特点的核心性质包括数据元素之间的逻辑关系，如线性结构中元素一对一的关系、树形结构中元素一对多的关系、图状结构中元素
数据的逻辑结构的特点是数据元素之间存在的一种抽象的、与数据存储无关的逻辑关系，它描述了数据元素之间的相互关系和组织方式
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组进行排序的算法
比较排序的核心特征是通过元素之间的比较来确定元素在排序结果中的相对位置从而实现排序
从数据序列开头依次查找目标元素直至找到或遍历完
链表是一种线性数据结构，其特点是用一组任意的存储单元存储线性表中的数据元素，这些存储单元可以是连续的也可以是不连续的，数据元素之间
线性表是一种由有限个数据元素组成的序列，其中每个元素都有且仅有一个直接前驱和一个直接后继（除第一个元素无前驱，最后一个元素无后继外
回路是图中从某顶点出发又回到该顶点的路径
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底
连通图中任意两个顶点之间都存在路径
交换排序通过元素比较与交换来实现有序排列
线性表是具有相同数据类型的n个数据元素的有限序列，有且仅有一个开始结点和一个终端结点，并且所有结点都有且仅有一个直接前驱和一个直接
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序
归并排序是将数组分块排序后合并成有序数组的算法
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图中每个顶点的信息，边表中存储与每个顶点相邻接
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素的相对顺序从而实现排序
操作效率的核心特征是在单位时间内能够以最少的资源投入、最高的精准度完成最多且符合质量标准的操作任务，实现资源利用的最大化和操作流程的
递归基础的定义的核心特征是存在一种或多种简单情况，在这些简单情况下递归函数可以直接返回一个确定的值而无需再次调用自身
子节点是树状结构中直接连接在父节点之下的节点
数据类型是对数据的一种分类，它定义了数据的取值范围、存储方式以及可以进行的操作，不同的数据类型具有不同的特性和用途，通过明确数据类型能
连通图是指在无向图中，若任意两个顶点之间都存在路径相通，或者在有向图中，对于任意两个顶点u和v，都存在从u到
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活性和高效性，可用于动态内存分配
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，再将子
二叉搜索树是一棵空树或者满足对于任意一个节点，其左子树上所有节点的值均小于该节点的值，其右子树上所有节点的值均大于该节点的值，
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点
邻接表的核心性质是对于图中的每个顶点，通过链表形式存储其所有邻接顶点
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点
深度优先搜索是一种用于遍历或搜索图或树的算法策略，从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步
稳定性是指在排序过程中，相等元素之间的相对位置在排序前后保持不变的特性
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而支持双向遍历
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组分成两部分并比较中间元素与目标元素来确定目标元素所在位置
单链表是由节点组成，每个节点包含数据及指向下一节点的指针
树的高度的核心性质是从根节点到最远叶节点的最长简单路径上边的数目
图的边是连接图中两个顶点的线，它可以有方向也可以无方向，若有方向则称有向边，若无方向则称无向边，边
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过
链表的核心特征是通过节点之间的指针连接来存储数据元素，每个节点包含数据部分和指向下一个节点的指针，从而形成一种链式的数据结构，使得数据的存储
树中没有子节点的节点即叶子节点 
引用是一种给已存在对象起别名的机制，使得对引用的操作等同于对其所引用对象的操作
分治策略的核心性质是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别求解子问题
队列是一种先进先出的线性数据结构
堆是一种满足父节点键值大于或小于子节点的完全二叉树
树的查找基于树形结构通过特定路径确定元素位置
图的顶点的核心特征是它是图结构中的基本元素，用于表示图中的对象或实体，并且通过边与其他顶点相连以构成图的结构关系
引用的特点的核心特征是对已存在内容的直接或间接提及并加以利用以增强表达效果或支持观点等
递归基础是递归算法中满足终止条件、不再进行递归调用的初始情况或边界条件
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示与这条边相关的某种代价、成本、距离或其他度量，不同边的权重
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值等属性，其特点包括有不同类型如无
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步调整为有序序列，在排序过程中相邻元素或不相邻元素之间不断进行比较和交换操作以
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会
用矩阵表示顶点间邻接关系且元素值反映连接情况
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别求解这些子问题，最后
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的
栈是一种后进先出的数据结构，其核心性质为元素的插入和删除操作都在栈顶进行，新元素总是被放置在栈顶，而最先进入栈的元素
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解这些子问题
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的每个节点表示与该顶点相邻接的顶点，具有存储紧凑、便于
树的节点是包含数据以及指向子节点的链接的基本数据结构单元
根节点是在树形结构中没有前驱节点且唯一直接位于树顶端的节点
从根节点到最远叶子节点所经最长路径上的节点数即树的深度
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组有序，每次比较都将最大（或最小）元素“冒泡”到数组末尾（
深度优先搜索是一种在图或树等数据结构中，从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，若未找到目标则回溯
存储结构是指数据元素及其关系在计算机存储器中的表示，其特点包括数据元素的存储方式（如顺序存储、链式存储等）、数据元素间关系的表示方法以及
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树
递归基础是递归函数中最简单情况可直接得出结果
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列），且相邻顶点之间存在边（对于有向图存在有向
数据物理结构是数据在存储设备上的存储方式及相互关系
无向图的核心特征是由顶点集合和边集合组成，其中边是没有方向的，即顶点之间的连接是双向的
回溯法是按选优条件深度优先搜索并适时回溯求解的方法
回路是指在图中从一个顶点出发，沿着边经过若干个顶点后又回到该顶点的路径且路径中除起点和终点外其他顶点不重复
简单排序是对数据按特定规则依次比较交换位置的排序方式
循环链表是一种尾节点指针指向头节点的链表结构
路径的核心特征是连接两个或多个点，且具有一定的长度、方向和轨迹，能够明确地标识从一个起始点到一个终点的行进路线，在各种领域如
线性查找按顺序逐个检查元素直至找到目标元素
二分查找在有序数组中通过不断折半查找目标元素
二叉搜索树中左子树节点值小于根节点小于右子树节点值
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，且具有限定仅在栈顶进行插入和删除操作的特性
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在纵向方向上的层次数量和结构复杂程度
简单排序是对数据序列通过比较元素大小并交换位置等方式逐步将其按特定顺序排列的排序方法
简单排序通过比较与交换逐步将数据按序排列
算法效率的特点是指算法在执行过程中所表现出的诸如时间复杂度和空间复杂度等方面的特性，反映了算法执行所需资源随问题规模变化的情况
队列是一种特殊的线性表，其特点是元素按照先进先出的原则进行入队和出队操作
单链表是一种由节点组成的线性数据结构，每个节点包含数据及指向下一节点的指针
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应
图的核心特征是由顶点集合以及顶点之间的边集合所构成的数据结构，其中顶点表示事物，边表示事物之间的关系
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找
递归基础是递归算法中满足特定条件从而直接给出结果而无需再次递归调用自身的初始情况或边界条件
链表是由节点组成，节点间通过指针连接的数据结构
引用是给已存在对象起的别名，指向同一内存位置
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将
图是由顶点集和顶点间的边集组成的数据结构
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值等属性且顶点与边的连接情况多样能
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点） 
非线性结构中各数据元素之间的关系不再是一对一的，而是存在一对多、多对一或多对多的复杂关系
在数据结构中，稳定性是指对于相等的元素，排序前后它们的相对顺序保持不变，即如果两个元素的值相等，在排序前一个元素在另一个元素之前，
深度优先搜索是一种在图或树等数据结构中沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径继续深度探索的搜索算法，
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点
树是一种非线性的数据结构，它有一个根节点，每个节点有零个或多个子节点，且除根节点外每个节点有且仅有一个父节点，树中没有
顺序查找是从数据序列的一端开始，依次将数据元素与给定值进行比较，直到找到匹配元素或遍历完整个序列，其特点包括适用于无序数据序列、平均
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征在于具体描述了数据在计算机存储设备上
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和操作的实现细节封装起来
二叉搜索树的特点是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，且
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据
深度优先搜索是按深度依次探索节点直至无法继续的搜索策略
时间复杂度是用来衡量一个算法执行时间随输入规模增长而增长的变化趋势的量它定量描述了算法运行时间与输入规模之间的渐近关系
树中所有结点的度的最大值就是树的度
队列是一种先进先出、按顺序存储与操作数据的线性结构
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向，从起始顶点按边的方向到达终止顶点，若为无
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列
迭代法是一种不断用变量的旧值递推新值的解决问题的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来
分治策略核心概念是将问题分解为子问题求解再合并
树的高度是从根节点到最远叶节点的最长简单路径上的边数
线性表是一种由同类型数据元素构成的有限序列，其中每个元素有且仅有一个直接前驱和一个直接后继（除第一个元素无前驱，最后一个元素无后继外
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，所有其他节点都直接或间接连接到它
邻接矩阵是用于表示图的一种矩阵，其特点是若图中有n个顶点，则矩阵为n×n矩阵，矩阵中元素的值表示对应顶点之间是否有边相连
在树形数据结构中，对于某一节点而言，直接连接该节点且位于其上方层次的节点就是该节点的父节点
数据类型的核心特征是它定义了数据的取值范围以及可对该数据执行的操作集合
图的顶点是图结构中的基本元素，具有标识图中各个对象的作用，顶点之间通过边相互连接从而构成图的整体结构，并且在不同的图算法和应用
递归基础是递归定义中针对最简单情况直接给出定义或值的部分，其核心性质是为递归过程提供初始条件，使得递归能够从这一基础情况开始逐步展开，
邻接矩阵通过矩阵表示图中顶点间是否有边相连
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质为算法运行时所需的额外空间大小与输入规模之间的关系体现算法在空间方面
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按
稳定性的特点的核心性质是在一定条件下系统或物体能够保持其原有状态或特性不发生显著变化
叶子节点是树结构中没有子节点的节点
数据类型是一组值的集合以及定义在这组值上的一组操作的总称
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，通过数组形式存储元素，可高效地进行按
哈希表通过哈希函数将键映射到特定位置以快速存取数据
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，
引用是一种给已存在的变量起别名的机制，通过引用可以使用与该变量相同的内存位置，对引用的操作等同于对其关联变量的操作
栈是一种只能在一端进行插入和删除操作的特殊线性表，具有后进先出的特点
线性查找的核心性质是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列
交换排序的核心性质是通过比较和交换元素位置来逐步将无序序列转变为有序序列
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值等属性且任意两个顶点之间可能存在零条
简单排序是对数据元素序列进行比较和交换等操作，按照特定顺序将元素排列成有序序列的排序方法
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接与根节点相连
完全二叉树是除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树
分治策略是将一个规模为N的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
数据类型具有特定的取值范围、存储方式、操作集合以及语义解释等特点，其核心特征包括明确规定数据所允许的值的集合，确定数据在内存中的存储形式，
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，也就是说给定一个集合，任何一个元素是否属于这个集合是明确
图由顶点集合及顶点间的关系集合组成，顶点之间通过边相连，边可以具有方向也可以无方向，图可用于表示各种复杂的关系结构如社交网络、
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(
在树形结构中直接位于某节点之上的节点是其父节点
树的核心特征是具有一个根节点，根节点没有前驱，且除根节点外，其余每个节点有且仅有一个前驱，同时每个节点可以有零个或多个后继
树的查找的核心特征是从根节点开始，根据节点间的父子关系，按照特定规则在树的节点中进行搜索以找到目标节点
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散
映射是一种元素对应关系，一个对一个或多对一
树的深度是从根节点到最远叶节点的最长简单路径上的节点数
稳定性特点核心概念是系统在一定条件下保持原有状态的特性
冒泡排序是一种比较相邻元素大小并将较大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法，其特点包括比较次数随元素数量增加
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图中各个顶点的信息，边表中存储与每个顶点相邻接
回溯法基础的特点是在问题求解过程中通过尝试不同的选择路径，当发现当前路径无法达到目标时就回溯到上一步重新选择，以此逐步探索所有可能的
集合中的元素具有确定性、互异性和无序性
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值
稳定性是指在数据结构中，若存在两个相等的元素，在排序前后它们的相对位置保持不变则该数据结构具有稳定性
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
迭代法是通过不断重复运算逐步逼近问题解的方法
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推
回路是从一点出发经一系列节点后又回到该点的路径
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
栈是一种只能在一端进行插入和删除操作的特殊线性表
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它
快速排序的核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分的元素都大于等于基准元素，然后对
父节点是树状结构中位于上一层级的节点，其特点的核心特征包括拥有子节点且处于比子节点更高的层级位置，对其下一层级的子
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有
空间复杂度指算法运行过程中所需的额外空间随输入规模的变化
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和相关操作的规格说明，而不依赖于具体的实现细节
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式以及数据的组织形式，包括
图的顶点的核心特征是在图结构中具有标识作用用于区分不同元素且与边存在关联以构建图的结构关系并可附带相关属性信息
交换排序的核心特征是通过比较元素并交换不满足顺序要求的元素位置，逐步将无序序列转变为有序序列
图的边是连接图中顶点的线条表示顶点间关系
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序
线性表是一种数据元素之间存在一对一线性关系的数据结构，其特点包括有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有一个直接前驱
回路是图中一条至少包含一条边且起点和终点相同的路径
在树结构中通过特定方法找到目标元素的操作就是树的查找核心概念
线性查找是从数据序列的一端开始，依次将每个数据元素与目标值进行比较，直到找到目标值或遍历完整个数据序列的查找方式
深度优先搜索是一种在图或树等数据结构中进行遍历的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到
比较排序是基于元素间比较进行顺序排列的排序方式
深度优先搜索是一种在图或树等数据结构中，从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成
图的顶点具有可以作为图的基本元素用于构建图的结构、与边相关联以表示图中元素之间的关系、可以具有不同的属性如标识编号等特点的
非线性结构的核心性质是存在一对多或多对多的关系，各数据元素之间不再保持线性关系，其中至少有一个数据元素有两个或两个以上的直接前驱或
线性查找是从数据序列的开头开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的一种查找方式其特点是比较
抽象数据类型具有数据的逻辑结构、定义在该结构上的一组操作以及数据的封装性等特点
二分查找是在有序数组中，通过不断将区间缩小一半的方式，查找目标元素是否存在并确定其位置的一种查找算法
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另
无向图的核心特征是由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即顶点之间的连接是双向的
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
非线性结构的核心特征是其各数据元素之间的逻辑关系不是一对一的线性关系，存在一对多、多对一或多对多等非简单线性的关系
加权图是一种图结构，其中每条边都被赋予一个权重值，用于表示边的某种属性或代价等
比较排序是基于元素间比较来确定元素相对次序从而将给定元素序列重新排列成有序序列的排序算法
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法
链表的核心特征是通过节点来存储数据，每个节点除了包含数据域外还包含一个指向下一个节点的指针，从而形成一个链式结构，使得数据的存储和访问
数据的物理结构是指数据在计算机中的存储方式包括数据元素的存储表示及其关系的表示
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h
集合中的元素具有确定性、互异性和无序性
时间复杂度是衡量算法执行时间随输入规模增长而变化的函数，它反映了算法执行时间的增长趋势，不同算法的时间复杂度不同，且时间复杂度低的算法在
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改这些元素
完全二叉树是除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点
连通图是一个无向图，其中任意两个顶点之间都存在一条路径相连
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该变量所存储的数据
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法
堆排序利用堆结构将数据排序，根节点最大或最小
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个
双向链表是节点包含前驱和后继指针的链表结构
广度优先搜索按层次依次访问节点直至找到目标或遍历完所有节点
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点
路径具有从起始点到终点的特定走向，它由一系列有序的节点或位置组成，这些节点或位置按照一定的顺序依次排列，共同构成了从一个地方到另
回溯法是一种通过系统地尝试所有可能的解来解决问题的算法策略，它从问题的初始状态出发，按照深度优先搜索的方式，逐步构建解空间树，
冒泡排序比较相邻元素大小，若顺序错误就把它们交换过来，每一趟将一个最大或最小元素“冒泡”到数组末尾，经过多趟比较和交换使数组有序
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值
时间复杂度衡量算法执行时间随输入规模增长的变化
引用是给已存在的变量起的一个别名，通过该别名可以访问和操作其对应的原始变量所代表的内存空间中的数据
队列的特点是先进先出，即先进入队列的元素先出队列
树的查找的核心特征是从根节点开始，按照特定规则（如比较节点值等）逐步遍历树的节点，以确定目标元素是否存在于树中，不同类型
数据类型是对数据的种类及操作方式的规定 
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且具有层次
归并排序是将数组分治后合并有序子数组来排序
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
数组是相同类型数据的有序集合且内存连续存储
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，用户无需了解其内部实现细节只需使用接口规定的操作来
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法
算法效率是指算法执行所需要的计算资源量，通常用时间复杂度和空间复杂度来衡量算法在时间和空间上的效率表现
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素的表示方式、元素间关系的表示方法以及数据的存储结构等方面，
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个之外，结构中的每个数据元素
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题形式相同，递归地解这些子问题，
算法在运行过程中临时占用存储空间大小的量度就是空间复杂度
动态规划入门是一种用于解决具有重叠子问题和最优子结构性质的问题的算法策略，通过将问题分解为较小的子问题并记录子问题的解以避免重复
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，且每一趟比较都会将未排序部分的最大（或
算法效率是指算法执行所需要的时间和空间资源，通常用时间复杂度和空间复杂度来衡量，时间复杂度反映算法执行时间随输入规模增长的变化趋势，空间复杂度
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空
线性结构的核心性质是数据元素之间存在着一对一的线性关系，即除第一个元素外，每个元素有且仅有一个前驱；除最后一个元素外，每个元素有且
空间复杂度指算法运行中所需存储空间随输入规模变化情况
堆是一种满足特定父子节点关系的完全二叉树数据结构
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继
二叉树是一种每个节点最多有两个子树的树形结构
图的顶点是图结构中的基本元素，是组成图的各个节点，用于表示实际问题中的对象，并且顶点之间通过边相互连接以反映对象之间的关系
图的顶点具有能够唯一标识且与边相关联以构成图的结构的特点
穷举法的核心特征是对问题所有可能的情况进行逐一列举和检验，通过遍历所有可能解来找到符合条件的答案
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法
线性表是零个或多个数据元素的有限序列
迭代法是一种通过从一个初始估计出发，利用迭代公式逐步逼近问题精确解的方法其特点包括能将复杂问题转化为简单重复的计算过程，计算过程相对直观
叶子节点是树结构中没有子节点的节点，其特点包括处于树的最底层没有分支延伸，度为0，在数据处理和遍历等操作中具有特殊意义如
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中每个数据元素在序列中都有唯一的前驱（除第一个元素外）和
线性表是具有相同数据类型的n个数据元素的有限序列
二叉树每个节点最多有两个子节点且有层次结构
穷举法是一种通过对问题所有可能的情况逐一进行尝试和检验，从而找出满足条件的解的解题方法
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以
穷举法是对所有可能情况逐一检验以求解问题的方法
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，
回溯法基础的核心特征是在问题求解过程中，通过尝试不同的选择路径，当发现当前路径无法达到目标或不满足条件时，就返回到上一步重新选择
比较排序是通过元素之间的比较来确定元素的相对次序从而实现排序的一种排序算法，其核心性质包括对于n个元素进行排序至少需要O(nlogn)次
叶子节点是树结构中没有子节点的节点
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素且存在唯一的一个被称作“最后一个”的数据元素以及除第一个之外的数据元素均有唯一的
叶子节点是树结构中没有子节点的节点
在有序数组中通过不断二分比较查找目标值的方法
树的高度是从根节点到最远叶节点的最长路径上边的数目
图中参与构图且具有某种标识或属性的基本元素为顶点
图的边是连接图中顶点的线，具有两个端点且方向可分为有向边和无向边，边可有权重，边的集合决定了图的连通性
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质是逐一比较数据元素直到
根节点是树结构中没有前驱节点且唯一的起始节点，它处于树的顶层位置，是整个树状结构的入口和基础，所有其他节点都直接或间接连接
操作效率的特点的核心特征包括能在规定时间内完成任务、资源利用高效、流程简洁顺畅、执行准确无误以及具备灵活性可根据实际情况调整以实现最优效果等
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到该起始顶点且经过的边不重复
指针的核心性质是其存储的是变量的内存地址并可通过该地址间接访问和操作对应变量
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
稳定性是指在数据结构中，相同关键字的元素在排序前后相对位置保持不变的特性
无向图是一个二元组其中包括顶点集和边集且边集中的每条边都是顶点集的无序对
比较排序是基于元素间比较进行顺序排列的排序方式
邻接矩阵是表示图的一种方式，其特点的核心性质为若图中有n个顶点，则邻接矩阵是一个n×n的方阵，矩阵中元素的值表示对应
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点
循环链表是一种首尾相连的链表结构
链表是一种通过指针将一组节点连接起来的数据结构，每个节点包含数据和指向下一个节点的指针，最后一个节点的指针指向空值
存储结构的核心特征是数据元素在计算机存储器中的存储方式以及它们之间的逻辑关系的表示，包括顺序存储结构通过连续存储单元存储数据元素以体现其逻辑顺序，
树的节点是包含数据及指向子节点的指针（若存在子节点）的基本数据结构单元
堆是一种特殊的数据结构，其核心性质为每个节点的值大于或等于其子节点的值（大顶堆）或每个节点的值小于或等于其子节点的值（小顶堆）
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾从而实现对数组进行排序的算法
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合
非线性结构的核心性质是存在一对多或多对多的关系，其元素之间的逻辑关系不再是简单的线性顺序关系
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两
无向图是由顶点集和边集构成且边无方向的图
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点
插入排序是将未排序数据插入已排序序列合适位置的排序算法
数据物理结构指数据在存储设备上的存储方式及关系
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值
根节点是树结构中没有父节点的唯一节点，处于树的最顶端位置，是树的起始点，它在层次结构中具有特殊地位，是整个树结构数据
数据的逻辑结构的特点的核心性质包括数据元素之间具有特定的逻辑关系，这种关系决定了数据的组织方式和操作方法，并且不同的逻辑结构适用于不同的
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质
树是一种有根节点且子节点关系唯一的非线性结构
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点
树的核心性质是任意两个节点有且仅有一条路径连通且一个有n个节点的树有n-1条边
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作（称为队尾），而在另一端进行删除操作（称为队头），遵循先进
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系
比较排序是通过比较元素大小来确定元素最终位置的排序
线性查找是一种在数据序列中从起始位置开始依次逐个检查元素，直到找到目标元素或遍历完整个序列的查找方法，其特点的核心性质是顺序性地对
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的
将问题分解为子问题求解后合并子问题解以获原问题解
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在垂直方向上的层次数量和结构复杂度，不同
栈的核心特征是后进先出，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中行和列分别对应图的顶点，矩阵元素的值表示对应顶点之间是否存在边以及边的相关属性
线性结构是一种数据结构，其核心性质包括有且仅有一个开始节点和一个终端节点，并且所有节点都最多有一个直接前驱和一个直接后继
树的深度是从根节点到最远叶节点的最长路径长度
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除
连通图中任意两点之间都存在路径可相互到达
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，直到遍历完所有
稳定性特点核心概念是系统或事物保持原有状态的特性
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法
数据类型具有特定的取值范围、存储方式以及可进行的操作等核心特征
比较排序是基于元素间比较来确定元素相对位置的排序方法
树的度是树内各节点的度的最大值，其中节点的度是指该节点拥有的子树的数目
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即连接两个顶点的边没有特定的起始顶点和终止顶点
动态规划入门是一种通过将问题分解为相互重叠的子问题并利用子问题的解来高效求解复杂问题的算法设计策略
比较排序是基于元素间比较来确定其最终排序位置
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除了第一个元素无前驱
稳定性是指在排序算法中，相等元素在排序前后的相对位置保持不变的特性
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，通过这些权重值
树的高度是从根节点到最远叶子节点的最长简单路径上的边数
加权图是一种图结构，其中每条边都被赋予一个权重值以表示该边的某种属性或代价等
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，从而直观地反映图中
在树形数据结构中，根节点是没有前驱节点且位于树顶端的特殊节点
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，
线性结构中数据元素存在一对一的线性关系
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构，其核心特征
映射是一种具有特定对应关系的数据结构特点，它使得集合A中的每一个元素在集合B中都有唯一确定的元素与之对应
循环链表的核心特征是表中最后一个节点的指针域指向头节点，从而使整个链表形成一个环
图的边是连接图中两个顶点的线表示顶点之间的关系其具有方向或无方向对于有向图边是有方向的从一个顶点指向另一个顶点对于无
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，若n=0则为空树，若n>0则有且仅有一个特定的称为
数据的物理结构是数据在计算机中的存储方式，它具有紧密依赖计算机硬件、直接影响数据处理效率、决定数据在存储器中的存储位置及顺序、与数据的逻辑结构
堆排序的核心特征是将数组构建成一个堆，利用堆的特性，每次取出堆顶元素并重新调整堆，使得剩余元素依然保持堆的结构，最终实现对
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，
比较排序是基于元素间比较来确定其相对次序的排序方式
在树形结构中一个节点存在其他节点以其为直接前驱那么该节点就是这些节点的父节点即父节点有子节点且子节点以其为直接前驱
栈的核心特征是后进先出，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
在数据结构中，稳定性指排序后相同元素相对位置不变
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，以此来体现图中
操作效率的定义的核心性质是指在完成特定任务或执行特定操作时，所衡量的关于时间、资源利用、产出等方面表现的关键特性
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数
邻接矩阵是一种表示图的方式，其特点是以一个二维数组来存储图中顶点之间的关系，数组元素的值表示对应顶点之间是否存在边或弧以及边或
树的节点是树结构中包含数据及指向子节点链接的基本单元
存储结构的特点是指数据在计算机内存或存储设备中组织和存储的方式所具有的诸如数据元素间的逻辑关系如何表示、数据元素如何存储等方面的特性
稳定性是指在数据结构中，对于相等的元素，排序前后它们的相对位置保持不变的特性
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步转变为有序序列，在排序过程中不断调整元素间的相对顺序直至达到最终有序状态
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，能灵活地实现数据的动态存储和高效操作
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和操作的实现细节封装起来
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问
归并排序是将数组分成子数组排序后再合并的排序方法
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的
邻接表的特点的核心特征是对于图中的每个顶点，用一个单链表来存储其所有邻接顶点，顶点表中存储顶点信息以及指向对应邻接表的
子节点的核心特征是在树状结构中，相对于某个特定节点而言，直接连接在该节点下方的节点，这些子节点与父节点通过特定的关系相连，并且
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在
满二叉树的核心性质是每一层上的节点数都达到最大值，即如果满二叉树的深度为k，那么它的节点总数为2^k - 1，
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，所有其他节点都直接或间接连接到根节点，它在树的层次结构中
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点可
图的顶点是图结构中具有特定标识且关联边的基本元素
队列特点是先进先出，元素按顺序进出
操作效率的核心特征是在单位时间内以最少的资源投入获得最大的产出且保证操作的准确性和稳定性同时能够快速响应各种任务需求并高效地完成一系列相关操作
线性查找是一种从数据序列开头开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方式其特点是对数据序列无特定要求且查找过程较为简单
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接
双向链表是一种数据结构，每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点从而形成双向链接关系
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有
存储结构是指数据元素及其关系在计算机存储器中的表示形式
贪心策略是在每一步选择中都采取当前状态下的最优决策
邻接矩阵是用于表示图的一种矩阵，若图中有n个顶点，其邻接矩阵是一个n×n的矩阵，矩阵中元素的值表示对应顶点之间是否存在
将问题分解为子问题，分别解决再合并得到原问题解
满二叉树是深度为k且有2的k次方减1个节点的二叉树其中每一层上的节点数都达到最大值即第i层上有2的i减
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法，其核心特征是将问题的所有可能情况无遗漏地
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且任意两个
稳定性的特点的核心性质是在一定条件下系统能够保持某种状态或特性不发生显著变化
迭代法通过重复执行步骤逐步逼近问题的解
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的算法策略
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的目标值进行比较，直到找到目标值或遍历完整个数据序列的一种查找算法
堆是一种特殊的数据结构，它是一个近似完全二叉树的结构且满足堆序性，即对于每个非叶子节点，其值大于或等于（大顶堆）或
非线性结构的核心性质是结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继
交换排序通过比较交换元素位置来完成排序
树的高度是从根节点到最远叶子节点的最长简单路径上的边数，它反映了树的层次结构深度以及节点分布的广度，体现了树中节点在
树中一个节点的子树个数称为该节点的度，树中节点的最大度数称为树的度
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，其特点包括数据封装、信息隐藏和数据抽象，核心性质是将数据
迭代法是一种不断用变量的旧值递推新值，通过重复执行某一运算过程以逼近问题解的数值计算方法
简单排序是对一组数据按照特定规则依次比较元素大小并进行交换或移动操作以实现从小到大或从大到小有序排列的排序方法
映射是一种特殊的二元关系，它在两个集合之间建立联系，使得对于一个集合中的每个元素，在另一个集合中都有唯一确定的元素与之对应
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性
线性表是零个或多个数据元素的有限序列