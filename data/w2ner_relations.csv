sentence,head,tail,head_offset,tail_offset,head_type,tail_type
树是一种递归定义的包含根节点及子树的非线性结构,非线性结构,递归,18,4,CON,CON
树是一种递归定义的包含根节点及子树的非线性结构,非线性结构,子树,18,15,CON,CON
树是一种递归定义的包含根节点及子树的非线性结构,非线性结构,根节点,18,11,CON,CON
树是一种递归定义的包含根节点及子树的非线性结构,递归,子树,4,15,CON,CON
树是一种递归定义的包含根节点及子树的非线性结构,递归,根节点,4,11,CON,CON
树是一种递归定义的包含根节点及子树的非线性结构,子树,根节点,15,11,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,右子树,9,28,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,根节点,9,22,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,二叉搜索树,9,0,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,子树,9,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,根节点,9,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,二叉搜索树,9,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,根节点,28,22,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,二叉搜索树,28,0,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,子树,28,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,根节点,28,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,二叉搜索树,28,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,二叉搜索树,22,0,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,子树,22,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,根节点,22,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,二叉搜索树,22,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,二叉搜索树,子树,0,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,二叉搜索树,根节点,0,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,二叉搜索树,二叉搜索树,0,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,子树,根节点,50,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,子树,二叉搜索树,50,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,二叉搜索树,41,56,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,35,0,CON,CON
顺序表的核心特征是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，支持随机访问，插入和删除,数组,删除,36,63,CON,CON
顺序表的核心特征是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，支持随机访问，插入和删除,数组,访问,36,57,CON,CON
顺序表的核心特征是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，支持随机访问，插入和删除,数组,插入,36,60,CON,CON
顺序表的核心特征是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，支持随机访问，插入和删除,删除,访问,63,57,CON,CON
顺序表的核心特征是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，支持随机访问，插入和删除,删除,插入,63,60,CON,CON
顺序表的核心特征是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，支持随机访问，插入和删除,访问,插入,57,60,CON,CON
回溯法基础的定义的核心性质是在问题求解过程中通过深度优先搜索方式，系统地尝试所有可能的解路径，当发现当前路径无法得到有效解或已无法,路径,回溯法,44,0,CON,CON
回溯法基础的定义的核心性质是在问题求解过程中通过深度优先搜索方式，系统地尝试所有可能的解路径，当发现当前路径无法得到有效解或已无法,路径,深度优先搜索,44,24,CON,CON
回溯法基础的定义的核心性质是在问题求解过程中通过深度优先搜索方式，系统地尝试所有可能的解路径，当发现当前路径无法得到有效解或已无法,路径,路径,44,52,CON,CON
回溯法基础的定义的核心性质是在问题求解过程中通过深度优先搜索方式，系统地尝试所有可能的解路径，当发现当前路径无法得到有效解或已无法,回溯法,深度优先搜索,0,24,CON,CON
回溯法基础的定义的核心性质是在问题求解过程中通过深度优先搜索方式，系统地尝试所有可能的解路径，当发现当前路径无法得到有效解或已无法,回溯法,路径,0,52,CON,CON
回溯法基础的定义的核心性质是在问题求解过程中通过深度优先搜索方式，系统地尝试所有可能的解路径，当发现当前路径无法得到有效解或已无法,深度优先搜索,路径,24,52,CON,CON
指针是一种变量，其值为内存中另一个变量或对象的地址，通过它可以间接访问和操作该内存位置处的数据,访问,指针,33,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,排序,插入,23,11,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,排序,排序,23,7,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,排序,排序,23,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,排序,插入排序,23,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,插入,排序,11,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,排序,排序,7,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序方法,排序,插入排序,14,0,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,遍历,访问,40,30,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,遍历,队列,40,57,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,遍历,遍历,40,10,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,遍历,图,40,9,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,遍历,广度优先搜索,40,0,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,访问,队列,30,57,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,访问,遍历,30,10,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,访问,图,30,9,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,访问,广度优先搜索,30,0,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,队列,遍历,57,10,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,队列,图,57,9,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,队列,广度优先搜索,57,0,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,遍历,图,10,9,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,遍历,广度优先搜索,10,0,CON,CON
广度优先搜索是一种图遍历算法，它从起始顶点开始，按照层次依次访问其邻接顶点，直到遍历完所有顶点或找到目标顶点，通过队列来辅助实现以,图,广度优先搜索,9,0,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,插入,访问,58,51,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,插入,删除,58,61,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,插入,访问,58,39,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,插入,线性表,58,6,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,访问,删除,51,61,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,访问,访问,51,39,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,访问,线性表,51,6,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,删除,访问,61,39,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,删除,线性表,61,6,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接访问元素，并且插入和删除,访问,线性表,39,6,CON,CON
映射是一种具有唯一性特点的关系，即对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,32,19,CON,CON
映射是一种具有唯一性特点的关系，即对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应,集合,映射,32,0,CON,CON
映射是一种具有唯一性特点的关系，即对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应,集合,映射,19,0,CON,CON
数组是相同类型数据元素的有序集合,数组,集合,0,14,CON,CON
数组是相同类型数据元素的有序集合,数组,数据元素,0,7,CON,CON
数组是相同类型数据元素的有序集合,集合,数据元素,14,7,CON,CON
快速排序是对无序数组进行分治的排序算法，选择一个基准值将数组分为两部分，小于基准值的元素放在左边，大于基准值的元素放在右边，通过,数组,数组,28,8,CON,CON
快速排序是对无序数组进行分治的排序算法，选择一个基准值将数组分为两部分，小于基准值的元素放在左边，大于基准值的元素放在右边，通过,数组,排序,28,15,CON,CON
快速排序是对无序数组进行分治的排序算法，选择一个基准值将数组分为两部分，小于基准值的元素放在左边，大于基准值的元素放在右边，通过,数组,快速排序,28,0,CON,CON
快速排序是对无序数组进行分治的排序算法，选择一个基准值将数组分为两部分，小于基准值的元素放在左边，大于基准值的元素放在右边，通过,数组,排序,8,15,CON,CON
快速排序是对无序数组进行分治的排序算法，选择一个基准值将数组分为两部分，小于基准值的元素放在左边，大于基准值的元素放在右边，通过,数组,快速排序,8,0,CON,CON
快速排序是对无序数组进行分治的排序算法，选择一个基准值将数组分为两部分，小于基准值的元素放在左边，大于基准值的元素放在右边，通过,排序,快速排序,15,0,CON,CON
回路是图中一条起点和终点相同的路径且除起点和终点外路径上的顶点不重复,路径,路径,15,25,CON,CON
回路是图中一条起点和终点相同的路径且除起点和终点外路径上的顶点不重复,路径,回路,15,0,CON,CON
回路是图中一条起点和终点相同的路径且除起点和终点外路径上的顶点不重复,路径,回路,25,0,CON,CON
深度优先搜索的核心性质是从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步，继续探索其他路径，直到遍历完,深度优先搜索,遍历,0,65,CON,CON
深度优先搜索的核心性质是从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步，继续探索其他路径，直到遍历完,深度优先搜索,路径,0,24,CON,CON
深度优先搜索的核心性质是从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步，继续探索其他路径，直到遍历完,深度优先搜索,路径,0,60,CON,CON
深度优先搜索的核心性质是从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步，继续探索其他路径，直到遍历完,遍历,路径,65,24,CON,CON
深度优先搜索的核心性质是从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步，继续探索其他路径，直到遍历完,遍历,路径,65,60,CON,CON
深度优先搜索的核心性质是从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步，继续探索其他路径，直到遍历完,路径,路径,24,60,CON,CON
冒泡排序是比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤，将最大元素逐步“冒泡”到数组末尾，每次比较和交换都能确定一个,冒泡排序,数组,0,46,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,遍历,指针,68,23,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,遍历,链表,68,38,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,遍历,链表,68,58,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,遍历,尾节点,68,19,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,遍历,链表,68,10,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,遍历,头节点,68,41,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,遍历,循环链表,68,0,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,指针,链表,23,38,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,指针,链表,23,58,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,指针,尾节点,23,19,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,指针,链表,23,10,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,指针,头节点,23,41,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,指针,循环链表,23,0,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,链表,38,58,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,尾节点,38,19,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,链表,38,10,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,头节点,38,41,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,循环链表,38,0,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,尾节点,58,19,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,链表,58,10,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,头节点,58,41,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,循环链表,58,0,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,尾节点,链表,19,10,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,尾节点,头节点,19,41,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,尾节点,循环链表,19,0,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,头节点,10,41,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表结构，其特点是尾节点的指针不是指向NULL，而是指向链表的头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历,头节点,循环链表,41,0,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,38,9,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,38,0,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,38,52,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,38,21,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,38,61,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,9,0,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,9,52,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,9,21,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,9,61,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,0,52,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,0,21,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,0,61,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,52,21,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,52,61,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边行进，最终能回到出发点，且回路中的边不重复经过（在简单回路情况下），同时回路包含,回路,回路,21,61,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是每次比较都能排除一半的元素从而高效地找到目标值,查找,二分查找,34,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是每次比较都能排除一半的元素从而高效地找到目标值,查找,数组,34,10,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是每次比较都能排除一半的元素从而高效地找到目标值,二分查找,数组,0,10,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点是数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素,线性结构,数据元素,0,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点是数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素,线性结构,数据元素,0,32,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点是数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素,数据元素,数据元素,7,32,CON,CON
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素,集合,集合,0,37,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,递归,9,20,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,排序,9,22,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,数组,9,12,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,快速排序,9,0,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,递归,排序,20,22,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,递归,数组,20,12,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,递归,快速排序,20,0,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,数组,22,12,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,快速排序,22,0,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,数组,快速排序,12,0,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，其核心性质为后进先出，即最后进入栈的元素最先被弹出,表尾,插入,8,12,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，其核心性质为后进先出，即最后进入栈的元素最先被弹出,表尾,线性表,8,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，其核心性质为后进先出，即最后进入栈的元素最先被弹出,表尾,删除,8,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，其核心性质为后进先出，即最后进入栈的元素最先被弹出,插入,线性表,12,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，其核心性质为后进先出，即最后进入栈的元素最先被弹出,插入,删除,12,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，其核心性质为后进先出，即最后进入栈的元素最先被弹出,线性表,删除,20,15,CON,CON
数据的物理结构是指数据在计算机内存或存储设备中的实际存储方式，包括数据元素的存储位置以及它们之间的存储关系，其特点是具体体现数据在物理介质,物理结构,数据元素,3,33,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继,数据元素,线性结构,30,0,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继,数据元素,数据元素,30,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继,线性结构,数据元素,0,7,CON,CON
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出，如同排队等待服务一样，新加入的元素排在,队列,队列,31,0,CON,CON
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出，如同排队等待服务一样，新加入的元素排在,队列,队列,31,17,CON,CON
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出，如同排队等待服务一样，新加入的元素排在,队列,队列,0,17,CON,CON
满二叉树是深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到最大值,满二叉树,二叉树,0,22,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,访问,集合,47,9,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,访问,数组,47,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,访问,数组,47,35,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,访问,数据类型,47,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,集合,数组,9,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,集合,数组,9,35,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,集合,数据类型,9,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,数组,数组,0,35,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,数组,数据类型,0,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过一个统一的数组名和下标来唯一标识和访问这些元素,数组,数据类型,35,23,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,线性表,访问,11,48,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,线性表,链表,11,50,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,线性表,指针,11,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,线性表,头节点,11,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,线性表,指针,11,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,访问,链表,48,50,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,访问,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,访问,指针,48,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,访问,头节点,48,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,访问,指针,48,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,链表,单链表,50,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,链表,指针,50,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,链表,头节点,50,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,链表,指针,50,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,单链表,指针,0,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,单链表,头节点,0,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,单链表,指针,0,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,指针,头节点,29,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,指针,指针,29,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，且除尾,头节点,指针,42,25,CON,CON
每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,44,5,CON,CON
每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,44,8,CON,CON
每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,44,47,CON,CON
每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,5,8,CON,CON
每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,5,47,CON,CON
每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,8,47,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,哈希函数,哈希表,13,0,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,根节点,根节点,16,11,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,根节点,子节点,16,43,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,根节点,子节点,16,31,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,根节点,子节点,16,25,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,根节点,子节点,11,43,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,根节点,子节点,11,31,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,根节点,子节点,11,25,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,子节点,子节点,43,31,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,子节点,子节点,43,25,CON,CON
树的核心特征是具有一个根节点，且根节点有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，形成层次分明,子节点,子节点,31,25,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,线性表,25,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,线性表,41,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,链表,37,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,37,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,37,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,0,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,线性表,存储结构,50,20,CON,CON
图的核心特征是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点表示事物，边表示事物之间的关系,集合,集合,20,10,CON,CON
回溯法是一种通过尝试所有可能的解空间路径来寻找问题解的算法策略，在搜索过程中一旦发现当前路径无法导致有效解则回溯到上一步重新选择路径,路径,回溯法,44,0,CON,CON
回溯法是一种通过尝试所有可能的解空间路径来寻找问题解的算法策略，在搜索过程中一旦发现当前路径无法导致有效解则回溯到上一步重新选择路径,路径,路径,44,18,CON,CON
回溯法是一种通过尝试所有可能的解空间路径来寻找问题解的算法策略，在搜索过程中一旦发现当前路径无法导致有效解则回溯到上一步重新选择路径,路径,路径,44,64,CON,CON
回溯法是一种通过尝试所有可能的解空间路径来寻找问题解的算法策略，在搜索过程中一旦发现当前路径无法导致有效解则回溯到上一步重新选择路径,回溯法,路径,0,18,CON,CON
回溯法是一种通过尝试所有可能的解空间路径来寻找问题解的算法策略，在搜索过程中一旦发现当前路径无法导致有效解则回溯到上一步重新选择路径,回溯法,路径,0,64,CON,CON
回溯法是一种通过尝试所有可能的解空间路径来寻找问题解的算法策略，在搜索过程中一旦发现当前路径无法导致有效解则回溯到上一步重新选择路径,路径,路径,18,64,CON,CON
图的边是连接图中两个顶点的线其具有方向性或无方向性且在有向图中边有明确的起始顶点和终止顶点在无向图中边所连接,无向图,有向图,46,27,CON,CON
图的边是连接图中两个顶点的线其具有方向性或无方向性且在有向图中边有明确的起始顶点和终止顶点在无向图中边所连接,无向图,图的边,46,0,CON,CON
图的边是连接图中两个顶点的线其具有方向性或无方向性且在有向图中边有明确的起始顶点和终止顶点在无向图中边所连接,有向图,图的边,27,0,CON,CON
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,子节点,满二叉树,36,0,CON,CON
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,子节点,二叉树,36,7,CON,CON
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,子节点,子节点,36,54,CON,CON
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,满二叉树,二叉树,0,7,CON,CON
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,满二叉树,子节点,0,54,CON,CON
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,二叉树,子节点,7,54,CON,CON
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h,二叉树,完全二叉树,8,0,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,插入,36,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,出栈,36,43,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,线性表,36,21,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,删除,36,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,进栈,36,33,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,插入,36,26,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,插入,出栈,11,43,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,插入,线性表,11,21,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,插入,删除,11,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,插入,进栈,11,33,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,插入,插入,11,26,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,出栈,线性表,43,21,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,出栈,删除,43,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,出栈,进栈,43,33,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,出栈,插入,43,26,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,线性表,进栈,21,33,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,线性表,插入,21,26,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,进栈,14,33,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,删除,插入,14,26,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，其插入操作被称为进栈，删除操作被称为出栈，遵循后进先出的原则,进栈,插入,33,26,CON,CON
交换排序是一种排序算法，其核心特征是通过不断比较和交换元素的位置，将无序序列逐步转换为有序序列，在排序过程中相邻元素或不相邻元素间,排序,排序,7,49,CON,CON
交换排序是一种排序算法，其核心特征是通过不断比较和交换元素的位置，将无序序列逐步转换为有序序列，在排序过程中相邻元素或不相邻元素间,排序,交换排序,7,0,CON,CON
交换排序是一种排序算法，其核心特征是通过不断比较和交换元素的位置，将无序序列逐步转换为有序序列，在排序过程中相邻元素或不相邻元素间,排序,交换排序,49,0,CON,CON
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法，其核心性质是通过多次迭代逐步改进近似解使其越来越,迭代,迭代,22,56,CON,CON
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法，其核心性质是通过多次迭代逐步改进近似解使其越来越,迭代,迭代法,22,0,CON,CON
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法，其核心性质是通过多次迭代逐步改进近似解使其越来越,迭代,迭代法,56,0,CON,CON
链表是通过节点指针依次连接存储数据的线性数据结构,指针,链表,7,0,CON,CON
图的顶点是图结构中的基本数据元素，是图中各个节点的统称，用于表示图中的一个具体对象或实体，且具有唯一标识，其可以与其他顶点通过,图的顶点,数据元素,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,叶子节点,路径,12,19,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,叶子节点,树的高度,12,51,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,叶子节点,树的高度,12,0,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,叶子节点,根节点,12,6,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,路径,树的高度,19,51,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,路径,树的高度,19,0,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,路径,根节点,19,6,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,树的高度,树的高度,51,0,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,树的高度,根节点,51,6,CON,CON
树的高度是从根节点到最远叶子节点的最长路径上的边数或节点数所表示的数值，它反映了树的结构层次深度，不同树的高度因,树的高度,根节点,0,6,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,33,26,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,33,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,33,19,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,26,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,26,19,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,19,CON,CON
树的节点是包含数据元素及指向其子树的分支的基本数据结构单元,树的节点,数据元素,0,7,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,队列,40,48,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,数据元素,40,18,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,队列,40,59,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,线性表,40,8,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,队列,40,0,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,数据元素,48,18,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,队列,48,59,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,线性表,48,8,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,队列,48,0,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,数据元素,队列,18,59,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,数据元素,线性表,18,8,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,数据元素,队列,18,0,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,线性表,59,8,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,队列,队列,59,0,CON,CON
队列是一种特殊的线性表，其核心特征是数据元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，新元素总是添加在队列的,线性表,队列,8,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,映射,插入,19,36,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,映射,查找,19,34,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,映射,删除,19,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,插入,查找,36,34,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,插入,哈希表,36,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,插入,删除,36,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,插入,哈希函数,36,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,查找,哈希表,34,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,查找,删除,34,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,查找,哈希函数,34,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,哈希表,删除,0,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,哈希表,哈希函数,0,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置以实现快速的数据查找插入和删除操作,删除,哈希函数,39,13,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,查找,遍历,24,45,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,查找,线性表,24,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,查找,线性表,24,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,查找,顺序查找,24,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,遍历,线性表,45,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,遍历,线性表,45,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,遍历,顺序查找,45,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,线性表,线性表,50,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,线性表,顺序查找,50,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止,线性表,顺序查找,6,0,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,堆排序,排序,0,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,堆排序,堆,0,54,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,堆排序,堆,0,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,排序,堆,17,54,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,排序,堆,17,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,排序,堆,17,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,堆,堆,54,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,堆,堆,54,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与堆末尾元素交换，然后调整堆结构，重复此,堆,堆,34,8,CON,CON
叶子节点是树结构中没有子节点的末端节点,叶子节点,子节点,0,11,CON,CON
根节点是树结构中的起始节点，没有父节点，是整个树结构的顶端节点，它处于树的最上层，是树中所有其他节点的祖先，从根节点,父节点,根节点,16,55,CON,CON
根节点是树结构中的起始节点，没有父节点，是整个树结构的顶端节点，它处于树的最上层，是树中所有其他节点的祖先，从根节点,父节点,根节点,16,0,CON,CON
根节点是树结构中的起始节点，没有父节点，是整个树结构的顶端节点，它处于树的最上层，是树中所有其他节点的祖先，从根节点,根节点,根节点,55,0,CON,CON
非线性结构的核心特征是其数据元素之间存在着一对多或多对多的关系，各个数据元素不再保持依次的线性顺序，而是呈现出较为复杂的层次或网状,非线性结构,数据元素,0,12,CON,CON
非线性结构的核心特征是其数据元素之间存在着一对多或多对多的关系，各个数据元素不再保持依次的线性顺序，而是呈现出较为复杂的层次或网状,非线性结构,数据元素,0,34,CON,CON
非线性结构的核心特征是其数据元素之间存在着一对多或多对多的关系，各个数据元素不再保持依次的线性顺序，而是呈现出较为复杂的层次或网状,数据元素,数据元素,12,34,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,访问,遍历,30,4,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,访问,二叉树,30,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,访问,二叉树,30,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,访问,访问,30,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,遍历,二叉树,4,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,遍历,二叉树,4,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,遍历,访问,4,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,二叉树,0,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,访问,0,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,访问,18,16,CON,CON
回路是指在电路中，从电源的一端出发，经过若干个元件后又回到电源另一端的闭合路径，其特点包括能形成电流通路、各元件相互关联影响电流,路径,回路,37,0,CON,CON
二分查找是在有序数组中通过不断将区间分成两部分并依据目标值与中间元素的比较结果来确定目标值所在位置的查找算法,数组,查找,8,50,CON,CON
二分查找是在有序数组中通过不断将区间分成两部分并依据目标值与中间元素的比较结果来确定目标值所在位置的查找算法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将区间分成两部分并依据目标值与中间元素的比较结果来确定目标值所在位置的查找算法,查找,二分查找,50,0,CON,CON
子节点是树结构中直接连接在父节点之下的节点,父节点,子节点,13,0,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u,路径,有向图,23,33,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u,路径,连通图,23,0,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u,路径,无向图,23,6,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u,有向图,连通图,33,0,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u,有向图,无向图,33,6,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u,连通图,无向图,0,6,CON,CON
比较排序的核心特征是其排序过程主要基于元素之间的比较操作来确定元素的相对顺序从而实现排序,排序,比较排序,42,0,CON,CON
比较排序的核心特征是其排序过程主要基于元素之间的比较操作来确定元素的相对顺序从而实现排序,排序,排序,42,11,CON,CON
比较排序的核心特征是其排序过程主要基于元素之间的比较操作来确定元素的相对顺序从而实现排序,比较排序,排序,0,11,CON,CON
回溯法基础的特点的核心特征是在搜索解空间时通过深度优先搜索策略，按照某种规则依次尝试每一种可能情况，当发现当前选择无法得到有效解时就,回溯法,深度优先搜索,0,23,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,排序,树,34,9,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,排序,查找,34,2,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,排序,根节点,34,18,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,排序,遍历,34,46,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,树,查找,9,2,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,树,根节点,9,18,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,树,遍历,9,46,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,查找,根节点,2,18,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,查找,遍历,2,46,CON,CON
树的查找特点是基于树这种数据结构，从根节点开始，按照特定规则（如二叉排序树的比较规则等）逐步遍历节点，以确定是否存在目标元素,根节点,遍历,18,46,CON,CON
数据类型的核心特征是规定了数据的取值范围以及可对该数据执行的操作集合,集合,数据类型,32,0,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,数组,19,43,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,时间复杂度,19,54,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,数组,19,34,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,排序,19,29,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,数组,19,12,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,排序,19,25,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,归并排序,19,0,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,时间复杂度,43,54,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,数组,43,34,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,排序,43,29,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,数组,43,12,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,排序,43,25,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,归并排序,43,0,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,时间复杂度,数组,54,34,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,时间复杂度,排序,54,29,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,时间复杂度,数组,54,12,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,时间复杂度,排序,54,25,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,时间复杂度,归并排序,54,0,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,排序,34,29,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,数组,34,12,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,排序,34,25,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,归并排序,34,0,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,排序,数组,29,12,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,排序,排序,29,25,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,排序,归并排序,29,0,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,排序,12,25,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,数组,归并排序,12,0,CON,CON
归并排序是一种将一个无序数组分成两个子数组分别进行排序再将排序好的子数组合并成一个有序数组的稳定的分治算法其时间复杂度为O,排序,归并排序,25,0,CON,CON
交换排序通过比较交换元素位置实现排序,排序,交换排序,16,0,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,插入,排序,48,59,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,插入,排序,48,29,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,插入,排序,48,22,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,插入,数组,48,55,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,插入,插入排序,48,0,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,排序,59,29,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,排序,59,22,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,数组,59,55,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,插入排序,59,0,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,排序,29,22,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,数组,29,55,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,插入排序,29,0,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,数组,22,55,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,排序,插入排序,22,0,CON,CON
插入排序的核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入，直到整个数组都被排序,数组,插入排序,55,0,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,数据元素,逻辑结构,53,12,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,数据元素,存储结构,53,32,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,数据元素,数据元素,53,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,数据元素,线性表,53,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,逻辑结构,存储结构,12,32,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,逻辑结构,数据元素,12,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,逻辑结构,线性表,12,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,存储结构,数据元素,32,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,存储结构,线性表,32,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间呈线性关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上相邻,数据元素,线性表,17,6,CON,CON
链表是通过指针连接节点存储数据且逻辑上相邻的线性结构,链表,指针,0,5,CON,CON
链表是通过指针连接节点存储数据且逻辑上相邻的线性结构,链表,线性结构,0,22,CON,CON
链表是通过指针连接节点存储数据且逻辑上相邻的线性结构,指针,线性结构,5,22,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在排序前后相对位置保持不变则该数据结构具有稳定性,稳定性,数据元素,43,18,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在排序前后相对位置保持不变则该数据结构具有稳定性,稳定性,排序,43,23,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在排序前后相对位置保持不变则该数据结构具有稳定性,稳定性,稳定性,43,0,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在排序前后相对位置保持不变则该数据结构具有稳定性,数据元素,排序,18,23,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在排序前后相对位置保持不变则该数据结构具有稳定性,数据元素,稳定性,18,0,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在排序前后相对位置保持不变则该数据结构具有稳定性,排序,稳定性,23,0,CON,CON
有向图是一种由顶点集合以及顶点之间的有向边构成的数据结构，其中每条有向边都具有明确的方向，从一个顶点指向另一个顶点,集合,有向图,9,0,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点，是树中所有其他节点的直接或间接祖先，树从根节点开始逐步衍生出其他节点从而,根节点,父节点,46,22,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点，是树中所有其他节点的直接或间接祖先，树从根节点开始逐步衍生出其他节点从而,根节点,根节点,46,0,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点，是树中所有其他节点的直接或间接祖先，树从根节点开始逐步衍生出其他节点从而,父节点,根节点,22,0,CON,CON
堆是一种特殊的数据结构，其核心性质包括：父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值，并且堆具有完全,父节点,堆,20,55,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,路径,连通图,44,0,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,路径,有向图,44,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,路径,路径,44,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,路径,无向图,44,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,连通图,有向图,0,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,连通图,路径,0,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,连通图,无向图,0,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,有向图,路径,27,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,有向图,无向图,27,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点之间都存在有向路径可相互到达的图,路径,无向图,21,6,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,双向链表,27,0,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,后继节点,27,45,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,指针,27,55,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,前驱节点,27,35,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,后继节点,0,45,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,指针,0,55,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,前驱节点,0,35,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,后继节点,指针,45,55,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,后继节点,前驱节点,45,35,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,前驱节点,55,35,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,叶子节点,路径,21,16,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,叶子节点,树的高度,21,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,叶子节点,根节点,21,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,路径,树的高度,16,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,路径,根节点,16,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,树的高度,根节点,0,6,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,无向图,集合,48,4,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,无向图,有向图,48,36,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,无向图,集合,48,13,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,无向图,图,48,52,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,集合,有向图,4,36,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,集合,集合,4,13,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,集合,图,4,52,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,有向图,集合,36,13,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,有向图,图,36,52,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间通过边相连，边可以具有方向形成有向图，也可以无方向形成无向图，图可用于表示,集合,图,13,52,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,头节点,尾节点,12,7,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,头节点,链表,12,20,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,头节点,循环链表,12,0,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,尾节点,链表,7,20,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,尾节点,循环链表,7,0,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,链表,循环链表,20,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活高效地操作内存、实现动态数据结构,访问,指针,31,25,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活高效地操作内存、实现动态数据结构,访问,指针,31,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活高效地操作内存、实现动态数据结构,指针,指针,25,0,CON,CON
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点指向另一个顶点的方向,图,有向图,18,0,CON,CON
加权图是一种图结构，其中图的每条边都被赋予一个数值作为权值，这些权值可表示诸如距离、成本、容量等与边相关的某种度量,图,加权图,6,0,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,存储结构,映射,0,41,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,存储结构,数据元素,0,44,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,存储结构,访问,0,62,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,存储结构,数据元素,0,14,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,映射,数据元素,41,44,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,映射,访问,41,62,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,映射,数据元素,41,14,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,数据元素,访问,44,62,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,数据元素,数据元素,44,14,CON,CON
存储结构的特点的核心特征包括数据元素在计算机内存中的存储方式、存储位置与逻辑关系的映射、数据元素间关系的表示方法以及对数据的访问和操作方式,访问,数据元素,62,14,CON,CON
单链表的核心性质是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针依次连接各个节点形成线性序列，且除了最后一个节点外每个,指针,数据元素,32,17,CON,CON
单链表的核心性质是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针依次连接各个节点形成线性序列，且除了最后一个节点外每个,指针,指针,32,39,CON,CON
单链表的核心性质是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针依次连接各个节点形成线性序列，且除了最后一个节点外每个,指针,单链表,32,0,CON,CON
单链表的核心性质是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针依次连接各个节点形成线性序列，且除了最后一个节点外每个,数据元素,指针,17,39,CON,CON
单链表的核心性质是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针依次连接各个节点形成线性序列，且除了最后一个节点外每个,数据元素,单链表,17,0,CON,CON
单链表的核心性质是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针依次连接各个节点形成线性序列，且除了最后一个节点外每个,指针,单链表,39,0,CON,CON
子节点是树结构中与某一节点直接相连且处于该节点下方层次的节点，其与父节点存在直接的层级关联关系，是树状结构中特定层级位置,父节点,子节点,33,0,CON,CON
子节点的核心性质是其与父节点存在特定关联且在树状结构等相关数据结构中有明确的位置和作用关系，是构成整体结构的重要组成部分,父节点,子节点,11,0,CON,CON
二叉树是每个节点最多有两个子树的树结构,子树,二叉树,13,0,CON,CON
线性表是一种具有线性结构的数据结构，其特点的核心特征为存在唯一的一个被称为“第一个”的数据元素，存在唯一的一个被称为“最后一个”的数据元素,线性结构,数据元素,8,65,CON,CON
线性表是一种具有线性结构的数据结构，其特点的核心特征为存在唯一的一个被称为“第一个”的数据元素，存在唯一的一个被称为“最后一个”的数据元素,线性结构,线性表,8,0,CON,CON
线性表是一种具有线性结构的数据结构，其特点的核心特征为存在唯一的一个被称为“第一个”的数据元素，存在唯一的一个被称为“最后一个”的数据元素,线性结构,数据元素,8,43,CON,CON
线性表是一种具有线性结构的数据结构，其特点的核心特征为存在唯一的一个被称为“第一个”的数据元素，存在唯一的一个被称为“最后一个”的数据元素,数据元素,线性表,65,0,CON,CON
线性表是一种具有线性结构的数据结构，其特点的核心特征为存在唯一的一个被称为“第一个”的数据元素，存在唯一的一个被称为“最后一个”的数据元素,数据元素,数据元素,65,43,CON,CON
线性表是一种具有线性结构的数据结构，其特点的核心特征为存在唯一的一个被称为“第一个”的数据元素，存在唯一的一个被称为“最后一个”的数据元素,线性表,数据元素,0,43,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,访问,46,40,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,递归,46,38,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,根节点,46,34,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,遍历,46,3,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,访问,46,57,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,二叉树,46,0,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,访问,46,32,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,二叉树,46,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,左子树,46,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,遍历,46,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,遍历,46,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,访问,46,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,右子树,递归,46,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,递归,40,38,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,根节点,40,34,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,遍历,40,3,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,访问,40,57,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,二叉树,40,0,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,访问,40,32,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,二叉树,40,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,左子树,40,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,遍历,40,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,遍历,40,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,访问,40,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,递归,40,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,根节点,38,34,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,遍历,38,3,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,访问,38,57,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,二叉树,38,0,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,访问,38,32,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,二叉树,38,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,左子树,38,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,遍历,38,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,遍历,38,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,访问,38,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,递归,递归,38,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,遍历,34,3,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,访问,34,57,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,二叉树,34,0,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,访问,34,32,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,二叉树,34,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,左子树,34,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,遍历,34,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,遍历,34,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,访问,34,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,根节点,递归,34,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,访问,3,57,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,二叉树,3,0,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,访问,3,32,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,二叉树,3,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,左子树,3,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,遍历,3,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,遍历,3,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,访问,3,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,递归,3,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,二叉树,57,0,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,访问,57,32,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,二叉树,57,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,左子树,57,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,遍历,57,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,遍历,57,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,访问,57,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,递归,57,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,访问,0,32,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,二叉树,0,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,左子树,0,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,遍历,0,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,遍历,0,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,访问,0,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,递归,0,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,二叉树,32,17,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,左子树,32,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,遍历,32,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,遍历,32,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,访问,32,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,递归,32,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,左子树,17,42,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,遍历,17,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,遍历,17,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,访问,17,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,二叉树,递归,17,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,左子树,遍历,42,52,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,左子树,遍历,42,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,左子树,访问,42,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,左子树,递归,42,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,遍历,52,29,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,访问,52,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,递归,52,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,访问,29,15,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,遍历,递归,29,55,CON,CON
二叉树遍历的特点是按照特定规则访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问,访问,递归,15,55,CON,CON
队列的核心性质是先进先出即先进入队列的元素先出队列,队列,队列,16,23,CON,CON
队列的核心性质是先进先出即先进入队列的元素先出队列,队列,队列,16,0,CON,CON
队列的核心性质是先进先出即先进入队列的元素先出队列,队列,队列,23,0,CON,CON
从根节点到最远叶子节点所经最长路径上边的数目为树的深度,路径,根节点,15,1,CON,CON
从根节点到最远叶子节点所经最长路径上边的数目为树的深度,路径,叶子节点,15,7,CON,CON
从根节点到最远叶子节点所经最长路径上边的数目为树的深度,路径,树的深度,15,23,CON,CON
从根节点到最远叶子节点所经最长路径上边的数目为树的深度,根节点,叶子节点,1,7,CON,CON
从根节点到最远叶子节点所经最长路径上边的数目为树的深度,根节点,树的深度,1,23,CON,CON
从根节点到最远叶子节点所经最长路径上边的数目为树的深度,叶子节点,树的深度,7,23,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,查找,数组,63,8,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,查找,数组,63,16,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,查找,查找,63,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,查找,二分查找,63,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,数组,数组,8,16,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,数组,查找,8,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,数组,查找,16,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,数组,二分查找,16,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种高效查找算法,查找,二分查找,37,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
迭代法是一种不断用变量的旧值递推新值的求解方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下,递推,迭代法,14,0,CON,CON
迭代法是一种不断用变量的旧值递推新值的求解方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下,递推,迭代,14,49,CON,CON
迭代法是一种不断用变量的旧值递推新值的求解方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下,迭代法,迭代,0,49,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,插入,38,57,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,链表,38,53,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,遍历,38,51,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,删除,38,60,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,前驱节点,38,19,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,后继节点,38,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,指针,38,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,双向链表,38,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,插入,链表,57,53,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,插入,遍历,57,51,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,插入,删除,57,60,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,插入,前驱节点,57,19,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,插入,后继节点,57,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,插入,指针,57,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,插入,双向链表,57,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,链表,遍历,53,51,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,链表,删除,53,60,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,链表,前驱节点,53,19,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,链表,后继节点,53,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,链表,指针,53,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,链表,双向链表,53,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,遍历,删除,51,60,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,遍历,前驱节点,51,19,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,遍历,后继节点,51,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,遍历,指针,51,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,遍历,双向链表,51,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,删除,前驱节点,60,19,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,删除,后继节点,60,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,删除,指针,60,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,删除,双向链表,60,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,前驱节点,后继节点,19,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,前驱节点,指针,19,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,前驱节点,双向链表,19,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,后继节点,指针,28,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,后继节点,双向链表,28,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以方便地在两个方向上遍历链表，且插入和删除节点时除,指针,双向链表,12,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据,指针,访问,0,30,CON,CON
选择排序是一种在未排序序列中找到最小（大）元素存放到排序序列起始位置，然后再从剩余未排序元素中继续寻找最小（大）元素，然后放到,排序,排序,42,9,CON,CON
选择排序是一种在未排序序列中找到最小（大）元素存放到排序序列起始位置，然后再从剩余未排序元素中继续寻找最小（大）元素，然后放到,排序,排序,42,26,CON,CON
选择排序是一种在未排序序列中找到最小（大）元素存放到排序序列起始位置，然后再从剩余未排序元素中继续寻找最小（大）元素，然后放到,排序,选择排序,42,0,CON,CON
选择排序是一种在未排序序列中找到最小（大）元素存放到排序序列起始位置，然后再从剩余未排序元素中继续寻找最小（大）元素，然后放到,排序,排序,9,26,CON,CON
选择排序是一种在未排序序列中找到最小（大）元素存放到排序序列起始位置，然后再从剩余未排序元素中继续寻找最小（大）元素，然后放到,排序,选择排序,9,0,CON,CON
选择排序是一种在未排序序列中找到最小（大）元素存放到排序序列起始位置，然后再从剩余未排序元素中继续寻找最小（大）元素，然后放到,排序,选择排序,26,0,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其平均时间复杂度为O(n)，空间复杂度为,查找,遍历,2,36,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其平均时间复杂度为O(n)，空间复杂度为,查找,空间复杂度,2,58,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其平均时间复杂度为O(n)，空间复杂度为,查找,时间复杂度,2,47,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其平均时间复杂度为O(n)，空间复杂度为,遍历,空间复杂度,36,58,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其平均时间复杂度为O(n)，空间复杂度为,遍历,时间复杂度,36,47,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其平均时间复杂度为O(n)，空间复杂度为,空间复杂度,时间复杂度,58,47,CON,CON
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合具有确定性、互异性和无序性，即给定一个,集合,集合,43,0,CON,CON
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合具有确定性、互异性和无序性，即给定一个,集合,集合,43,37,CON,CON
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合具有确定性、互异性和无序性，即给定一个,集合,集合,0,37,CON,CON
有向图是一种图结构，由顶点集合和有向边集合组成，其中每条有向边是从一个顶点指向另一个顶点的有序对,集合,集合,19,13,CON,CON
有向图是一种图结构，由顶点集合和有向边集合组成，其中每条有向边是从一个顶点指向另一个顶点的有序对,集合,图,19,6,CON,CON
有向图是一种图结构，由顶点集合和有向边集合组成，其中每条有向边是从一个顶点指向另一个顶点的有序对,集合,有向图,19,0,CON,CON
有向图是一种图结构，由顶点集合和有向边集合组成，其中每条有向边是从一个顶点指向另一个顶点的有序对,集合,图,13,6,CON,CON
有向图是一种图结构，由顶点集合和有向边集合组成，其中每条有向边是从一个顶点指向另一个顶点的有序对,集合,有向图,13,0,CON,CON
有向图是一种图结构，由顶点集合和有向边集合组成，其中每条有向边是从一个顶点指向另一个顶点的有序对,图,有向图,6,0,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,排序,子树,22,8,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,排序,平衡二叉树,22,0,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,排序,树,22,24,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,子树,平衡二叉树,8,0,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,子树,树,8,24,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,平衡二叉树,树,0,24,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,61,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,61,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,13,0,CON,CON
数组是存储相同类型数据的有序集合且内存连续,集合,数组,14,0,CON,CON
叶子节点是一棵树中没有子节点的节点其核心性质为不存在任何子节点,子节点,叶子节点,28,0,CON,CON
叶子节点是一棵树中没有子节点的节点其核心性质为不存在任何子节点,子节点,子节点,28,11,CON,CON
叶子节点是一棵树中没有子节点的节点其核心性质为不存在任何子节点,叶子节点,子节点,0,11,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应,集合,映射,22,0,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应,集合,集合,22,10,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应,映射,集合,0,10,CON,CON
邻接表的核心特征是通过为图中每个顶点建立一个单链表，链表中节点包含与该顶点相邻的顶点信息，从而直观地表示图的边关系，且,单链表,链表,22,26,CON,CON
邻接表的核心特征是通过为图中每个顶点建立一个单链表，链表中节点包含与该顶点相邻的顶点信息，从而直观地表示图的边关系，且,单链表,邻接表,22,0,CON,CON
邻接表的核心特征是通过为图中每个顶点建立一个单链表，链表中节点包含与该顶点相邻的顶点信息，从而直观地表示图的边关系，且,链表,邻接表,26,0,CON,CON
单链表是由节点组成且每个节点只指向下一节点的线性表,线性表,单链表,22,0,CON,CON
比较排序是基于元素之间的比较来确定元素之间的相对次序从而将给定元素序列排成有序序列的排序方法,排序,比较排序,42,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,访问,18,24,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,访问,18,41,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,遍历,18,62,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,广度优先搜索,18,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,访问,24,41,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,遍历,24,62,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,广度优先搜索,24,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,遍历,41,62,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,访问,广度优先搜索,41,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点，以此类推，直到遍历,遍历,广度优先搜索,62,0,CON,CON
树中一个节点的子树数目称为该节点的度，树中所有节点度的最大值就是树的度，其核心特征是反映树中节点分支情况以及整棵树,树的度,树,32,56,CON,CON
树中一个节点的子树数目称为该节点的度，树中所有节点度的最大值就是树的度，其核心特征是反映树中节点分支情况以及整棵树,树的度,子树,32,7,CON,CON
树中一个节点的子树数目称为该节点的度，树中所有节点度的最大值就是树的度，其核心特征是反映树中节点分支情况以及整棵树,树,子树,56,7,CON,CON
交换排序是通过比较序列中元素并交换逆序元素位置，将无序序列逐步调整为有序序列的排序方法,排序,交换排序,39,0,CON,CON
邻接表的核心性质是对于图中的每个顶点，都有一个链表来存储与该顶点相邻接的其他顶点,链表,邻接表,23,0,CON,CON
线性表的核心特征是具有有限个数据元素，且数据元素之间存在一对一的线性关系，即除第一个元素外每个元素有且仅有一个直接前驱，除最后一个元素,数据元素,线性表,14,0,CON,CON
线性表的核心特征是具有有限个数据元素，且数据元素之间存在一对一的线性关系，即除第一个元素外每个元素有且仅有一个直接前驱，除最后一个元素,数据元素,数据元素,14,20,CON,CON
线性表的核心特征是具有有限个数据元素，且数据元素之间存在一对一的线性关系，即除第一个元素外每个元素有且仅有一个直接前驱，除最后一个元素,线性表,数据元素,0,20,CON,CON
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和操作的语义，而不依赖于具体的实现细节,抽象数据类型,逻辑结构,0,35,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,后继节点,指针,48,31,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,后继节点,前驱节点,48,39,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,后继节点,指针,48,57,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,后继节点,双向链表,48,0,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,指针,前驱节点,31,39,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,指针,指针,31,57,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,指针,双向链表,31,0,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,前驱节点,指针,39,57,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,前驱节点,双向链表,39,0,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向,指针,双向链表,57,0,CON,CON
顺序查找的核心性质是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列,查找,顺序查找,33,0,CON,CON
顺序查找的核心性质是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列,查找,遍历,33,54,CON,CON
顺序查找的核心性质是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列,顺序查找,遍历,0,54,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,遍历,28,4,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,二叉树,28,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,二叉树,28,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,访问,28,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,遍历,二叉树,4,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,遍历,二叉树,4,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,遍历,访问,4,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,二叉树,二叉树,0,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,二叉树,访问,0,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,二叉树,访问,17,15,CON,CON
算法效率是指算法执行所需要的计算机资源量，一般用时间复杂度和空间复杂度来衡量算法执行时间和占用空间随问题规模增长的变化情况,空间复杂度,时间复杂度,30,24,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,47,22,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,47,0,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,47,41,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,左子树,47,18,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,右子树,平衡二叉树,22,0,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,右子树,子树,22,41,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,右子树,左子树,22,18,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,0,41,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,左子树,0,18,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度之差不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,41,18,CON,CON
无向图是一种图结构，其中边没有方向，即如果存在一条连接顶点A和顶点B的边，那么从顶点A到顶点B和从顶点B到顶点A,图,无向图,6,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉搜索树,左子树,0,22,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉搜索树,右子树,0,42,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,左子树,右子树,22,42,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,访问,队列,18,54,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,访问,访问,18,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,队列,广度优先搜索,54,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,队列,访问,54,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,队列,访问,54,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,广度优先搜索,访问,0,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,广度优先搜索,访问,0,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问当前层节点时才会拓展到下一层节点，通过队列来辅助实现，保证,访问,访问,12,33,CON,CON
非线性结构是一种数据元素之间存在着一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系,非线性结构,数据元素,0,8,CON,CON
非线性结构是一种数据元素之间存在着一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系,非线性结构,数据元素,0,33,CON,CON
非线性结构是一种数据元素之间存在着一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系,数据元素,数据元素,8,33,CON,CON
深度优先搜索的核心特征是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，优先访问深度方向上的节点,深度优先搜索,访问,0,56,CON,CON
深度优先搜索的核心特征是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，优先访问深度方向上的节点,深度优先搜索,路径,0,16,CON,CON
深度优先搜索的核心特征是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，优先访问深度方向上的节点,深度优先搜索,路径,0,51,CON,CON
深度优先搜索的核心特征是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，优先访问深度方向上的节点,访问,路径,56,16,CON,CON
深度优先搜索的核心特征是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，优先访问深度方向上的节点,访问,路径,56,51,CON,CON
深度优先搜索的核心特征是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，优先访问深度方向上的节点,路径,路径,16,51,CON,CON
树的高度是从根节点到最远叶子节点所经过的最长路径上的边数或节点数，其核心特征在于体现了树从根到叶的最长延伸距离，,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点所经过的最长路径上的边数或节点数，其核心特征在于体现了树从根到叶的最长延伸距离，,根节点,路径,6,22,CON,CON
树的高度是从根节点到最远叶子节点所经过的最长路径上的边数或节点数，其核心特征在于体现了树从根到叶的最长延伸距离，,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点所经过的最长路径上的边数或节点数，其核心特征在于体现了树从根到叶的最长延伸距离，,树的高度,路径,0,22,CON,CON
树的高度是从根节点到最远叶子节点所经过的最长路径上的边数或节点数，其核心特征在于体现了树从根到叶的最长延伸距离，,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点所经过的最长路径上的边数或节点数，其核心特征在于体现了树从根到叶的最长延伸距离，,路径,叶子节点,22,12,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,父节点,子节点,51,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,父节点,回路,51,60,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,父节点,根节点,51,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,父节点,根节点,51,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,子节点,回路,32,60,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,子节点,根节点,32,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,回路,根节点,60,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,回路,根节点,60,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且不存在回路,根节点,根节点,17,37,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,路径,6,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,路径,0,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,路径,叶子节点,22,12,CON,CON
冒泡排序是比较相邻元素大小并按规则交换位置的排序算法,排序,冒泡排序,22,0,CON,CON
循环链表是一种首尾相连的链表结构,链表,循环链表,12,0,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,31,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,52,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,52,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,31,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,31,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,52,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,52,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,52,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,52,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,22,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,22,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,22,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,46,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,46,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,14,8,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,查找,47,27,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,遍历,47,53,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,查找,47,2,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,47,18,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,47,58,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,47,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,遍历,27,53,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,查找,27,2,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,27,18,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,27,58,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,27,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,查找,53,2,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,线性表,53,18,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,线性表,53,58,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,线性表,53,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,2,18,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,2,58,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,2,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,线性表,18,58,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,线性表,18,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,线性表,58,6,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,插入,排序,19,23,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,插入,数组,19,48,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,插入,排序,19,15,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,插入,插入排序,19,0,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,排序,数组,23,48,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,排序,排序,23,15,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,排序,插入排序,23,0,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,数组,排序,48,15,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,数组,插入排序,48,0,CON,CON
插入排序的特点的核心性质是将未排序数据插入到已排序序列的合适位置，通过不断重复此操作，最终使整个数组有序,排序,插入排序,15,0,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向其子节点的指针,指针,数据元素,32,14,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向其子节点的指针,指针,树的节点,32,0,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向其子节点的指针,数据元素,树的节点,14,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序,排序,排序,7,44,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序,排序,比较排序,7,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序,排序,比较排序,44,0,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,43,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,43,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,43,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,5,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,5,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,14,26,CON,CON
在树结构中按特定规则找到目标节点的操作是树查找核心概念,树,查找,20,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定关键字进行比较，直到找到匹配元素或遍历完整个序列为止的查找方法,遍历,数据元素,45,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定关键字进行比较，直到找到匹配元素或遍历完整个序列为止的查找方法,遍历,查找,45,55,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定关键字进行比较，直到找到匹配元素或遍历完整个序列为止的查找方法,遍历,顺序查找,45,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定关键字进行比较，直到找到匹配元素或遍历完整个序列为止的查找方法,数据元素,查找,21,55,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定关键字进行比较，直到找到匹配元素或遍历完整个序列为止的查找方法,数据元素,顺序查找,21,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定关键字进行比较，直到找到匹配元素或遍历完整个序列为止的查找方法,查找,顺序查找,55,0,CON,CON
映射是集合 A 到集合 B 的一种对应关系使 A 中元素在 B 中有唯一对应,集合,集合,3,9,CON,CON
映射是集合 A 到集合 B 的一种对应关系使 A 中元素在 B 中有唯一对应,集合,映射,3,0,CON,CON
映射是集合 A 到集合 B 的一种对应关系使 A 中元素在 B 中有唯一对应,集合,映射,9,0,CON,CON
递归基础是递归函数中最简单的情况，其特点是函数直接返回一个已知值而不再调用自身，它是递归过程的终止条件，确保递归不会无限进行下去,递归,递归基础,42,0,CON,CON
递归基础是递归函数中最简单的情况，其特点是函数直接返回一个已知值而不再调用自身，它是递归过程的终止条件，确保递归不会无限进行下去,递归,递归,42,54,CON,CON
递归基础是递归函数中最简单的情况，其特点是函数直接返回一个已知值而不再调用自身，它是递归过程的终止条件，确保递归不会无限进行下去,递归基础,递归,0,54,CON,CON
快速排序是对包含n个记录的序列进行排序，通过一趟排序将序列分为两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后分别对这,快速排序,排序,0,17,CON,CON
快速排序是对包含n个记录的序列进行排序，通过一趟排序将序列分为两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后分别对这,快速排序,排序,0,24,CON,CON
快速排序是对包含n个记录的序列进行排序，通过一趟排序将序列分为两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后分别对这,排序,排序,17,24,CON,CON
数据类型是一组值的集合以及定义在这组值上的一组操作的总称，其特点包括具有特定的数据值范围、有相应的存储形式、定义了针对该类型,数据类型,集合,0,9,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,查找,查找,28,2,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,查找,遍历,28,49,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,查找,查找,28,57,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,查找,遍历,2,49,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,查找,查找,2,57,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,遍历,查找,49,57,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,40,30,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,40,20,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,排序,40,34,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,40,45,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,40,13,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,40,55,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,归并排序,40,0,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,30,20,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,排序,30,34,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,30,45,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,30,13,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,30,55,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,归并排序,30,0,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,排序,20,34,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,20,45,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,20,13,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,20,55,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,归并排序,20,0,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,34,45,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,34,13,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,数组,34,55,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,排序,归并排序,34,0,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,45,13,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,45,55,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,归并排序,45,0,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,数组,13,55,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,归并排序,13,0,CON,CON
归并排序的核心特征是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组,数组,归并排序,55,0,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -,二叉树,满二叉树,7,0,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -,二叉树,满二叉树,7,41,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -,二叉树,二叉树,7,29,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -,满二叉树,满二叉树,0,41,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -,满二叉树,二叉树,0,29,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -,满二叉树,二叉树,41,29,CON,CON
叶子节点是指在树状结构中没有子节点的节点,叶子节点,子节点,0,14,CON,CON
数据的逻辑结构的核心性质是数据元素之间的逻辑关系，它独立于数据的存储方式，描述了数据元素之间的抽象关系而非具体的物理存储细节,逻辑结构,数据元素,3,40,CON,CON
数据的逻辑结构的核心性质是数据元素之间的逻辑关系，它独立于数据的存储方式，描述了数据元素之间的抽象关系而非具体的物理存储细节,逻辑结构,数据元素,3,13,CON,CON
数据的逻辑结构的核心性质是数据元素之间的逻辑关系，它独立于数据的存储方式，描述了数据元素之间的抽象关系而非具体的物理存储细节,数据元素,数据元素,40,13,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,线性结构,36,53,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,数据元素,36,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,集合,36,50,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,存储结构,36,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,逻辑结构,36,3,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,线性结构,数据元素,53,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,线性结构,集合,53,50,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,线性结构,存储结构,53,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,线性结构,逻辑结构,53,3,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,集合,9,50,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,存储结构,9,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,数据元素,逻辑结构,9,3,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,集合,存储结构,50,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,集合,逻辑结构,50,3,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式，包括集合、线性结构、树形结构和图,存储结构,逻辑结构,28,3,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包括数据元素的表示和关系的表示两方面内容,存储结构,数据元素,0,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包括数据元素的表示和关系的表示两方面内容,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包括数据元素的表示和关系的表示两方面内容,数据元素,数据元素,29,6,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除第一个元素外，每个元素有且仅有一个直接前驱,线性表,数据元素,0,26,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除第一个元素外，每个元素有且仅有一个直接前驱,线性表,数据元素,0,12,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除第一个元素外，每个元素有且仅有一个直接前驱,数据元素,数据元素,26,12,CON,CON
递归基础是递归算法中满足特定条件可直接得到结果而无需再次递归调用自身的初始情况定义,递归,递归,28,5,CON,CON
递归基础是递归算法中满足特定条件可直接得到结果而无需再次递归调用自身的初始情况定义,递归,递归基础,28,0,CON,CON
递归基础是递归算法中满足特定条件可直接得到结果而无需再次递归调用自身的初始情况定义,递归,递归基础,5,0,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，在该结构中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除第一个元素,线性结构,数据元素,0,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，在该结构中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除第一个元素,线性结构,数据元素,0,33,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，在该结构中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除第一个元素,数据元素,数据元素,7,33,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,完全二叉树,满二叉树,0,39,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，,深度优先搜索,路径,0,41,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，,深度优先搜索,遍历,0,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，,路径,遍历,41,11,CON,CON
连通图是图中任意两个顶点之间都存在路径的图,连通图,路径,0,17,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,查找,时间复杂度,36,42,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,查找,插入,36,30,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,查找,映射,36,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,查找,哈希表,36,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,查找,删除,36,33,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,查找,哈希函数,36,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,查找,访问,36,25,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,时间复杂度,插入,42,30,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,时间复杂度,映射,42,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,时间复杂度,哈希表,42,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,时间复杂度,删除,42,33,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,时间复杂度,哈希函数,42,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,时间复杂度,访问,42,25,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,插入,映射,30,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,插入,哈希表,30,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,插入,删除,30,33,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,插入,哈希函数,30,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,插入,访问,30,25,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,映射,哈希表,11,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,映射,删除,11,33,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,映射,哈希函数,11,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,映射,访问,11,25,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,哈希表,删除,0,33,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,哈希表,哈希函数,0,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,哈希表,访问,0,25,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,删除,哈希函数,33,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,删除,访问,33,25,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据访问，具有插入、删除和查找操作平均时间复杂度接近O(1)的特点，能高效存储和检索,哈希函数,访问,5,25,CON,CON
数据逻辑结构特点指数据元素间抽象关系不依赖存储,数据元素,逻辑结构,9,2,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,排序,23,34,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,23,8,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,排序,23,52,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,排序,23,29,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,23,15,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,23,39,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,23,49,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,归并排序,23,0,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,34,8,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,排序,34,52,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,排序,34,29,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,34,15,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,34,39,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,34,49,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,归并排序,34,0,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,排序,8,52,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,排序,8,29,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,8,15,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,8,39,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,8,49,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,归并排序,8,0,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,排序,52,29,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,52,15,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,52,39,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,52,49,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,归并排序,52,0,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,29,15,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,29,39,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,数组,29,49,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,排序,归并排序,29,0,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,15,39,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,15,49,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,归并排序,15,0,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,数组,39,49,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,归并排序,39,0,CON,CON
归并排序是将一个数组分成两个子数组，对这两个子数组分别进行排序，再将排序好的子数组合并成一个有序的数组的排序算法,数组,归并排序,49,0,CON,CON
数据的物理结构是指数据在计算机中的存储方式，它包括数据元素的存储表示及其关系的表示，其核心特征是描述数据在计算机内存或存储设备中的实际存储,物理结构,数据元素,3,25,CON,CON
树的深度是指从根节点到最远叶子节点所经过的最长路径上的节点数,路径,根节点,23,7,CON,CON
树的深度是指从根节点到最远叶子节点所经过的最长路径上的节点数,路径,树的深度,23,0,CON,CON
树的深度是指从根节点到最远叶子节点所经过的最长路径上的节点数,路径,叶子节点,23,13,CON,CON
树的深度是指从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,树的深度,7,0,CON,CON
树的深度是指从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,叶子节点,7,13,CON,CON
树的深度是指从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,叶子节点,0,13,CON,CON
引用是给已存在的对象起一个别名，通过该别名可以访问其所引用的对象，引用一旦初始化便不能再引用其他对象，且引用必须在定义时初始化,访问,初始化,23,37,CON,CON
引用是给已存在的对象起一个别名，通过该别名可以访问其所引用的对象，引用一旦初始化便不能再引用其他对象，且引用必须在定义时初始化,访问,初始化,23,60,CON,CON
引用是给已存在的对象起一个别名，通过该别名可以访问其所引用的对象，引用一旦初始化便不能再引用其他对象，且引用必须在定义时初始化,初始化,初始化,37,60,CON,CON
简单排序是对数据序列进行比较和交换等操作，通过特定规则将无序数据逐步调整为有序状态的排序方法,排序,简单排序,42,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、容量等各种与边相关的信息,图,加权图,6,0,CON,CON
邻接表的核心性质是对于图中的每个顶点，用一个单链表存储其所有邻接顶点,单链表,邻接表,22,0,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,存储结构,25,0,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,数据元素,25,16,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,删除,25,52,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,插入,25,49,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,访问,25,46,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,存储结构,数据元素,0,16,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,存储结构,删除,0,52,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,存储结构,插入,0,49,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,存储结构,访问,0,46,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,删除,16,52,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,插入,16,49,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,数据元素,访问,16,46,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,删除,插入,52,49,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,删除,访问,52,46,CON,CON
存储结构的核心性质是它不仅要存储数据元素，还要存储数据元素之间的关系，以便于高效地进行数据的访问、插入、删除、修改等操作,插入,访问,49,46,CON,CON
交换排序是通过元素间比较与交换位置来实现排序,排序,交换排序,20,0,CON,CON
递归基础是递归定义中确定初始元素或最简情况的部分，其核心性质是明确了递归过程的起始点或终止条件，使得递归能够从已知的简单情况逐步构建,递归,递归,34,5,CON,CON
递归基础是递归定义中确定初始元素或最简情况的部分，其核心性质是明确了递归过程的起始点或终止条件，使得递归能够从已知的简单情况逐步构建,递归,递归,34,50,CON,CON
递归基础是递归定义中确定初始元素或最简情况的部分，其核心性质是明确了递归过程的起始点或终止条件，使得递归能够从已知的简单情况逐步构建,递归,递归基础,34,0,CON,CON
递归基础是递归定义中确定初始元素或最简情况的部分，其核心性质是明确了递归过程的起始点或终止条件，使得递归能够从已知的简单情况逐步构建,递归,递归,5,50,CON,CON
递归基础是递归定义中确定初始元素或最简情况的部分，其核心性质是明确了递归过程的起始点或终止条件，使得递归能够从已知的简单情况逐步构建,递归,递归基础,5,0,CON,CON
递归基础是递归定义中确定初始元素或最简情况的部分，其核心性质是明确了递归过程的起始点或终止条件，使得递归能够从已知的简单情况逐步构建,递归,递归基础,50,0,CON,CON
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成一个具有层次关系的集合，其中有一个特定的节点称为根节点，其余节点被分为,集合,根节点,37,52,CON,CON
数据逻辑结构特点指数据元素间抽象关系及组织形式,数据元素,逻辑结构,9,2,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,排序,数组,24,20,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,排序,数组,24,13,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,排序,数组,24,35,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,排序,归并排序,24,0,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,数组,数组,20,13,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,数组,数组,20,35,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,数组,归并排序,20,0,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,数组,数组,13,35,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,数组,归并排序,13,0,CON,CON
归并排序的核心性质是将一个数组分成两个子数组分别排序后再合并成一个有序数组,数组,归并排序,35,0,CON,CON
单链表是节点通过指针依次连接形成的线性结构,指针,线性结构,8,17,CON,CON
单链表是节点通过指针依次连接形成的线性结构,指针,单链表,8,0,CON,CON
单链表是节点通过指针依次连接形成的线性结构,线性结构,单链表,17,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉搜索树,左子树,0,22,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉搜索树,右子树,0,42,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,左子树,右子树,22,42,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继,数据元素,线性结构,30,0,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继,数据元素,数据元素,30,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素最多有一个直接前驱和一个直接后继,线性结构,数据元素,0,7,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,插入,8,36,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,删除,8,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,插入,删除,36,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,插入,队列,36,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,删除,队列,23,0,CON,CON
父节点具有在树形结构中处于上一层级且与子节点存在直接关联关系从而能对其进行层级管理和引导的核心性质,子节点,父节点,19,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,51,15,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,51,61,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,51,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,51,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,51,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,15,61,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,数据元素,15,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,15,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,选择排序,15,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,61,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,61,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,61,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,54,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,选择排序,54,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,12,0,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点,链表,链表,43,40,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点,链表,邻接表,43,0,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点,链表,邻接表,40,0,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,插入,时间复杂度,23,54,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,插入,操作效率,23,0,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,插入,查找,23,29,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,插入,删除,23,26,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,时间复杂度,操作效率,54,0,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,时间复杂度,查找,54,29,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,时间复杂度,删除,54,26,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,操作效率,查找,0,29,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,操作效率,删除,0,26,CON,CON
操作效率的特点是指在数据结构中执行各种操作（如插入、删除、查找等）时所表现出的时间和空间方面的特性包括操作的时间复杂度和空间,查找,删除,29,26,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,访问,访问,36,18,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,访问,遍历,36,53,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,访问,广度优先搜索,36,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,访问,访问,36,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,访问,遍历,18,53,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,遍历,广度优先搜索,53,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,遍历,访问,53,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有可达节点，其,广度优先搜索,访问,0,12,CON,CON
无向图是一种图结构，其中任意两个顶点之间的边没有方向，即若存在一条连接顶点u和顶点v的边，则从u到v和从v到u,图,无向图,6,0,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组中间元素与目标元素比较，根据比较结果缩小搜索范围直至找到目标元素或确定,数组,查找,32,13,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组中间元素与目标元素比较，根据比较结果缩小搜索范围直至找到目标元素或确定,数组,二分查找,32,0,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组中间元素与目标元素比较，根据比较结果缩小搜索范围直至找到目标元素或确定,数组,数组,32,10,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组中间元素与目标元素比较，根据比较结果缩小搜索范围直至找到目标元素或确定,查找,二分查找,13,0,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组中间元素与目标元素比较，根据比较结果缩小搜索范围直至找到目标元素或确定,查找,数组,13,10,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组中间元素与目标元素比较，根据比较结果缩小搜索范围直至找到目标元素或确定,二分查找,数组,0,10,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾，重复此过程对整个数组进行排序的算法,排序,数组,59,42,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾，重复此过程对整个数组进行排序的算法,排序,数组,59,55,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾，重复此过程对整个数组进行排序的算法,排序,冒泡排序,59,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾，重复此过程对整个数组进行排序的算法,数组,数组,42,55,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾，重复此过程对整个数组进行排序的算法,数组,冒泡排序,42,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾，重复此过程对整个数组进行排序的算法,数组,冒泡排序,55,0,CON,CON
比较排序是基于元素之间比较来确定元素相对次序从而进行排序的排序算法,排序,排序,29,26,CON,CON
比较排序是基于元素之间比较来确定元素相对次序从而进行排序的排序算法,排序,比较排序,29,0,CON,CON
比较排序是基于元素之间比较来确定元素相对次序从而进行排序的排序算法,排序,比较排序,26,0,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,路径,根节点,15,1,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,路径,叶子节点,15,7,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,路径,树的深度,15,23,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,根节点,叶子节点,1,7,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,根节点,树的深度,1,23,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,叶子节点,树的深度,7,23,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标条件后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,30,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标条件后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,65,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标条件后回溯到前一步继续探索其他路径,路径,路径,30,65,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值都小于该节点的值，且右子树中的所有节点的值都大于该节点的值,二叉树,右子树,8,39,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值都小于该节点的值，且右子树中的所有节点的值都大于该节点的值,二叉树,二叉搜索树,8,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值都小于该节点的值，且右子树中的所有节点的值都大于该节点的值,二叉树,左子树,8,18,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值都小于该节点的值，且右子树中的所有节点的值都大于该节点的值,右子树,二叉搜索树,39,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值都小于该节点的值，且右子树中的所有节点的值都大于该节点的值,右子树,左子树,39,18,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值都小于该节点的值，且右子树中的所有节点的值都大于该节点的值,二叉搜索树,左子树,0,18,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,快速排序,数组,53,8,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,快速排序,数组,53,62,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,快速排序,排序,53,14,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,快速排序,排序,53,55,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,快速排序,快速排序,53,0,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,数组,数组,8,62,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,数组,排序,8,14,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,数组,排序,8,55,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,数组,快速排序,8,0,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,数组,排序,62,14,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,数组,排序,62,55,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,数组,快速排序,62,0,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,排序,排序,14,55,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,排序,快速排序,14,0,CON,CON
快速排序是对无序数组通过一趟排序将其分割成两部分，其中一部分元素均比另一部分元素小，然后对这两部分分别进行快速排序以达到整个数组有序,排序,快速排序,55,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向）,路径,有向图,29,25,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向）,路径,路径,29,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向）,有向图,路径,25,0,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆排序,堆,0,17,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆排序,数组,0,10,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆,数组,17,10,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在着一对一的线性关系,线性表,数据元素,0,26,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在着一对一的线性关系,线性表,数据元素,0,12,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在着一对一的线性关系,数据元素,数据元素,26,12,CON,CON
子节点是树结构中相对于父节点而言的节点，其核心特征包括：它直接隶属于某个父节点，是父节点分支出来的节点,父节点,父节点,36,11,CON,CON
子节点是树结构中相对于父节点而言的节点，其核心特征包括：它直接隶属于某个父节点，是父节点分支出来的节点,父节点,父节点,36,41,CON,CON
子节点是树结构中相对于父节点而言的节点，其核心特征包括：它直接隶属于某个父节点，是父节点分支出来的节点,父节点,子节点,36,0,CON,CON
子节点是树结构中相对于父节点而言的节点，其核心特征包括：它直接隶属于某个父节点，是父节点分支出来的节点,父节点,父节点,11,41,CON,CON
子节点是树结构中相对于父节点而言的节点，其核心特征包括：它直接隶属于某个父节点，是父节点分支出来的节点,父节点,子节点,11,0,CON,CON
子节点是树结构中相对于父节点而言的节点，其核心特征包括：它直接隶属于某个父节点，是父节点分支出来的节点,父节点,子节点,41,0,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,堆排序,排序,0,24,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,堆排序,堆,0,14,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,堆排序,堆,0,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,堆排序,堆,0,39,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,排序,堆,24,14,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,排序,堆,24,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,排序,堆,24,39,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,堆,堆,14,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,堆,堆,14,39,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，然后不断取出堆顶元素并调整堆结构，从而实现,堆,堆,54,39,CON,CON
非线性结构中各数据元素之间的关系不再是一对一的线性关系，存在一对多、多对多等复杂关系,非线性结构,数据元素,0,7,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,映射,访问,20,34,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,映射,哈希表,20,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,映射,插入,20,52,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,映射,哈希函数,20,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,映射,查找,20,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,映射,删除,20,55,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,访问,哈希表,34,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,访问,插入,34,52,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,访问,哈希函数,34,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,访问,查找,34,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,访问,删除,34,55,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,哈希表,插入,0,52,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,哈希表,哈希函数,0,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,哈希表,查找,0,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,哈希表,删除,0,55,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,插入,哈希函数,52,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,插入,查找,52,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,插入,删除,52,55,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,哈希函数,查找,14,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,哈希函数,删除,14,55,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置以实现快速数据访问，具有平均情况下常数时间的查找、插入和删除操作，不过可能存在哈希,查找,删除,49,55,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,数组,8,62,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,数组,8,22,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,递归,8,66,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,快速排序,8,0,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,数组,62,22,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,递归,62,66,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,快速排序,62,0,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,递归,22,66,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,数组,快速排序,22,0,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，小于基准的元素放在左边大于基准的元素放在右边，然后对左右两部分子数组分别递归,递归,快速排序,66,0,CON,CON
线性表的核心性质是具有相同数据类型的n个数据元素的有限序列，有唯一的头元素和尾元素，除头元素外每个元素有且仅有一个直接前驱,线性表,数据类型,0,13,CON,CON
线性表的核心性质是具有相同数据类型的n个数据元素的有限序列，有唯一的头元素和尾元素，除头元素外每个元素有且仅有一个直接前驱,线性表,数据元素,0,20,CON,CON
线性表的核心性质是具有相同数据类型的n个数据元素的有限序列，有唯一的头元素和尾元素，除头元素外每个元素有且仅有一个直接前驱,数据类型,数据元素,13,20,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆排序,堆,0,40,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆排序,堆,0,57,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆,堆,40,57,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆,排序,40,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆,堆,40,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆,排序,57,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,堆,堆,57,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现,排序,堆,14,8,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，通过递归或栈,路径,递归,23,65,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，通过递归或栈,路径,路径,23,60,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，通过递归或栈,路径,深度优先搜索,23,0,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，通过递归或栈,递归,路径,65,60,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，通过递归或栈,递归,深度优先搜索,65,0,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，通过递归或栈,路径,深度优先搜索,60,0,CON,CON
存储结构核心概念是数据元素及其关系的存储方式,存储结构,数据元素,0,9,CON,CON
数组的核心性质是具有固定大小且元素存储在连续内存位置，通过下标可以直接访问和修改数组中的元素,数组,数组,40,0,CON,CON
数组的核心性质是具有固定大小且元素存储在连续内存位置，通过下标可以直接访问和修改数组中的元素,数组,访问,40,35,CON,CON
数组的核心性质是具有固定大小且元素存储在连续内存位置，通过下标可以直接访问和修改数组中的元素,数组,访问,0,35,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,路径,连通图,51,0,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,路径,有向图,51,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,路径,路径,51,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,路径,无向图,51,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,连通图,有向图,0,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,连通图,路径,0,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,连通图,无向图,0,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,有向图,路径,27,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,有向图,无向图,27,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点u和v，既存在从u到v的路径也,路径,无向图,21,6,CON,CON
邻接矩阵是一种用于表示图的矩阵，其中行和列分别对应图的顶点，矩阵元素表示对应顶点之间是否存在边，若存在则为1，不存在则为,图的顶点,邻接矩阵,25,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点信息,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点信息,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点信息,链表,邻接表,35,0,CON,CON
简单排序是对数据序列进行比较和交换等操作以逐步将元素按特定顺序排列，其特点是算法相对直观、易于理解和实现，时间复杂度通常较高，一般适,时间复杂度,简单排序,53,0,CON,CON
链表是一种线性数据结构，其核心性质为每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构,指针,链表,40,55,CON,CON
链表是一种线性数据结构，其核心性质为每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构,指针,链表,40,0,CON,CON
链表是一种线性数据结构，其核心性质为每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构,指针,指针,40,35,CON,CON
链表是一种线性数据结构，其核心性质为每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构,链表,链表,55,0,CON,CON
链表是一种线性数据结构，其核心性质为每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构,链表,指针,55,35,CON,CON
链表是一种线性数据结构，其核心性质为每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构,链表,指针,0,35,CON,CON
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,21,35,CON,CON
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,21,30,CON,CON
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,二叉树,21,0,CON,CON
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,35,30,CON,CON
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,二叉树,35,0,CON,CON
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,二叉树,30,0,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关，它包括集合、线性结构、树形结构和图状结构等不同类型各有其独特,逻辑结构,集合,3,36,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关，它包括集合、线性结构、树形结构和图状结构等不同类型各有其独特,逻辑结构,线性结构,3,39,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关，它包括集合、线性结构、树形结构和图状结构等不同类型各有其独特,逻辑结构,数据元素,3,13,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关，它包括集合、线性结构、树形结构和图状结构等不同类型各有其独特,集合,线性结构,36,39,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关，它包括集合、线性结构、树形结构和图状结构等不同类型各有其独特,集合,数据元素,36,13,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关，它包括集合、线性结构、树形结构和图状结构等不同类型各有其独特,线性结构,数据元素,39,13,CON,CON
二叉树遍历按特定顺序访问节点以全面了解结构,遍历,二叉树,3,0,CON,CON
二叉树遍历按特定顺序访问节点以全面了解结构,遍历,访问,3,10,CON,CON
二叉树遍历按特定顺序访问节点以全面了解结构,二叉树,访问,0,10,CON,CON
插入排序是逐个将元素插入已排序序列合适位置的排序方法,排序,排序,22,13,CON,CON
插入排序是逐个将元素插入已排序序列合适位置的排序方法,排序,插入排序,22,0,CON,CON
插入排序是逐个将元素插入已排序序列合适位置的排序方法,排序,插入,22,10,CON,CON
插入排序是逐个将元素插入已排序序列合适位置的排序方法,排序,插入排序,13,0,CON,CON
插入排序是逐个将元素插入已排序序列合适位置的排序方法,排序,插入,13,10,CON,CON
插入排序是逐个将元素插入已排序序列合适位置的排序方法,插入排序,插入,0,10,CON,CON
线性查找是按顺序逐个检查数据元素直至找到目标元素,查找,数据元素,2,12,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,34,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,6,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,34,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,10,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,10,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,21,CON,CON
树中一个节点的子树数目称为该节点的度，树中所有节点度的最大值称为树的度,树的度,子树,32,7,CON,CON
根节点是树形结构起始点无父节点有子节点,父节点,子节点,12,16,CON,CON
根节点是树形结构起始点无父节点有子节点,父节点,根节点,12,0,CON,CON
根节点是树形结构起始点无父节点有子节点,子节点,根节点,16,0,CON,CON
冒泡排序的核心特征是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序会将未排序数据中最大（或最小）的元素“冒泡”到,排序,排序,41,36,CON,CON
冒泡排序的核心特征是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序会将未排序数据中最大（或最小）的元素“冒泡”到,排序,冒泡排序,41,0,CON,CON
冒泡排序的核心特征是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序会将未排序数据中最大（或最小）的元素“冒泡”到,排序,冒泡排序,36,0,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向其子树节点的链接,数据项,树的节点,17,0,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向其子树节点的链接,数据项,树,17,25,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向其子树节点的链接,数据项,数据元素,17,10,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向其子树节点的链接,树的节点,树,0,25,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向其子树节点的链接,树的节点,数据元素,0,10,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向其子树节点的链接,树,数据元素,25,10,CON,CON
在树形数据结构中若存在节点A，节点B直接连接到节点A且节点A可通过某种遍历方式找到节点B，那么节点A就是节点B的父节点,遍历,父节点,35,56,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,左子树,28,52,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,子节点,28,23,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,根节点,28,47,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,右子树,28,56,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,二叉树,28,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,二叉树,28,35,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,子节点,28,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,左子树,子节点,52,23,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,左子树,根节点,52,47,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,左子树,右子树,52,56,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,左子树,二叉树,52,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,左子树,二叉树,52,35,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,左子树,子节点,52,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,根节点,23,47,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,右子树,23,56,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,二叉树,23,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,二叉树,23,35,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,子节点,子节点,23,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,根节点,右子树,47,56,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,根节点,二叉树,47,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,根节点,二叉树,47,35,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,根节点,子节点,47,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,右子树,二叉树,56,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,右子树,二叉树,56,35,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,右子树,子节点,56,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,二叉树,二叉树,0,35,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,二叉树,子节点,0,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点即左子节点和右子节点并且一棵二叉树要么为空要么由一个根节点及其左子树和右子树,二叉树,子节点,35,18,CON,CON
数组是由相同类型的数据元素组成的、在内存中按顺序存储的有限序列,数组,数据元素,0,9,CON,CON
交换排序是一种排序算法，其核心特征是通过不断比较序列中的元素，并在满足特定条件时交换元素的位置，从而逐步将序列调整为有序状态,排序,交换排序,7,0,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,堆,0,38,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,堆,0,53,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,排序,0,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,堆,38,53,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,38,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,38,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,堆,38,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,53,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,53,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,堆,53,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,排序,排序,22,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,排序,堆,22,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,排序,堆,14,8,CON,CON
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构其中边是没有方向的顶点之间的连接关系,集合,集合,19,9,CON,CON
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构其中边是没有方向的顶点之间的连接关系,集合,无向图,19,0,CON,CON
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构其中边是没有方向的顶点之间的连接关系,集合,无向图,9,0,CON,CON
顺序查找是从线性表的一端开始，依次将关键字与表中元素进行比较，直到找到与关键字相等的元素或遍历完整个表的查找方法,遍历,查找,45,52,CON,CON
顺序查找是从线性表的一端开始，依次将关键字与表中元素进行比较，直到找到与关键字相等的元素或遍历完整个表的查找方法,遍历,线性表,45,6,CON,CON
顺序查找是从线性表的一端开始，依次将关键字与表中元素进行比较，直到找到与关键字相等的元素或遍历完整个表的查找方法,遍历,顺序查找,45,0,CON,CON
顺序查找是从线性表的一端开始，依次将关键字与表中元素进行比较，直到找到与关键字相等的元素或遍历完整个表的查找方法,查找,线性表,52,6,CON,CON
顺序查找是从线性表的一端开始，依次将关键字与表中元素进行比较，直到找到与关键字相等的元素或遍历完整个表的查找方法,查找,顺序查找,52,0,CON,CON
顺序查找是从线性表的一端开始，依次将关键字与表中元素进行比较，直到找到与关键字相等的元素或遍历完整个表的查找方法,线性表,顺序查找,6,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,数据元素,存储结构,53,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,数据元素,数据元素,53,45,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,数据元素,数据元素,53,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,数据元素,数据元素,53,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,存储结构,数据元素,0,45,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,存储结构,数据元素,0,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,数据元素,数据元素,45,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,数据元素,数据元素,45,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，它包括数据元素的表示和关系的表示，其中数据元素的表示即数据元素在计算机中的存储方式，,数据元素,数据元素,29,6,CON,CON
递归基础是递归算法中满足特定条件的最简情况，在该情况下递归调用不再继续，而是直接给出一个确定的结果,递归,递归,27,5,CON,CON
递归基础是递归算法中满足特定条件的最简情况，在该情况下递归调用不再继续，而是直接给出一个确定的结果,递归,递归基础,27,0,CON,CON
递归基础是递归算法中满足特定条件的最简情况，在该情况下递归调用不再继续，而是直接给出一个确定的结果,递归,递归基础,5,0,CON,CON
深度优先搜索是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复此过程直到,深度优先搜索,路径,0,58,CON,CON
深度优先搜索是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复此过程直到,深度优先搜索,路径,0,19,CON,CON
深度优先搜索是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复此过程直到,路径,路径,58,19,CON,CON
数组是相同类型数据元素的有序集合,数组,集合,0,14,CON,CON
数组是相同类型数据元素的有序集合,数组,数据元素,0,7,CON,CON
数组是相同类型数据元素的有序集合,集合,数据元素,14,7,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的下一级节点，具有与父节点直接关联、在层级关系中处于父节点之下的位置关系等特点,子节点,父节点,0,32,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的下一级节点，具有与父节点直接关联、在层级关系中处于父节点之下的位置关系等特点,子节点,父节点,0,48,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的下一级节点，具有与父节点直接关联、在层级关系中处于父节点之下的位置关系等特点,子节点,父节点,0,19,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的下一级节点，具有与父节点直接关联、在层级关系中处于父节点之下的位置关系等特点,父节点,父节点,32,48,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的下一级节点，具有与父节点直接关联、在层级关系中处于父节点之下的位置关系等特点,父节点,父节点,32,19,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的下一级节点，具有与父节点直接关联、在层级关系中处于父节点之下的位置关系等特点,父节点,父节点,48,19,CON,CON
连通图的核心特征是图中任意两个顶点之间都存在路径能够相连,连通图,路径,0,22,CON,CON
简单排序的特点的核心特征是比较和交换元素的位置以实现排序，其操作相对直接和基础，通常基于相邻元素的比较与交换来逐步将无序序列转变为,排序,简单排序,26,0,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过存储结构来体现等方面,物理结构,数据元素,3,14,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过存储结构来体现等方面,物理结构,数据元素,3,30,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过存储结构来体现等方面,物理结构,存储结构,3,45,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过存储结构来体现等方面,数据元素,数据元素,14,30,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过存储结构来体现等方面,数据元素,存储结构,14,45,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过存储结构来体现等方面,数据元素,存储结构,30,45,CON,CON
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法,迭代法,迭代,0,23,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，从而逐步缩小查找范围，直到找到目标值或确定目标值,数组,查找,22,47,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，从而逐步缩小查找范围，直到找到目标值或确定目标值,数组,数组,22,13,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，从而逐步缩小查找范围，直到找到目标值或确定目标值,数组,二分查找,22,0,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，从而逐步缩小查找范围，直到找到目标值或确定目标值,查找,数组,47,13,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，从而逐步缩小查找范围，直到找到目标值或确定目标值,查找,二分查找,47,0,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，从而逐步缩小查找范围，直到找到目标值或确定目标值,数组,二分查找,13,0,CON,CON
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h,二叉树,完全二叉树,8,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,43,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,34,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,23,29,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,递归,23,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,23,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,23,46,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,43,34,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,43,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,43,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,43,29,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,递归,43,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,43,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,43,46,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,34,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,34,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,34,29,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,递归,34,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,34,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,34,46,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,17,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,17,29,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,递归,17,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,17,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,17,46,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,10,29,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,递归,10,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,10,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,10,46,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,递归,29,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,29,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,29,46,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,递归,归并排序,21,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,递归,排序,21,46,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后，再将排序好的子数组合并成一个有序数组的排序算法,归并排序,排序,0,46,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,61,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,61,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,13,0,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,集合,子树,38,53,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,集合,根节点,38,13,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,集合,集合,38,33,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,集合,根节点,38,49,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,子树,根节点,53,13,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,子树,集合,53,33,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,子树,根节点,53,49,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,根节点,集合,13,33,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,根节点,根节点,13,49,CON,CON
树的核心特征是有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树且称为该根节点的子树，并且树中没有,集合,根节点,33,49,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置，没有分支延伸出去，是数据存储或信息表示的最终单元，在一些应用场景,叶子节点,子节点,0,11,CON,CON
二分查找的核心特征是在一个有序数组中，通过不断将数组分成两部分并判断目标值所在的部分，从而逐步缩小查找范围以找到目标值,查找,数组,49,15,CON,CON
二分查找的核心特征是在一个有序数组中，通过不断将数组分成两部分并判断目标值所在的部分，从而逐步缩小查找范围以找到目标值,查找,二分查找,49,0,CON,CON
二分查找的核心特征是在一个有序数组中，通过不断将数组分成两部分并判断目标值所在的部分，从而逐步缩小查找范围以找到目标值,查找,数组,49,24,CON,CON
二分查找的核心特征是在一个有序数组中，通过不断将数组分成两部分并判断目标值所在的部分，从而逐步缩小查找范围以找到目标值,数组,二分查找,15,0,CON,CON
二分查找的核心特征是在一个有序数组中，通过不断将数组分成两部分并判断目标值所在的部分，从而逐步缩小查找范围以找到目标值,数组,数组,15,24,CON,CON
二分查找的核心特征是在一个有序数组中，通过不断将数组分成两部分并判断目标值所在的部分，从而逐步缩小查找范围以找到目标值,二分查找,数组,0,24,CON,CON
队列是一种特殊的线性表，其核心性质为只允许在一端进行插入操作，另一端进行删除操作，遵循先进先出原则,线性表,删除,8,36,CON,CON
队列是一种特殊的线性表，其核心性质为只允许在一端进行插入操作，另一端进行删除操作，遵循先进先出原则,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其核心性质为只允许在一端进行插入操作，另一端进行删除操作，遵循先进先出原则,线性表,插入,8,26,CON,CON
队列是一种特殊的线性表，其核心性质为只允许在一端进行插入操作，另一端进行删除操作，遵循先进先出原则,删除,队列,36,0,CON,CON
队列是一种特殊的线性表，其核心性质为只允许在一端进行插入操作，另一端进行删除操作，遵循先进先出原则,删除,插入,36,26,CON,CON
队列是一种特殊的线性表，其核心性质为只允许在一端进行插入操作，另一端进行删除操作，遵循先进先出原则,队列,插入,0,26,CON,CON
简单排序是对数据元素进行比较和交换操作以实现排序，其核心特征是算法逻辑相对直接，通常基于相邻元素的比较和位置交换来逐步将无序序列转变为,排序,数据元素,22,6,CON,CON
简单排序是对数据元素进行比较和交换操作以实现排序，其核心特征是算法逻辑相对直接，通常基于相邻元素的比较和位置交换来逐步将无序序列转变为,排序,简单排序,22,0,CON,CON
简单排序是对数据元素进行比较和交换操作以实现排序，其核心特征是算法逻辑相对直接，通常基于相邻元素的比较和位置交换来逐步将无序序列转变为,数据元素,简单排序,6,0,CON,CON
数据类型的特点是其具有特定的取值范围、存储方式、操作集合以及语义解释等，这些特性共同决定了数据在程序中的表示和使用方式,数据类型,集合,0,26,CON,CON
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h,二叉树,完全二叉树,8,0,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机,逻辑结构,数据元素,3,9,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,根节点,路径,6,18,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,树的高度,路径,0,18,CON,CON
稳定性是指在数据结构中，对于相同的输入，排序算法产生的输出序列中相等元素的相对次序保持不变的特性,排序,稳定性,20,0,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图的顶点信息，边表中存储与每个顶点相邻接的顶点,邻接表,图的顶点,0,34,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,遍历,28,4,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,二叉树,28,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,二叉树,28,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,访问,28,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,遍历,二叉树,4,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,遍历,二叉树,4,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,遍历,访问,4,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,二叉树,二叉树,0,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,二叉树,访问,0,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,二叉树,访问,17,15,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,25,43,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,删除,25,48,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,25,32,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,线性表,25,8,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,25,0,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,25,55,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,删除,43,48,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,43,32,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,线性表,43,8,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,43,0,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,43,55,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,删除,队列,48,32,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,删除,线性表,48,8,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,删除,队列,48,0,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,删除,队列,48,55,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,线性表,32,8,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,32,0,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,32,55,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,线性表,队列,8,55,CON,CON
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，新元素总是添加在队列末尾，删除操作总是在队列头部进行,队列,队列,0,55,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,插入,访问,58,20,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,插入,访问,58,7,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,插入,删除,58,61,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,插入,操作效率,58,63,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,访问,访问,20,7,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,访问,删除,20,61,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,访问,操作效率,20,63,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,访问,删除,7,61,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,访问,操作效率,7,63,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素、存储密度高因为元素存储紧凑、逻辑上相邻的元素物理存储位置也相邻以及插入和删除操作效率低尤其是,删除,操作效率,61,63,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数据序列调整为有序序列的排序方法,排序,交换排序,36,0,CON,CON
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法其特点包括能从一个初始值开始逐步迭代接近目标值,迭代,迭代法,22,0,CON,CON
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法其特点包括能从一个初始值开始逐步迭代接近目标值,迭代,迭代,22,61,CON,CON
迭代法是一种通过从一个初始估计出发，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法其特点包括能从一个初始值开始逐步迭代接近目标值,迭代法,迭代,0,61,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,指针,指针,19,23,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,指针,遍历,19,38,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,指针,单链表,19,0,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,指针,尾节点,19,56,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,指针,遍历,23,38,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,指针,单链表,23,0,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,指针,尾节点,23,56,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,遍历,单链表,38,0,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,遍历,尾节点,38,56,CON,CON
单链表的核心特征是每个节点包含数据域和指针域，指针域指向下一个节点，通过依次遍历这些节点形成一个线性序列，且除了尾节点外每个节点,单链表,尾节点,0,56,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,28,23,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,28,45,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,递归,28,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,42,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,33,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,28,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,23,45,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,递归,23,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,42,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,23,33,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,23,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,17,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,17,45,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,递归,17,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,17,42,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,17,33,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,17,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,10,45,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,递归,10,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,10,42,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,10,33,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,10,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,递归,45,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,45,42,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,45,33,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,45,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,递归,数组,21,42,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,递归,数组,21,33,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,递归,归并排序,21,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,42,33,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,42,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序，再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,33,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,二叉树,遍历,16,3,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,二叉树,访问,16,31,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,二叉树,二叉树,16,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,二叉树,访问,16,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,遍历,访问,3,31,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,遍历,访问,3,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,访问,二叉树,31,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,访问,访问,31,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中所有节点且每个节点仅被访问一次的操作,二叉树,访问,0,14,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,51,15,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,51,61,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,51,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,51,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,51,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,15,61,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,数据元素,15,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,15,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,选择排序,15,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,61,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,61,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,61,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,54,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,选择排序,54,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,12,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,18,41,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,41,0,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
简单排序是按特定规则依次比较交换元素位置的排序方法,排序,简单排序,21,0,CON,CON
在树形结构中，位于树的最顶端没有前驱节点的节点就是根节点,前驱节点,根节点,16,25,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，不断比较中间元素与目标值，若中间元素等于目标值则查找成功，若中间元素,查找,查找,19,55,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，不断比较中间元素与目标值，若中间元素等于目标值则查找成功，若中间元素,查找,二分查找,19,0,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，不断比较中间元素与目标值，若中间元素等于目标值则查找成功，若中间元素,查找,数组,19,10,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，不断比较中间元素与目标值，若中间元素等于目标值则查找成功，若中间元素,查找,二分查找,55,0,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，不断比较中间元素与目标值，若中间元素等于目标值则查找成功，若中间元素,查找,数组,55,10,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，不断比较中间元素与目标值，若中间元素等于目标值则查找成功，若中间元素,二分查找,数组,0,10,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以访问和操作其所指向的变量,指针,指针,0,26,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以访问和操作其所指向的变量,指针,访问,0,30,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以访问和操作其所指向的变量,指针,访问,26,30,CON,CON
非线性结构是一种数据元素之间存在一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系,非线性结构,数据元素,0,8,CON,CON
非线性结构是一种数据元素之间存在一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系,非线性结构,数据元素,0,32,CON,CON
非线性结构是一种数据元素之间存在一对多或多对多关系的数据结构，其数据元素的逻辑关系不再是简单的线性关系,数据元素,数据元素,8,32,CON,CON
线性表是数据元素有序排列且有一对一关系的序列,数据元素,线性表,4,0,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,访问,47,24,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,遍历,47,10,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,图,47,9,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,访问,47,37,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,广度优先搜索,47,0,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,遍历,24,10,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,图,24,9,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,访问,24,37,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,广度优先搜索,24,0,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,遍历,图,10,9,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,遍历,访问,10,37,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,遍历,广度优先搜索,10,0,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,图,访问,9,37,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,图,广度优先搜索,9,0,CON,CON
广度优先搜索是一种图遍历算法，从起始节点开始，先访问其所有邻接节点，再依次访问这些邻接节点的未访问过的邻接节点，按层次,访问,广度优先搜索,37,0,CON,CON
递归基础是递归定义中的一种情况，其核心特征是存在一种或多种简单、直接可解的基础情况，这些基础情况不需要通过递归调用自身来求解，而是能够直接,递归,递归基础,5,0,CON,CON
递归基础是递归定义中的一种情况，其核心特征是存在一种或多种简单、直接可解的基础情况，这些基础情况不需要通过递归调用自身来求解，而是能够直接,递归,递归,5,53,CON,CON
递归基础是递归定义中的一种情况，其核心特征是存在一种或多种简单、直接可解的基础情况，这些基础情况不需要通过递归调用自身来求解，而是能够直接,递归基础,递归,0,53,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,根节点,父节点,46,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,根节点,根节点,46,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,父节点,根节点,19,0,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,51,22,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,51,33,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,51,18,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,51,39,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,22,33,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,22,18,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,22,39,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,33,18,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,33,39,CON,CON
树是一种非线性的数据结构，它具有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,18,39,CON,CON
回溯法基础的核心性质是在问题求解过程中通过深度优先搜索尝试所有可能解并在搜索过程中利用约束条件和目标函数对解进行筛选和剪枝以找到,回溯法,深度优先搜索,0,21,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,16,37,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,16,31,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,16,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,16,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,37,31,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,37,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,37,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,31,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,31,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,20,49,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，其核心特征在于体现数据元素之间,逻辑结构,数据元素,3,25,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，其核心特征在于体现数据元素之间,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，其核心特征在于体现数据元素之间,逻辑结构,数据元素,3,62,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，其核心特征在于体现数据元素之间,数据元素,数据元素,25,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，其核心特征在于体现数据元素之间,数据元素,数据元素,25,62,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，其核心特征在于体现数据元素之间,数据元素,数据元素,9,62,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆排序,堆,0,38,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆排序,堆,0,53,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆排序,排序,0,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆,堆,38,53,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆,排序,38,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆,排序,38,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆,堆,38,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆,排序,53,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆,排序,53,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,堆,堆,53,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,排序,排序,22,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,排序,堆,22,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而得到有序,排序,堆,14,8,CON,CON
顺序查找的核心特征是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列,遍历,顺序查找,41,0,CON,CON
迭代法是一种不断用变量的旧值递推新值，通过重复执行某一运算过程，从初始值出发逐步逼近问题解的数值计算方法,迭代法,递推,0,14,CON,CON
冒泡排序比较相邻元素大小，将较大元素交换到右侧，每一轮把最大元素“冒泡”到数组末尾，重复此过程直到整个数组有序,数组,数组,51,37,CON,CON
冒泡排序比较相邻元素大小，将较大元素交换到右侧，每一轮把最大元素“冒泡”到数组末尾，重复此过程直到整个数组有序,数组,冒泡排序,51,0,CON,CON
冒泡排序比较相邻元素大小，将较大元素交换到右侧，每一轮把最大元素“冒泡”到数组末尾，重复此过程直到整个数组有序,数组,冒泡排序,37,0,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置,排序,比较排序,29,0,CON,CON
快速排序的核心特征是通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后对这两部分分别,排序,快速排序,14,0,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,路径,根节点,20,6,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,查找,遍历,56,45,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,查找,查找,56,39,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,查找,线性表,56,6,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,查找,顺序查找,56,0,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,遍历,查找,45,39,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,遍历,线性表,45,6,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,遍历,顺序查找,45,0,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,查找,线性表,39,6,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,查找,顺序查找,39,0,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表都未找到则查找失败,线性表,顺序查找,6,0,CON,CON
比较排序是基于元素之间的比较来确定元素的相对次序从而实现排序，其核心性质为排序过程仅通过元素间的比较操作来决定元素在有序序列中的最终位置,排序,排序,28,37,CON,CON
比较排序是基于元素之间的比较来确定元素的相对次序从而实现排序，其核心性质为排序过程仅通过元素间的比较操作来决定元素在有序序列中的最终位置,排序,比较排序,28,0,CON,CON
比较排序是基于元素之间的比较来确定元素的相对次序从而实现排序，其核心性质为排序过程仅通过元素间的比较操作来决定元素在有序序列中的最终位置,排序,比较排序,37,0,CON,CON
非线性结构中至少存在一个数据元素有两个或两个以上的前驱或后继且各数据元素之间的逻辑关系不能用线性序列简单描述,非线性结构,数据元素,0,12,CON,CON
非线性结构中至少存在一个数据元素有两个或两个以上的前驱或后继且各数据元素之间的逻辑关系不能用线性序列简单描述,非线性结构,数据元素,0,32,CON,CON
非线性结构中至少存在一个数据元素有两个或两个以上的前驱或后继且各数据元素之间的逻辑关系不能用线性序列简单描述,数据元素,数据元素,12,32,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,16,37,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,16,31,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,根节点,16,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,16,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,子节点,37,31,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,根节点,37,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,子节点,37,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,根节点,31,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,子节点,31,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,20,49,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆排序,堆,0,53,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆排序,排序,0,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆排序,堆,0,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆,排序,53,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆,堆,53,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆,堆,53,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,排序,堆,17,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,排序,堆,17,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整堆以重复此过程，,堆,堆,34,8,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数，它反映了树的层次结构深度，不同类型的树其高度因节点,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数，它反映了树的层次结构深度，不同类型的树其高度因节点,根节点,路径,6,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数，它反映了树的层次结构深度，不同类型的树其高度因节点,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数，它反映了树的层次结构深度，不同类型的树其高度因节点,树的高度,路径,0,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数，它反映了树的层次结构深度，不同类型的树其高度因节点,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数，它反映了树的层次结构深度，不同类型的树其高度因节点,路径,叶子节点,21,12,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,排序,堆排序,19,0,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,排序,排序,19,27,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,排序,堆,19,43,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,排序,堆,19,8,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,堆排序,排序,0,27,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,堆排序,堆,0,43,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,堆排序,堆,0,8,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,排序,堆,27,43,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,排序,堆,27,8,CON,CON
堆排序是一种利用堆这种数据结构所设计的排序算法，它将待排序的数据构建成一个最大堆或最小堆，每次从堆顶取出最大或最小元素，依次,堆,堆,43,8,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个前驱和一个后继,数据元素,数据元素,46,38,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个前驱和一个后继,数据元素,线性结构,46,0,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个前驱和一个后继,数据元素,数据元素,46,10,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个前驱和一个后继,数据元素,线性结构,38,0,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个前驱和一个后继,数据元素,数据元素,38,10,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个前驱和一个后继,线性结构,数据元素,0,10,CON,CON
存储结构特点包括数据元素存储及关系呈现方式等,存储结构,数据元素,0,8,CON,CON
平衡二叉树的核心特征是其每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,子树,41,19,CON,CON
平衡二叉树的核心特征是其每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,41,0,CON,CON
平衡二叉树的核心特征是其每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,子树,41,35,CON,CON
平衡二叉树的核心特征是其每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,平衡二叉树,19,0,CON,CON
平衡二叉树的核心特征是其每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,子树,19,35,CON,CON
平衡二叉树的核心特征是其每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,子树,0,35,CON,CON
回路是图中从某顶点出发又回到该顶点的路径,回路,路径,0,18,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,插入,删除,28,40,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,插入,线性表,28,8,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,插入,队列,28,0,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,删除,线性表,40,8,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,删除,队列,40,0,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,线性表,队列,8,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据和指向下一个节点的指针外，还包含一个指向前一个节点的指针，从而可以在两个方向上,指针,链表,51,7,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据和指向下一个节点的指针外，还包含一个指向前一个节点的指针，从而可以在两个方向上,指针,指针,51,34,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据和指向下一个节点的指针外，还包含一个指向前一个节点的指针，从而可以在两个方向上,指针,双向链表,51,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据和指向下一个节点的指针外，还包含一个指向前一个节点的指针，从而可以在两个方向上,链表,指针,7,34,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据和指向下一个节点的指针外，还包含一个指向前一个节点的指针，从而可以在两个方向上,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据和指向下一个节点的指针外，还包含一个指向前一个节点的指针，从而可以在两个方向上,指针,双向链表,34,0,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,遍历,遍历,28,36,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,遍历,回溯法,28,0,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,遍历,树,28,33,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,遍历,树,28,18,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,遍历,回溯法,36,0,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,遍历,树,36,33,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,遍历,树,36,18,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,回溯法,树,0,33,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,回溯法,树,0,18,CON,CON
回溯法是一种通过逐步构建问题的解空间树，按照深度优先策略遍历解空间树，在遍历过程中根据问题的约束条件和目标函数来判断当前节点是否满足,树,树,33,18,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,数据元素,线性表,59,11,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,数据元素,指针,59,31,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,数据元素,单链表,59,0,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,数据元素,访问,59,52,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,数据元素,指针,59,35,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,数据元素,链表,59,56,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,数据元素,指针,59,49,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,线性表,指针,11,31,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,线性表,访问,11,52,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,线性表,指针,11,35,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,线性表,链表,11,56,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,线性表,指针,11,49,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,指针,单链表,31,0,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,指针,访问,31,52,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,指针,指针,31,35,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,指针,链表,31,56,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,指针,指针,31,49,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,单链表,访问,0,52,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,单链表,指针,0,35,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,单链表,链表,0,56,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,单链表,指针,0,49,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,访问,指针,52,35,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,访问,链表,52,56,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,访问,指针,52,49,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,指针,链表,35,56,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,指针,指针,35,49,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含数据域和指针域，指针域指向下一个节点，通过头指针可访问整个链表，数据元素,链表,指针,56,49,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,左子树,右子树,16,46,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,左子树,左子树,16,23,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,左子树,二叉搜索树,16,0,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,左子树,右子树,16,53,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,右子树,左子树,46,23,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,右子树,二叉搜索树,46,0,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,右子树,右子树,46,53,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,左子树,二叉搜索树,23,0,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,左子树,右子树,23,53,CON,CON
二叉搜索树是一棵空树或者满足若其左子树不空，则左子树上所有结点的值均小于它的根结点的值、若其右子树不空，则右子树上,二叉搜索树,右子树,0,53,CON,CON
二分查找是在一个有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，根据比较结果在左半部分或右半部分继续查找，直到找到,数组,查找,19,56,CON,CON
二分查找是在一个有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，根据比较结果在左半部分或右半部分继续查找，直到找到,数组,二分查找,19,0,CON,CON
二分查找是在一个有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，根据比较结果在左半部分或右半部分继续查找，直到找到,数组,数组,19,10,CON,CON
二分查找是在一个有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，根据比较结果在左半部分或右半部分继续查找，直到找到,查找,二分查找,56,0,CON,CON
二分查找是在一个有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，根据比较结果在左半部分或右半部分继续查找，直到找到,查找,数组,56,10,CON,CON
二分查找是在一个有序数组中，通过不断将数组分成两部分并比较目标值与中间元素，根据比较结果在左半部分或右半部分继续查找，直到找到,二分查找,数组,0,10,CON,CON
邻接表是一种用于表示图的数据结构，它的特点的核心性质包括对于图中的每个顶点都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,链表,41,44,CON,CON
邻接表是一种用于表示图的数据结构，它的特点的核心性质包括对于图中的每个顶点都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,41,0,CON,CON
邻接表是一种用于表示图的数据结构，它的特点的核心性质包括对于图中的每个顶点都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,44,0,CON,CON
交换排序是一种排序算法，其核心性质是通过比较元素并交换不满足顺序要求的元素位置，逐步将无序序列转换为有序序列,排序,交换排序,7,0,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机,逻辑结构,数据元素,3,9,CON,CON
数组是由相同类型的数据元素按一定顺序排列而成的有限序列,数组,数据元素,0,9,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,完全二叉树,满二叉树,0,39,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,排序,堆排序,16,0,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,排序,堆,16,6,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,排序,排序,16,11,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,堆排序,堆,0,6,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,堆排序,排序,0,11,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,堆,排序,6,11,CON,CON
树的节点包含数据且有指向子节点的链接,子节点,树的节点,12,0,CON,CON
邻接表的核心特征是用链表来表示图中顶点的邻接关系，每个顶点对应一个链表，链表中存储与该顶点相邻接的其他顶点,链表,链表,36,33,CON,CON
邻接表的核心特征是用链表来表示图中顶点的邻接关系，每个顶点对应一个链表，链表中存储与该顶点相邻接的其他顶点,链表,邻接表,36,0,CON,CON
邻接表的核心特征是用链表来表示图中顶点的邻接关系，每个顶点对应一个链表，链表中存储与该顶点相邻接的其他顶点,链表,链表,36,10,CON,CON
邻接表的核心特征是用链表来表示图中顶点的邻接关系，每个顶点对应一个链表，链表中存储与该顶点相邻接的其他顶点,链表,邻接表,33,0,CON,CON
邻接表的核心特征是用链表来表示图中顶点的邻接关系，每个顶点对应一个链表，链表中存储与该顶点相邻接的其他顶点,链表,链表,33,10,CON,CON
邻接表的核心特征是用链表来表示图中顶点的邻接关系，每个顶点对应一个链表，链表中存储与该顶点相邻接的其他顶点,邻接表,链表,0,10,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,二叉树,38,17,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,完全二叉树,38,0,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,完全二叉树,17,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，,左子树,二叉搜索树,22,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，,左子树,右子树,22,41,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，,二叉搜索树,右子树,0,41,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示形式,存储结构,数据元素,0,6,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应,集合,映射,22,0,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应,集合,集合,22,10,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应,映射,集合,0,10,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标条件后回溯到前一步并继续探索其他,深度优先搜索,路径,0,30,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的,深度优先搜索,路径,0,24,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的,深度优先搜索,访问,0,64,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的,路径,访问,24,64,CON,CON
图的边是连接图中两个顶点的元素，它具有明确的两个端点即顶点，且在有向图中边有方向而无向图中边无方向,有向图,无向图,32,41,CON,CON
图的边是连接图中两个顶点的元素，它具有明确的两个端点即顶点，且在有向图中边有方向而无向图中边无方向,有向图,图的边,32,0,CON,CON
图的边是连接图中两个顶点的元素，它具有明确的两个端点即顶点，且在有向图中边有方向而无向图中边无方向,无向图,图的边,41,0,CON,CON
操作效率的核心特征是在特定的操作过程中，能够以最少的时间、资源和精力投入，实现最大程度的产出，同时保证操作的准确性和稳定性，并且能够,操作效率,稳定性,0,58,CON,CON
数据类型是一组值的集合以及定义在这组值上的一组操作的总称,数据类型,集合,0,9,CON,CON
子节点是树结构中直接被另一个节点（父节点）所连接且处于其下一层级的节点,父节点,子节点,17,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的顶点，具有存储空间较小、便于查找,链表,查找,36,63,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的顶点，具有存储空间较小、便于查找,链表,邻接表,36,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的顶点，具有存储空间较小、便于查找,链表,单链表,36,32,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的顶点，具有存储空间较小、便于查找,查找,邻接表,63,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的顶点，具有存储空间较小、便于查找,查找,单链表,63,32,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的顶点，具有存储空间较小、便于查找,邻接表,单链表,0,32,CON,CON
存储结构的特点是指数据在计算机内存或外存中存储方式所具有的诸如数据元素间逻辑关系的表示方法、数据元素的存储方式以及数据元素间关系的,数据元素,存储结构,46,0,CON,CON
存储结构的特点是指数据在计算机内存或外存中存储方式所具有的诸如数据元素间逻辑关系的表示方法、数据元素的存储方式以及数据元素间关系的,数据元素,数据元素,46,57,CON,CON
存储结构的特点是指数据在计算机内存或外存中存储方式所具有的诸如数据元素间逻辑关系的表示方法、数据元素的存储方式以及数据元素间关系的,数据元素,数据元素,46,31,CON,CON
存储结构的特点是指数据在计算机内存或外存中存储方式所具有的诸如数据元素间逻辑关系的表示方法、数据元素的存储方式以及数据元素间关系的,存储结构,数据元素,0,57,CON,CON
存储结构的特点是指数据在计算机内存或外存中存储方式所具有的诸如数据元素间逻辑关系的表示方法、数据元素的存储方式以及数据元素间关系的,存储结构,数据元素,0,31,CON,CON
存储结构的特点是指数据在计算机内存或外存中存储方式所具有的诸如数据元素间逻辑关系的表示方法、数据元素的存储方式以及数据元素间关系的,数据元素,数据元素,57,31,CON,CON
快速排序是对无序数组通过选择一个基准值将数组分为两部分，小于基准值的元素在左边大于基准值的元素在右边，再对左右两部分子数组分别,数组,数组,59,20,CON,CON
快速排序是对无序数组通过选择一个基准值将数组分为两部分，小于基准值的元素在左边大于基准值的元素在右边，再对左右两部分子数组分别,数组,数组,59,8,CON,CON
快速排序是对无序数组通过选择一个基准值将数组分为两部分，小于基准值的元素在左边大于基准值的元素在右边，再对左右两部分子数组分别,数组,快速排序,59,0,CON,CON
快速排序是对无序数组通过选择一个基准值将数组分为两部分，小于基准值的元素在左边大于基准值的元素在右边，再对左右两部分子数组分别,数组,数组,20,8,CON,CON
快速排序是对无序数组通过选择一个基准值将数组分为两部分，小于基准值的元素在左边大于基准值的元素在右边，再对左右两部分子数组分别,数组,快速排序,20,0,CON,CON
快速排序是对无序数组通过选择一个基准值将数组分为两部分，小于基准值的元素在左边大于基准值的元素在右边，再对左右两部分子数组分别,数组,快速排序,8,0,CON,CON
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值,左子树,右子树,10,20,CON,CON
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值,左子树,二叉搜索树,10,0,CON,CON
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值,右子树,二叉搜索树,20,0,CON,CON
树的节点是树结构中的基本组成部分，具有一个数据元素以及零个或多个指向子节点的指针,数据元素,树的节点,21,0,CON,CON
树的节点是树结构中的基本组成部分，具有一个数据元素以及零个或多个指向子节点的指针,数据元素,子节点,21,34,CON,CON
树的节点是树结构中的基本组成部分，具有一个数据元素以及零个或多个指向子节点的指针,数据元素,指针,21,38,CON,CON
树的节点是树结构中的基本组成部分，具有一个数据元素以及零个或多个指向子节点的指针,树的节点,子节点,0,34,CON,CON
树的节点是树结构中的基本组成部分，具有一个数据元素以及零个或多个指向子节点的指针,树的节点,指针,0,38,CON,CON
树的节点是树结构中的基本组成部分，具有一个数据元素以及零个或多个指向子节点的指针,子节点,指针,34,38,CON,CON
满二叉树的核心性质是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点,子节点,满二叉树,18,0,CON,CON
比较排序通过元素间比较确定元素相对顺序来排序,排序,比较排序,20,0,CON,CON
树的查找的核心特征是从树的根节点开始，依据特定的比较规则沿着树的分支进行搜索，以确定目标元素是否存在于树中，若存在则返回,查找,根节点,2,13,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则,删除,插入,14,11,CON,CON
子节点是树结构或图结构等数据结构中，直接与某个特定节点相连且处于其下一层级的节点，具有与父节点存在特定连接关系并共同构成相应,父节点,子节点,44,0,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,28,0,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,28,15,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,15,CON,CON
叶子节点的核心特征是没有子节点，它处于树状结构的末端，是数据结构中不再有分支的节点,子节点,叶子节点,12,0,CON,CON
树的度是指一棵树中，其节点拥有子树的最大数目,树的度,子树,0,15,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重反映了边的某种属性或代价等，图中顶点之间通过带权重的边相连,图,加权图,6,0,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即第i层有2^(,满二叉树,二叉树,0,24,CON,CON
广度优先搜索按层次依次扩展节点先访问距离起始点近的,广度优先搜索,访问,0,16,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,路径,6,19,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,树的深度,路径,0,19,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,路径,叶子节点,19,12,CON,CON
比较排序是一种排序算法，其核心性质是通过元素间的比较操作来确定元素间的相对次序从而实现排序,排序,排序,43,7,CON,CON
比较排序是一种排序算法，其核心性质是通过元素间的比较操作来确定元素间的相对次序从而实现排序,排序,比较排序,43,0,CON,CON
比较排序是一种排序算法，其核心性质是通过元素间的比较操作来确定元素间的相对次序从而实现排序,排序,比较排序,7,0,CON,CON
交换排序是一种排序算法，其核心性质是通过比较元素并交换位置，逐步将无序序列转变为有序序列,排序,交换排序,7,0,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,访问,数据元素,48,19,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,访问,数组,48,0,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,访问,数据类型,48,12,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,数据元素,数组,19,0,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,数据元素,数据类型,19,12,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,数组,数据类型,0,12,CON,CON
比较排序是基于元素之间的比较来确定元素之间的相对次序从而将给定序列按升序或降序排列的排序方法,排序,比较排序,42,0,CON,CON
连通图是图中任意两个顶点之间都存在路径的图,连通图,路径,0,17,CON,CON
算法效率是指算法执行所需要的时间和空间资源的量度，包括时间复杂度和空间复杂度来衡量算法在不同输入规模下的运行效率和资源消耗情况,时间复杂度,空间复杂度,27,33,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,子树,42,38,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,树,42,12,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,平衡二叉树,42,0,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,排序,42,10,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,子树,42,22,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,树,38,12,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,平衡二叉树,38,0,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,排序,38,10,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,子树,38,22,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,树,子树,12,22,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,子树,0,22,CON,CON
平衡二叉树是一种二叉排序树，其每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,排序,子树,10,22,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
子节点是树结构中直接连接在父节点之下的节点,父节点,子节点,13,0,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，并且栈的操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和,入栈,入栈,52,44,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，并且栈的操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和,入栈,出栈,52,24,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，并且栈的操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和,入栈,出栈,44,24,CON,CON
回溯法基础特点是按条件深度优先搜索解空间找可行解,回溯法,深度优先搜索,0,11,CON,CON
父节点是在树形结构中，其直接有子节点相连且处于比子节点更高层次的节点,子节点,父节点,15,0,CON,CON
父节点是在树形结构中，其直接有子节点相连且处于比子节点更高层次的节点,子节点,子节点,15,24,CON,CON
父节点是在树形结构中，其直接有子节点相连且处于比子节点更高层次的节点,父节点,子节点,0,24,CON,CON
每次从未排序序列中选最小元素放已排序序列末尾,排序,排序,16,4,CON,CON
回溯法基础的定义的核心特征是在问题的解空间树中，按照深度优先策略从根节点出发搜索解，当发现当前节点不满足求解条件时就回溯到,根节点,回溯法,33,0,CON,CON
指针是存储变量内存地址的变量用于间接访问数据,指针,访问,0,18,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,指针,指针,36,41,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,指针,链表,36,0,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,指针,链表,36,62,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,指针,链表,36,56,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,指针,链表,41,0,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,指针,链表,41,62,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,指针,链表,41,56,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,链表,链表,0,62,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,链表,链表,0,56,CON,CON
链表是一种线性数据结构，其核心特征包括每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表，数据在链表中的存储顺序,链表,链表,62,56,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,数据元素,表尾,31,57,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,数据元素,线性表,31,0,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,数据元素,表头,31,52,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,数据元素,数据元素,31,17,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,数据元素,数据类型,31,10,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,表尾,线性表,57,0,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,表尾,表头,57,52,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,表尾,数据元素,57,17,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,表尾,数据类型,57,10,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,线性表,表头,0,52,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,线性表,数据元素,0,17,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,线性表,数据类型,0,10,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,表头,数据元素,52,17,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,表头,数据类型,52,10,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，除,数据元素,数据类型,17,10,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心性质是按顺序逐个,查找,顺序查找,25,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心性质是按顺序逐个,查找,遍历,25,46,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心性质是按顺序逐个,顺序查找,遍历,0,46,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过计算机内存中的存储单元来体现等方面,物理结构,数据元素,3,14,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过计算机内存中的存储单元来体现等方面,物理结构,数据元素,3,30,CON,CON
数据的物理结构的核心性质包括数据元素在计算机中的存储方式以及数据元素之间的逻辑关系如何通过计算机内存中的存储单元来体现等方面,数据元素,数据元素,14,30,CON,CON
树是一种分层结构有根节点且子节点唯一的非线性数据结构,根节点,子节点,9,13,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,数据元素,遍历,21,47,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,数据元素,查找,21,55,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,数据元素,顺序查找,21,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,遍历,查找,47,55,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,遍历,顺序查找,47,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与给定的关键字进行比较，直到找到匹配的元素或遍历完整个序列的查找方法,查找,顺序查找,55,0,CON,CON
完全二叉树是一种除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树,二叉树,完全二叉树,47,0,CON,CON
树的查找是在给定的树结构中，从根节点开始，按照特定规则沿着树的分支进行搜索，以确定是否存在特定数据元素的操作过程其核心特征是,根节点,查找,15,2,CON,CON
树的查找是在给定的树结构中，从根节点开始，按照特定规则沿着树的分支进行搜索，以确定是否存在特定数据元素的操作过程其核心特征是,根节点,数据元素,15,47,CON,CON
树的查找是在给定的树结构中，从根节点开始，按照特定规则沿着树的分支进行搜索，以确定是否存在特定数据元素的操作过程其核心特征是,查找,数据元素,2,47,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,排序,子树,22,8,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,排序,平衡二叉树,22,0,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,排序,树,22,24,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,子树,平衡二叉树,8,0,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,子树,树,8,24,CON,CON
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,平衡二叉树,树,0,24,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法，其特点包括能利用已有的计算结果进行下一步,迭代法,迭代,0,24,CON,CON
回路是在图中从某顶点出发又回到该顶点的路径,回路,路径,0,19,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的开始元素和终端元素，且除,数据元素,数据元素,17,31,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的开始元素和终端元素，且除,数据元素,线性表,17,0,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的开始元素和终端元素，且除,数据元素,数据类型,17,10,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的开始元素和终端元素，且除,数据元素,线性表,31,0,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的开始元素和终端元素，且除,数据元素,数据类型,31,10,CON,CON
线性表是一种具有相同数据类型的n个数据元素的有限序列，其特点是数据元素之间存在一对一的线性关系，有唯一的开始元素和终端元素，且除,线性表,数据类型,0,10,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在,路径,无向图,0,37,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在,路径,有向图,0,24,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在,无向图,有向图,37,24,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心性质包括有且仅有一个开始节点和一个终端节点，除开始节点外每个节点有且仅有一个前驱,线性结构,数据元素,0,7,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,查找,遍历,24,45,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,查找,查找,24,2,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,查找,线性表,24,50,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,查找,线性表,24,6,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,遍历,查找,45,2,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,遍历,线性表,45,50,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,遍历,线性表,45,6,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,查找,线性表,2,50,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,查找,线性表,2,6,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,线性表,线性表,50,6,CON,CON
树的查找是基于树这种数据结构，通过特定规则在树中定位特定元素以确定其是否存在及获取相关信息的操作过程，具有从根节点开始逐层比较等,查找,树,2,7,CON,CON
树的查找是基于树这种数据结构，通过特定规则在树中定位特定元素以确定其是否存在及获取相关信息的操作过程，具有从根节点开始逐层比较等,查找,根节点,2,54,CON,CON
树的查找是基于树这种数据结构，通过特定规则在树中定位特定元素以确定其是否存在及获取相关信息的操作过程，具有从根节点开始逐层比较等,树,根节点,7,54,CON,CON
比较排序是通过元素间比较确定其相对顺序的排序方法,排序,比较排序,20,0,CON,CON
树中一个节点的子树个数称为该节点的度，树中节点的最大度数称为树的度,树的度,子树,30,7,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，权重值用于表示边的某种属性或代价，图中的顶点通过带权重的边相互连接,图,加权图,6,0,CON,CON
非线性结构中数据元素之间的关系不满足线性关系,非线性结构,数据元素,0,6,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,哈希函数,插入,11,27,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,哈希函数,查找,11,30,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,哈希函数,映射,11,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,哈希函数,哈希表,11,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,哈希函数,删除,11,33,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,插入,查找,27,30,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,插入,映射,27,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,插入,哈希表,27,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,插入,删除,27,33,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,查找,映射,30,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,查找,哈希表,30,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,查找,删除,30,33,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,映射,哈希表,17,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,映射,删除,17,33,CON,CON
哈希表的核心特征是通过哈希函数将键映射到特定位置，使得插入、查找和删除操作在平均情况下能在接近常数时间内完成，并且不同的键经过哈希,哈希表,删除,0,33,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，而右子树中的所有节点的值都大于该节点的值,右子树,左子树,43,22,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，而右子树中的所有节点的值都大于该节点的值,右子树,二叉搜索树,43,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，而右子树中的所有节点的值都大于该节点的值,左子树,二叉搜索树,22,0,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,排序,插入,40,38,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,排序,插入,40,45,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,排序,排序,40,52,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,排序,简单排序,40,0,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,插入,插入,38,45,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,插入,排序,38,52,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,插入,简单排序,38,0,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,插入,排序,45,52,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,插入,简单排序,45,0,CON,CON
简单排序的特点是通过比较和交换元素位置逐步将无序序列转变为有序序列，包括直接插入排序比较并插入元素、冒泡排序相邻元素比较交换将最大元素沉底,排序,简单排序,52,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,链表,循环链表,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,61,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,61,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,13,0,CON,CON
回路是图中一条起点和终点相同的路径且其长度大于等于 1 并且路径上除起点和终点外的顶点不重复遍历,路径,回路,30,0,CON,CON
回路是图中一条起点和终点相同的路径且其长度大于等于 1 并且路径上除起点和终点外的顶点不重复遍历,路径,路径,30,15,CON,CON
回路是图中一条起点和终点相同的路径且其长度大于等于 1 并且路径上除起点和终点外的顶点不重复遍历,路径,遍历,30,46,CON,CON
回路是图中一条起点和终点相同的路径且其长度大于等于 1 并且路径上除起点和终点外的顶点不重复遍历,回路,路径,0,15,CON,CON
回路是图中一条起点和终点相同的路径且其长度大于等于 1 并且路径上除起点和终点外的顶点不重复遍历,回路,遍历,0,46,CON,CON
回路是图中一条起点和终点相同的路径且其长度大于等于 1 并且路径上除起点和终点外的顶点不重复遍历,路径,遍历,15,46,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序,排序,排序,7,40,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序,排序,比较排序,7,0,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序,排序,比较排序,40,0,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,访问,遍历,63,54,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,访问,指针,63,41,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,访问,指针,63,12,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,访问,链表,63,49,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,访问,双向链表,63,0,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,遍历,指针,54,41,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,遍历,指针,54,12,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,遍历,链表,54,49,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,遍历,双向链表,54,0,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,指针,指针,41,12,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,指针,链表,41,49,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,指针,双向链表,41,0,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,指针,链表,12,49,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,指针,双向链表,12,0,CON,CON
双向链表每个节点包含两个指针，一个指向前一个节点，另一个指向后一个节点，通过这两个指针可以方便地在链表中双向遍历，既能从前往后访问节点,链表,双向链表,49,0,CON,CON
树的深度是从根节点开始自顶向下逐层累加直至叶节点所经过的最大层数,树的深度,根节点,0,6,CON,CON
双向链表每个节点有前驱和后继指针可双向遍历,遍历,指针,19,14,CON,CON
双向链表每个节点有前驱和后继指针可双向遍历,遍历,双向链表,19,0,CON,CON
双向链表每个节点有前驱和后继指针可双向遍历,指针,双向链表,14,0,CON,CON
稳定性的核心性质是在排序过程中，相等元素的相对次序保持不变,稳定性,排序,0,10,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆排序,堆,0,32,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆排序,排序,0,59,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆排序,堆,0,47,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆排序,数组,0,56,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆排序,数组,0,21,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,排序,32,59,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,堆,32,47,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,数组,32,56,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,排序,32,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,数组,32,21,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,堆,32,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,排序,堆,59,47,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,排序,数组,59,56,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,排序,排序,59,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,排序,数组,59,21,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,排序,堆,59,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,数组,47,56,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,排序,47,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,数组,47,21,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,堆,堆,47,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,数组,排序,56,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,数组,数组,56,21,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,数组,堆,56,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,排序,数组,14,21,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,排序,堆,14,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将数组构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现对数组的排序,数组,堆,21,8,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,访问,36,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,广度优先搜索,36,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,访问,36,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,遍历,36,46,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,广度优先搜索,15,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,访问,15,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,遍历,15,46,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,广度优先搜索,访问,0,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,广度优先搜索,遍历,0,46,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,遍历,21,46,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,插入,表尾,12,24,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,插入,表头,12,31,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,插入,表尾,12,8,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,插入,删除,12,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,插入,线性表,12,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,插入,数据元素,12,42,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,表头,24,31,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,表尾,24,8,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,删除,24,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,线性表,24,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,数据元素,24,42,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表头,表尾,31,8,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表头,删除,31,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表头,线性表,31,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表头,数据元素,31,42,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,删除,8,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,线性表,8,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,表尾,数据元素,8,42,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,删除,线性表,15,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,删除,数据元素,15,42,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表，表尾称为栈顶，表头称为栈底，不含任何数据元素的栈称为空栈,线性表,数据元素,20,42,CON,CON
树的查找是在给定的树结构中，根据特定的条件或键值，从根节点开始，按照树的遍历规则逐步寻找满足条件的节点的操作过程,查找,遍历,2,36,CON,CON
树的查找是在给定的树结构中，根据特定的条件或键值，从根节点开始，按照树的遍历规则逐步寻找满足条件的节点的操作过程,查找,根节点,2,26,CON,CON
树的查找是在给定的树结构中，根据特定的条件或键值，从根节点开始，按照树的遍历规则逐步寻找满足条件的节点的操作过程,遍历,根节点,36,26,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,30,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,65,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,路径,路径,30,65,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,左子树,二叉搜索树,11,57,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,左子树,右子树,11,30,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,左子树,二叉搜索树,11,0,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,左子树,根节点,11,43,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,左子树,子树,11,52,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,左子树,根节点,11,24,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,右子树,57,30,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,二叉搜索树,57,0,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,根节点,57,43,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,子树,57,52,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,根节点,57,24,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,右子树,二叉搜索树,30,0,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,右子树,根节点,30,43,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,右子树,子树,30,52,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,右子树,根节点,30,24,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,根节点,0,43,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,子树,0,52,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,二叉搜索树,根节点,0,24,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,根节点,子树,43,52,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,根节点,根节点,43,24,CON,CON
二叉搜索树的核心性质是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也都是二叉搜索树,子树,根节点,52,24,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
非线性结构中数据元素之间存在非一对一的关系,非线性结构,数据元素,0,6,CON,CON
递归基础是递归算法中存在的一种终止条件，当满足该条件时递归不再继续进行，直接返回一个确定的简单结果,递归,递归,27,5,CON,CON
递归基础是递归算法中存在的一种终止条件，当满足该条件时递归不再继续进行，直接返回一个确定的简单结果,递归,递归基础,27,0,CON,CON
递归基础是递归算法中存在的一种终止条件，当满足该条件时递归不再继续进行，直接返回一个确定的简单结果,递归,递归基础,5,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序,排序,排序,7,44,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序,排序,比较排序,7,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在有序序列中的位置从而实现排序,排序,比较排序,44,0,CON,CON
根节点是树结构中的起始节点，它没有父节点，是整个树的入口和基础，所有其他节点都直接或间接连接到根节点，它在树的层次结构,根节点,父节点,47,17,CON,CON
根节点是树结构中的起始节点，它没有父节点，是整个树的入口和基础，所有其他节点都直接或间接连接到根节点，它在树的层次结构,根节点,根节点,47,0,CON,CON
根节点是树结构中的起始节点，它没有父节点，是整个树的入口和基础，所有其他节点都直接或间接连接到根节点，它在树的层次结构,父节点,根节点,17,0,CON,CON
在树结构中，没有子节点的节点即为叶子节点,子节点,叶子节点,8,16,CON,CON
每趟从待排序元素中选最小（大）值与未排序首位交换,排序,排序,4,18,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,31,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,52,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,52,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,31,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,31,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,52,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,52,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,52,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,52,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,22,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,22,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,22,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,46,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,46,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,14,8,CON,CON
堆排序是一种选择排序，它将数据组织成堆结构，通过不断调整堆顶元素与其他元素的关系，将最大或最小元素逐步移到堆的末尾，从而,堆,堆排序,18,0,CON,CON
堆排序是一种选择排序，它将数据组织成堆结构，通过不断调整堆顶元素与其他元素的关系，将最大或最小元素逐步移到堆的末尾，从而,堆,选择排序,18,6,CON,CON
堆排序是一种选择排序，它将数据组织成堆结构，通过不断调整堆顶元素与其他元素的关系，将最大或最小元素逐步移到堆的末尾，从而,堆排序,选择排序,0,6,CON,CON
邻接矩阵是用于表示图的一种矩阵，其核心特征包括：是一个方阵，行数和列数与图的顶点数相同,邻接矩阵,图的顶点,0,36,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，用于表示该边的某种属性或代价,图,加权图,6,0,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,存储结构,逻辑结构,36,12,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,存储结构,数据元素,36,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,存储结构,数据元素,36,42,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,存储结构,线性表,36,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,逻辑结构,数据元素,12,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,逻辑结构,数据元素,12,42,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,逻辑结构,线性表,12,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,数据元素,数据元素,17,42,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,数据元素,线性表,17,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的线性关系，其物理存储结构是将数据元素依次存储在一片连续的存储单元中,数据元素,线性表,42,6,CON,CON
邻接表的核心性质是对于图中的每个顶点，用一个单链表来存储与该顶点相邻接的所有顶点,单链表,邻接表,22,0,CON,CON
从根节点到最远叶节点最长简单路径上边的数目即树的高度,树的高度,根节点,22,1,CON,CON
从根节点到最远叶节点最长简单路径上边的数目即树的高度,树的高度,路径,22,14,CON,CON
从根节点到最远叶节点最长简单路径上边的数目即树的高度,根节点,路径,1,14,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应,集合,映射,22,0,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应,集合,集合,22,10,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应,映射,集合,0,10,CON,CON
数据的物理结构是指数据在计算机内存或存储设备中的存储方式，包括数据元素的存储及其关系的表示,物理结构,数据元素,3,31,CON,CON
树是一种分层数据结构包含根节点和子节点,根节点,子节点,12,16,CON,CON
指针具有能直接访问内存地址、可灵活操作内存数据、能提高程序运行效率、但使用不当易引发内存错误如悬空指针、野指针等导致程序崩溃或出现未,访问,指针,7,49,CON,CON
指针具有能直接访问内存地址、可灵活操作内存数据、能提高程序运行效率、但使用不当易引发内存错误如悬空指针、野指针等导致程序崩溃或出现未,访问,指针,7,0,CON,CON
指针具有能直接访问内存地址、可灵活操作内存数据、能提高程序运行效率、但使用不当易引发内存错误如悬空指针、野指针等导致程序崩溃或出现未,访问,指针,7,53,CON,CON
指针具有能直接访问内存地址、可灵活操作内存数据、能提高程序运行效率、但使用不当易引发内存错误如悬空指针、野指针等导致程序崩溃或出现未,指针,指针,49,0,CON,CON
指针具有能直接访问内存地址、可灵活操作内存数据、能提高程序运行效率、但使用不当易引发内存错误如悬空指针、野指针等导致程序崩溃或出现未,指针,指针,49,53,CON,CON
指针具有能直接访问内存地址、可灵活操作内存数据、能提高程序运行效率、但使用不当易引发内存错误如悬空指针、野指针等导致程序崩溃或出现未,指针,指针,0,53,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,44,18,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,44,24,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,44,53,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,44,60,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,广度优先搜索,44,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,18,24,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,18,53,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,18,60,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,广度优先搜索,18,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,24,53,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,24,60,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,广度优先搜索,24,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,访问,53,60,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,广度优先搜索,53,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，逐层推进直至访问完所有节点，其访问过程中优先访问同一层中,访问,广度优先搜索,60,0,CON,CON
连通图中任意两点之间都存在路径可相互到达,连通图,路径,0,13,CON,CON
在树形结构中一个节点的子节点所对应的上一级节点就是该节点的父节点,父节点,子节点,29,11,CON,CON
回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中除起始顶点外其他顶点不重复，同时具有从某一,路径,回路,37,0,CON,CON
回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中除起始顶点外其他顶点不重复，同时具有从某一,路径,路径,37,34,CON,CON
回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中除起始顶点外其他顶点不重复，同时具有从某一,回路,路径,0,34,CON,CON
引用是给已存在的变量起一个别名，对引用的操作实际上就是对其所引用变量的操作，其核心性质包括：引用必须在定义时初始化，且初始化后不能,初始化,初始化,59,54,CON,CON
递归基础是递归算法中满足终止条件可直接得出结果而无需再次递归调用自身的初始情况,递归,递归,28,5,CON,CON
递归基础是递归算法中满足终止条件可直接得出结果而无需再次递归调用自身的初始情况,递归,递归基础,28,0,CON,CON
递归基础是递归算法中满足终止条件可直接得出结果而无需再次递归调用自身的初始情况,递归,递归基础,5,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,18,57,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,54,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,18,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,54,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,57,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,54,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,54,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,15,0,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,路径,根节点,20,6,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以间接访问其所指向的变量,访问,指针,32,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以间接访问其所指向的变量,访问,指针,32,26,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过该指针可以间接访问其所指向的变量,指针,指针,0,26,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,52,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,52,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,52,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,52,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,52,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,52,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,15,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,25,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,25,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入排序,排序,0,46,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,删除,插入,47,44,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,删除,映射,47,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,删除,哈希表,47,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,删除,查找,47,41,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,删除,时间复杂度,47,35,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,删除,哈希函数,47,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,插入,映射,44,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,插入,哈希表,44,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,插入,查找,44,41,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,插入,时间复杂度,44,35,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,插入,哈希函数,44,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,映射,哈希表,11,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,映射,查找,11,41,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,映射,时间复杂度,11,35,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,映射,哈希函数,11,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,哈希表,查找,0,41,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,哈希表,时间复杂度,0,35,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,哈希表,哈希函数,0,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,查找,时间复杂度,41,35,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,查找,哈希函数,41,5,CON,CON
哈希表通过哈希函数将键映射到特定位置以实现快速数据存储与检索，具有常数时间复杂度的查找、插入和删除操作，能高效处理大规模数据，但可能存在哈希,时间复杂度,哈希函数,35,5,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点之间最长简单路径上的边数或节点数所代表的数值，它反映了树在垂直方向上,路径,根节点,29,13,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点之间最长简单路径上的边数或节点数所代表的数值，它反映了树在垂直方向上,路径,叶子节点,29,19,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点之间最长简单路径上的边数或节点数所代表的数值，它反映了树在垂直方向上,路径,树的高度,29,0,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点之间最长简单路径上的边数或节点数所代表的数值，它反映了树在垂直方向上,根节点,叶子节点,13,19,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点之间最长简单路径上的边数或节点数所代表的数值，它反映了树在垂直方向上,根节点,树的高度,13,0,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点之间最长简单路径上的边数或节点数所代表的数值，它反映了树在垂直方向上,叶子节点,树的高度,19,0,CON,CON
指针是一种变量，其值为内存中另一个变量或对象的地址，通过该指针可以访问和操作其所指向的内存位置的数据,指针,访问,29,33,CON,CON
指针是一种变量，其值为内存中另一个变量或对象的地址，通过该指针可以访问和操作其所指向的内存位置的数据,指针,指针,29,0,CON,CON
指针是一种变量，其值为内存中另一个变量或对象的地址，通过该指针可以访问和操作其所指向的内存位置的数据,访问,指针,33,0,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,深度优先搜索,路径,0,36,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,深度优先搜索,遍历,0,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,路径,遍历,36,11,CON,CON
满二叉树的核心特征是一棵深度为k且有2^k - 1个节点的二叉树，其每一层上的节点数都达到最大值，即第i层,满二叉树,二叉树,0,29,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,左子树,3,21,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,遍历,3,34,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,二叉树,3,0,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,根节点,3,17,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,左子树,3,37,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,根节点,3,41,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,右子树,3,45,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,遍历,3,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,右子树,3,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,遍历,21,34,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,二叉树,21,0,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,根节点,21,17,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,左子树,21,37,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,根节点,21,41,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,右子树,21,45,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,遍历,21,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,右子树,21,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,二叉树,34,0,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,根节点,34,17,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,左子树,34,37,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,根节点,34,41,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,右子树,34,45,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,遍历,34,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,右子树,34,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,二叉树,根节点,0,17,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,二叉树,左子树,0,37,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,二叉树,根节点,0,41,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,二叉树,右子树,0,45,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,二叉树,遍历,0,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,二叉树,右子树,0,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,左子树,17,37,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,根节点,17,41,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,右子树,17,45,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,遍历,17,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,右子树,17,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,根节点,37,41,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,右子树,37,45,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,遍历,37,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,左子树,右子树,37,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,右子树,41,45,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,遍历,41,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,根节点,右子树,41,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,右子树,遍历,45,14,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,右子树,右子树,45,25,CON,CON
二叉树遍历的核心性质包括先序遍历是根节点、左子树、右子树的顺序，中序遍历是左子树、根节点、右子树的顺序,遍历,右子树,14,25,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,叶子节点,树的高度,17,0,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,叶子节点,根节点,17,11,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,叶子节点,路径,17,26,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,根节点,0,11,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,26,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,根节点,路径,11,26,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,18,57,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,54,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,15,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,18,0,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,54,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,15,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,57,0,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,54,15,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,54,0,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,15,0,CON,CON
比较排序是基于元素之间的比较来确定元素的相对顺序从而进行排序的算法，其核心特征是通过比较元素大小来逐步构建有序序列，在排序过程中主要依靠,排序,排序,59,28,CON,CON
比较排序是基于元素之间的比较来确定元素的相对顺序从而进行排序的算法，其核心特征是通过比较元素大小来逐步构建有序序列，在排序过程中主要依靠,排序,比较排序,59,0,CON,CON
比较排序是基于元素之间的比较来确定元素的相对顺序从而进行排序的算法，其核心特征是通过比较元素大小来逐步构建有序序列，在排序过程中主要依靠,排序,比较排序,28,0,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
深度优先搜索是一种在搜索过程中沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索策略,深度优先搜索,路径,0,54,CON,CON
深度优先搜索是一种在搜索过程中沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索策略,深度优先搜索,路径,0,19,CON,CON
深度优先搜索是一种在搜索过程中沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索策略,路径,路径,54,19,CON,CON
指针是内存地址的变量，用于间接访问和操作数据,指针,访问,0,15,CON,CON
二叉树遍历是按特定顺序访问其所有节点的操作,遍历,二叉树,3,0,CON,CON
二叉树遍历是按特定顺序访问其所有节点的操作,遍历,访问,3,11,CON,CON
二叉树遍历是按特定顺序访问其所有节点的操作,二叉树,访问,0,11,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,18,41,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,41,0,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
二分查找是在有序数组中通过不断将区间分成两半来确定目标值位置，每次比较中间元素与目标值，若相等则找到，若目标值小则在左半,数组,二分查找,8,0,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据类型,数组,12,50,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据类型,数据元素,12,19,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据类型,数组,12,0,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据类型,数组,12,66,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据类型,访问,12,64,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数组,数据元素,50,19,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数组,数组,50,0,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数组,数组,50,66,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数组,访问,50,64,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据元素,数组,19,0,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据元素,数组,19,66,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数据元素,访问,19,64,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数组,数组,0,66,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数组,访问,0,64,CON,CON
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储且占用连续的存储空间，通过数组名和下标可以唯一地标识和访问数组,数组,访问,66,64,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,插入,8,36,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,删除,8,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,删除,36,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,队列,36,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,删除,队列,23,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,查找,删除,27,31,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,查找,数据元素,27,57,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,查找,哈希表,27,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,查找,映射,27,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,查找,插入,27,29,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,查找,时间复杂度,27,39,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,查找,哈希函数,27,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,删除,数据元素,31,57,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,删除,哈希表,31,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,删除,映射,31,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,删除,插入,31,29,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,删除,时间复杂度,31,39,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,删除,哈希函数,31,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,数据元素,哈希表,57,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,数据元素,映射,57,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,数据元素,插入,57,29,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,数据元素,时间复杂度,57,39,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,数据元素,哈希函数,57,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,哈希表,映射,0,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,哈希表,插入,0,29,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,哈希表,时间复杂度,0,39,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,哈希表,哈希函数,0,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,映射,插入,13,29,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,映射,时间复杂度,13,39,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,映射,哈希函数,13,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,插入,时间复杂度,29,39,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,插入,哈希函数,29,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据查找插入删除，平均情况下时间复杂度接近常数，能高效利用内存且数据元素存储位置与键值相关,时间复杂度,哈希函数,39,7,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后对左右,数组,数组,22,8,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后对左右,数组,快速排序,22,0,CON,CON
快速排序是对给定数组通过选择一个基准元素，将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后对左右,数组,快速排序,8,0,CON,CON
在树形数据结构中若存在节点A和节点B，当节点B直接连接于节点A且节点A为父节点时节点B就是节点A的子节点,父节点,子节点,36,49,CON,CON
存储结构的特点的核心性质包括数据元素的存储方式以及数据元素之间关系的表示方式,数据元素,数据元素,14,25,CON,CON
存储结构的特点的核心性质包括数据元素的存储方式以及数据元素之间关系的表示方式,数据元素,存储结构,14,0,CON,CON
存储结构的特点的核心性质包括数据元素的存储方式以及数据元素之间关系的表示方式,数据元素,存储结构,25,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质,存储结构,数据元素,0,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质,数据元素,数据元素,29,6,CON,CON
数组是具有相同数据类型元素的有序集合且内存连续,数组,集合,0,16,CON,CON
数组是具有相同数据类型元素的有序集合且内存连续,数组,数据类型,0,7,CON,CON
数组是具有相同数据类型元素的有序集合且内存连续,集合,数据类型,16,7,CON,CON
递归基础是递归定义中的一部分，其核心特征是明确给出递归终止的条件或初始值，即确定在某个特定情况下递归不再继续，而是直接给出结果，这个特定情况,递归,递归,48,25,CON,CON
递归基础是递归定义中的一部分，其核心特征是明确给出递归终止的条件或初始值，即确定在某个特定情况下递归不再继续，而是直接给出结果，这个特定情况,递归,递归,48,5,CON,CON
递归基础是递归定义中的一部分，其核心特征是明确给出递归终止的条件或初始值，即确定在某个特定情况下递归不再继续，而是直接给出结果，这个特定情况,递归,递归基础,48,0,CON,CON
递归基础是递归定义中的一部分，其核心特征是明确给出递归终止的条件或初始值，即确定在某个特定情况下递归不再继续，而是直接给出结果，这个特定情况,递归,递归,25,5,CON,CON
递归基础是递归定义中的一部分，其核心特征是明确给出递归终止的条件或初始值，即确定在某个特定情况下递归不再继续，而是直接给出结果，这个特定情况,递归,递归基础,25,0,CON,CON
递归基础是递归定义中的一部分，其核心特征是明确给出递归终止的条件或初始值，即确定在某个特定情况下递归不再继续，而是直接给出结果，这个特定情况,递归,递归基础,5,0,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,头节点,链表,28,10,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,头节点,尾节点,28,18,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,头节点,链表,28,65,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,头节点,遍历,28,61,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,头节点,指针,28,22,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,头节点,循环链表,28,0,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,头节点,链表,28,46,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,尾节点,10,18,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,链表,10,65,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,遍历,10,61,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,指针,10,22,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,链表,10,46,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,尾节点,链表,18,65,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,尾节点,遍历,18,61,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,尾节点,指针,18,22,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,尾节点,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,尾节点,链表,18,46,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,遍历,65,61,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,指针,65,22,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,循环链表,65,0,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,链表,链表,65,46,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,遍历,指针,61,22,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,遍历,循环链表,61,0,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,遍历,链表,61,46,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,指针,循环链表,22,0,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,指针,链表,22,46,CON,CON
循环链表是一种特殊的链表，其特点是表尾节点的指针域指向表头节点，从而形成一个环形结构，使得从链表中的任意一个节点出发都可以遍历整个链表,循环链表,链表,0,46,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,排序,8,12,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,数组,8,36,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,快速排序,8,0,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,排序,数组,12,36,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,排序,快速排序,12,0,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,快速排序,36,0,CON,CON
数组是一种有序的数据集合，其特点的核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，可通过下标进行随机访问，内存空间的分配是连续,数组,数据类型,0,31,CON,CON
数组是一种有序的数据集合，其特点的核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，可通过下标进行随机访问，内存空间的分配是连续,数组,访问,0,57,CON,CON
数组是一种有序的数据集合，其特点的核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，可通过下标进行随机访问，内存空间的分配是连续,数组,集合,0,10,CON,CON
数组是一种有序的数据集合，其特点的核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，可通过下标进行随机访问，内存空间的分配是连续,数据类型,访问,31,57,CON,CON
数组是一种有序的数据集合，其特点的核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，可通过下标进行随机访问，内存空间的分配是连续,数据类型,集合,31,10,CON,CON
数组是一种有序的数据集合，其特点的核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，可通过下标进行随机访问，内存空间的分配是连续,访问,集合,57,10,CON,CON
路径是图中两个顶点之间的顶点序列（若为有向图则是有向边序列），包含起点终点且满足从起点按顺序经中间顶点可到达终点，,路径,有向图,0,19,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,路径,根节点,20,6,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,集合,访问,9,38,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,集合,访问,9,61,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,集合,数组,9,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,集合,数据类型,9,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,访问,访问,38,61,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,访问,数组,38,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,访问,数据类型,38,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,访问,数组,61,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,访问,数据类型,61,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问，在内存中按顺序存储，具有存储紧凑、可随机访问等特点,数组,数据类型,0,23,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,指针,插入,19,47,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,指针,遍历,19,43,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,指针,删除,19,50,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,指针,指针,19,32,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,指针,双向链表,19,0,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,插入,遍历,47,43,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,插入,删除,47,50,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,插入,指针,47,32,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,插入,双向链表,47,0,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,遍历,删除,43,50,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,遍历,指针,43,32,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,遍历,双向链表,43,0,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,删除,指针,50,32,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,删除,双向链表,50,0,CON,CON
双向链表每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，这使得它可以双向遍历，在插入和删除节点时更灵活高效，且,指针,双向链表,32,0,CON,CON
循环链表是一种首尾相连的链表结构,链表,循环链表,12,0,CON,CON
回路是在图中从一个顶点出发，沿着边经过若干顶点后又回到该起始顶点所形成的路径且路径中各顶点和边均不重复（在有向图,路径,路径,36,39,CON,CON
回路是在图中从一个顶点出发，沿着边经过若干顶点后又回到该起始顶点所形成的路径且路径中各顶点和边均不重复（在有向图,路径,回路,36,0,CON,CON
回路是在图中从一个顶点出发，沿着边经过若干顶点后又回到该起始顶点所形成的路径且路径中各顶点和边均不重复（在有向图,路径,有向图,36,53,CON,CON
回路是在图中从一个顶点出发，沿着边经过若干顶点后又回到该起始顶点所形成的路径且路径中各顶点和边均不重复（在有向图,路径,回路,39,0,CON,CON
回路是在图中从一个顶点出发，沿着边经过若干顶点后又回到该起始顶点所形成的路径且路径中各顶点和边均不重复（在有向图,路径,有向图,39,53,CON,CON
回路是在图中从一个顶点出发，沿着边经过若干顶点后又回到该起始顶点所形成的路径且路径中各顶点和边均不重复（在有向图,回路,有向图,0,53,CON,CON
递归基础是递归算法中满足特定条件可直接得出结果无需再次递归调用的初始情况或简单条件定义,递归,递归,27,5,CON,CON
递归基础是递归算法中满足特定条件可直接得出结果无需再次递归调用的初始情况或简单条件定义,递归,递归基础,27,0,CON,CON
递归基础是递归算法中满足特定条件可直接得出结果无需再次递归调用的初始情况或简单条件定义,递归,递归基础,5,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,48,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,48,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,7,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,15,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,25,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,25,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入排序,排序,0,55,CON,CON
路径是由顶点和相邻顶点序偶构成的边所形成的序列，具有连通性、有序性、唯一性（若图中存在从顶点A到顶点B的路径，则该,路径,路径,0,52,CON,CON
迭代法是一种通过从一个初始估计出发，利用迭代公式逐步逼近问题精确解的方法其核心性质是通过不断重复相同的计算步骤来逐渐改进近似解,迭代法,迭代,0,20,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,线性表,44,11,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,后继节点,44,39,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,指针,44,54,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,单链表,44,0,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,链表,44,62,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,数据元素,44,29,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,线性表,后继节点,11,39,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,线性表,指针,11,54,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,线性表,链表,11,62,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,线性表,数据元素,11,29,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,后继节点,指针,39,54,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,后继节点,单链表,39,0,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,后继节点,链表,39,62,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,后继节点,数据元素,39,29,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,单链表,54,0,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,链表,54,62,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,指针,数据元素,54,29,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,单链表,链表,0,62,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,单链表,数据元素,0,29,CON,CON
单链表是一种链式存储的线性表，其核心特征为每个节点包含一个数据元素以及一个指向后继节点的指针，通过这些节点的指针依次连接形成链表结构，并且,链表,数据元素,62,29,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,指针,11,48,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,指针,11,57,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,访问,11,60,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,数据元素,11,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,头节点,11,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,链表,11,64,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,指针,48,57,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,访问,48,60,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,数据元素,48,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,头节点,48,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,链表,48,64,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,访问,57,60,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,数据元素,57,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,单链表,57,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,头节点,57,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,链表,57,64,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,访问,数据元素,60,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,访问,单链表,60,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,访问,头节点,60,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,访问,链表,60,64,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,数据元素,单链表,33,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,数据元素,头节点,33,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,数据元素,链表,33,64,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,单链表,头节点,0,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,单链表,链表,0,64,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,头节点,链表,53,64,CON,CON
选择排序是一种简单直观的排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未,排序,排序,43,12,CON,CON
选择排序是一种简单直观的排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未,排序,排序,43,25,CON,CON
选择排序是一种简单直观的排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未,排序,选择排序,43,0,CON,CON
选择排序是一种简单直观的排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未,排序,排序,12,25,CON,CON
选择排序是一种简单直观的排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未,排序,选择排序,12,0,CON,CON
选择排序是一种简单直观的排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未,排序,选择排序,25,0,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,数组,数组,11,6,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,数组,排序,11,15,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,数组,排序,11,21,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,数组,归并排序,11,0,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,数组,排序,6,15,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,数组,排序,6,21,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,数组,归并排序,6,0,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,排序,排序,15,21,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,排序,归并排序,15,0,CON,CON
归并排序是将数组分成子数组分别排序再合并的排序方法,排序,归并排序,21,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有唯一父节点且是其分支所指向的节点,父节点,父节点,31,9,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有唯一父节点且是其分支所指向的节点,父节点,子节点,31,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有唯一父节点且是其分支所指向的节点,父节点,子节点,9,0,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,访问,遍历,40,57,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,访问,访问,40,15,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,访问,广度优先搜索,40,0,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,访问,访问,40,25,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,遍历,访问,57,15,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,遍历,广度优先搜索,57,0,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,遍历,访问,57,25,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,访问,广度优先搜索,15,0,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,访问,访问,15,25,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历完,广度优先搜索,访问,0,25,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,20,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,左子树,0,34,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,左子树,0,27,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,20,34,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,20,27,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,34,27,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,二叉树,子节点,0,32,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,二叉树,子节点,0,27,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,二叉树,子节点,0,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,32,27,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,32,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,27,18,CON,CON
数组的核心性质是具有相同数据类型的一组数据元素按顺序存储在连续的内存空间中，可以通过下标来唯一地访问其中的元素,访问,数据元素,48,19,CON,CON
数组的核心性质是具有相同数据类型的一组数据元素按顺序存储在连续的内存空间中，可以通过下标来唯一地访问其中的元素,访问,数组,48,0,CON,CON
数组的核心性质是具有相同数据类型的一组数据元素按顺序存储在连续的内存空间中，可以通过下标来唯一地访问其中的元素,访问,数据类型,48,12,CON,CON
数组的核心性质是具有相同数据类型的一组数据元素按顺序存储在连续的内存空间中，可以通过下标来唯一地访问其中的元素,数据元素,数组,19,0,CON,CON
数组的核心性质是具有相同数据类型的一组数据元素按顺序存储在连续的内存空间中，可以通过下标来唯一地访问其中的元素,数据元素,数据类型,19,12,CON,CON
数组的核心性质是具有相同数据类型的一组数据元素按顺序存储在连续的内存空间中，可以通过下标来唯一地访问其中的元素,数组,数据类型,0,12,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即如果顶点u和顶点v之间存在一条边，那么从,集合,集合,13,23,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即如果顶点u和顶点v之间存在一条边，那么从,集合,图,13,6,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即如果顶点u和顶点v之间存在一条边，那么从,集合,无向图,13,0,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即如果顶点u和顶点v之间存在一条边，那么从,集合,图,23,6,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即如果顶点u和顶点v之间存在一条边，那么从,集合,无向图,23,0,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即如果顶点u和顶点v之间存在一条边，那么从,图,无向图,6,0,CON,CON
根节点是树结构中没有前驱节点且位于树顶端的特殊节点,根节点,前驱节点,0,10,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,遍历,访问,4,34,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,遍历,二叉树,4,0,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,遍历,二叉树,4,17,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,遍历,访问,4,15,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,遍历,访问,4,39,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,访问,二叉树,34,0,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,访问,二叉树,34,17,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,访问,访问,34,15,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,访问,访问,34,39,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,二叉树,二叉树,0,17,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,二叉树,访问,0,15,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,二叉树,访问,0,39,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,二叉树,访问,17,15,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,二叉树,访问,17,39,CON,CON
二叉树的遍历是按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次,访问,访问,15,39,CON,CON
数组是由相同类型的数据元素组成的有限序列，具有顺序存储、元素类型一致、通过下标唯一标识元素以及可根据下标进行随机访问等核心性质,数组,访问,0,56,CON,CON
数组是由相同类型的数据元素组成的有限序列，具有顺序存储、元素类型一致、通过下标唯一标识元素以及可根据下标进行随机访问等核心性质,数组,数据元素,0,9,CON,CON
数组是由相同类型的数据元素组成的有限序列，具有顺序存储、元素类型一致、通过下标唯一标识元素以及可根据下标进行随机访问等核心性质,访问,数据元素,56,9,CON,CON
子节点是树结构或图结构中，与某个特定节点直接相连且处于该节点下方层级的节点，其具有与父节点存在明确连接关系并在结构层次上低于,父节点,子节点,42,0,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,路径,6,19,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,树的深度,路径,0,19,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,路径,叶子节点,19,12,CON,CON
数据类型是一组值的集合以及定义在这组值上的一组操作的总称,数据类型,集合,0,9,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
引用是给已存在的对象起一个别名，使得可以通过该别名来访问和操作原本的对象，其核心特征包括与被引用对象绑定、具有相同的数据类型以及对,数据类型,访问,58,26,CON,CON
在图论中回路是指从图中某一顶点出发，沿着边经过若干顶点后又回到该起始顶点的路径且路径中边不重复,路径,路径,37,40,CON,CON
在图论中回路是指从图中某一顶点出发，沿着边经过若干顶点后又回到该起始顶点的路径且路径中边不重复,路径,回路,37,4,CON,CON
在图论中回路是指从图中某一顶点出发，沿着边经过若干顶点后又回到该起始顶点的路径且路径中边不重复,路径,回路,40,4,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,排序,8,12,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,数组,8,36,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,快速排序,8,0,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,排序,数组,12,36,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,排序,快速排序,12,0,CON,CON
快速排序是对给定数组进行排序的一种算法，其核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,快速排序,36,0,CON,CON
从起始节点出发沿一条路径深入探索直到无法继续再回溯找新路径,路径,路径,27,10,CON,CON
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足父节点的值大于或小于其子节点的值（大顶堆或小顶堆）,父节点,完全二叉树,26,16,CON,CON
数组是存储相同数据类型元素的有序集合,数组,集合,0,16,CON,CON
数组是存储相同数据类型元素的有序集合,数组,数据类型,0,7,CON,CON
数组是存储相同数据类型元素的有序集合,集合,数据类型,16,7,CON,CON
回路是图中从一顶点出发又回到该顶点的路径,回路,路径,0,18,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,树的节点,子节点,0,61,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,树的节点,父节点,0,37,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,树的节点,根节点,0,41,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,树的节点,数据元素,0,7,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,子节点,父节点,61,37,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,子节点,根节点,61,41,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,子节点,数据元素,61,7,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,父节点,根节点,37,41,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,父节点,数据元素,37,7,CON,CON
树的节点是包含数据元素以及指向其子节点的分支的基本数据结构单元且具有唯一的父节点（根节点除外）同时每个节点可以有零个或多个子节点,根节点,数据元素,41,7,CON,CON
深度优先搜索是从起始节点出发沿一条路径深入探索直到无法继续再回溯的搜索策略,深度优先搜索,路径,0,17,CON,CON
线性查找是按顺序逐个检查数据元素以确定目标值的查找方法,查找,查找,2,23,CON,CON
线性查找是按顺序逐个检查数据元素以确定目标值的查找方法,查找,数据元素,2,12,CON,CON
线性查找是按顺序逐个检查数据元素以确定目标值的查找方法,查找,数据元素,23,12,CON,CON
数据逻辑结构核心概念是数据元素间逻辑关系,数据元素,逻辑结构,11,2,CON,CON
回溯法基础的特点的核心性质是在搜索过程中通过深度优先搜索策略，按照某种规则依次尝试各种可能的解，当发现当前部分解无法继续扩展或不满足,回溯法,深度优先搜索,0,22,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点被分成若干互不相交的子集，每个子集又是一棵树，具有层次关系且每个节点有零个或多个子,树,根节点,46,17,CON,CON
映射是一种特殊的二元关系，对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应,集合,映射,28,0,CON,CON
映射是一种特殊的二元关系，对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,28,15,CON,CON
映射是一种特殊的二元关系，对于集合A中的任意一个元素，在集合B中都有唯一的一个元素与之对应,映射,集合,0,15,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,访问,18,43,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,队列,18,53,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,访问,18,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,队列,43,53,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,广度优先搜索,43,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,访问,43,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,访问,43,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,队列,广度优先搜索,53,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,队列,访问,53,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,队列,访问,53,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,广度优先搜索,访问,0,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,广度优先搜索,访问,0,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层节点后再访问下一层节点，通过队列来辅助实现，以确保,访问,访问,12,33,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而进行排序的算法,排序,比较排序,25,0,CON,CON
父节点是树结构中直接位于某个节点之上的节点，具有比该节点更高的层级，且该节点通过特定的连接关系与父节点相连，父节点可以有零,父节点,父节点,48,54,CON,CON
父节点是树结构中直接位于某个节点之上的节点，具有比该节点更高的层级，且该节点通过特定的连接关系与父节点相连，父节点可以有零,父节点,父节点,48,0,CON,CON
父节点是树结构中直接位于某个节点之上的节点，具有比该节点更高的层级，且该节点通过特定的连接关系与父节点相连，父节点可以有零,父节点,父节点,54,0,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,路径,树的深度,57,0,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,路径,叶子节点,57,23,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,路径,叶子节点,57,50,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,路径,根节点,57,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,树的深度,叶子节点,0,23,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,树的深度,叶子节点,0,50,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,树的深度,根节点,0,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,叶子节点,叶子节点,23,50,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,叶子节点,根节点,23,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数，其核心特征是体现了树中从根到最远叶子节点的最长路径,叶子节点,根节点,50,6,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，并且每个节点最多有一个父节点，同时除根节点外每个节点都有且仅有一条从父节点到,根节点,父节点,20,35,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，并且每个节点最多有一个父节点，同时除根节点外每个节点都有且仅有一条从父节点到,根节点,根节点,20,42,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，并且每个节点最多有一个父节点，同时除根节点外每个节点都有且仅有一条从父节点到,根节点,父节点,20,58,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，并且每个节点最多有一个父节点，同时除根节点外每个节点都有且仅有一条从父节点到,父节点,根节点,35,42,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，并且每个节点最多有一个父节点，同时除根节点外每个节点都有且仅有一条从父节点到,父节点,父节点,35,58,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，并且每个节点最多有一个父节点，同时除根节点外每个节点都有且仅有一条从父节点到,根节点,父节点,42,58,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,删除,插入,14,11,CON,CON
邻接矩阵是表示图中顶点间相邻关系的矩阵，其元素值反映顶点间是否有边相连及边的相关信息，方阵行数与列数等于图的顶点数,图的顶点,邻接矩阵,52,0,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即对于深度为i的节点,满二叉树,二叉树,0,24,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,排序,41,29,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,比较排序,41,0,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,比较排序,29,0,CON,CON
数据的逻辑结构的特点是描述数据元素之间逻辑关系且与数据的存储无关，包括集合、线性结构、树形结构和图形结构等不同类型各有其独特关系特征,逻辑结构,线性结构,3,38,CON,CON
数据的逻辑结构的特点是描述数据元素之间逻辑关系且与数据的存储无关，包括集合、线性结构、树形结构和图形结构等不同类型各有其独特关系特征,逻辑结构,数据元素,3,13,CON,CON
数据的逻辑结构的特点是描述数据元素之间逻辑关系且与数据的存储无关，包括集合、线性结构、树形结构和图形结构等不同类型各有其独特关系特征,逻辑结构,集合,3,35,CON,CON
数据的逻辑结构的特点是描述数据元素之间逻辑关系且与数据的存储无关，包括集合、线性结构、树形结构和图形结构等不同类型各有其独特关系特征,线性结构,数据元素,38,13,CON,CON
数据的逻辑结构的特点是描述数据元素之间逻辑关系且与数据的存储无关，包括集合、线性结构、树形结构和图形结构等不同类型各有其独特关系特征,线性结构,集合,38,35,CON,CON
数据的逻辑结构的特点是描述数据元素之间逻辑关系且与数据的存储无关，包括集合、线性结构、树形结构和图形结构等不同类型各有其独特关系特征,数据元素,集合,13,35,CON,CON
递归基础是递归算法中确定的最简单情况或初始条件，在该条件下递归函数无需再次调用自身即可直接给出结果,递归,递归基础,5,0,CON,CON
深度为k有n个结点的二叉树，除第k层外其余层满且最左子树深度为k,二叉树,左子树,10,25,CON,CON
满二叉树是所有节点都有左右子树且叶子层满的二叉树,二叉树,子树,21,13,CON,CON
满二叉树是所有节点都有左右子树且叶子层满的二叉树,二叉树,满二叉树,21,0,CON,CON
满二叉树是所有节点都有左右子树且叶子层满的二叉树,子树,满二叉树,13,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆排序,堆,0,17,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆排序,数组,0,10,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆,数组,17,10,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程将最大元素逐步“冒泡”到数组末尾，对数组进行升序或降序排序的算法,数组,数组,42,48,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程将最大元素逐步“冒泡”到数组末尾，对数组进行升序或降序排序的算法,数组,排序,42,57,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程将最大元素逐步“冒泡”到数组末尾，对数组进行升序或降序排序的算法,数组,冒泡排序,42,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程将最大元素逐步“冒泡”到数组末尾，对数组进行升序或降序排序的算法,数组,排序,48,57,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程将最大元素逐步“冒泡”到数组末尾，对数组进行升序或降序排序的算法,数组,冒泡排序,48,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程将最大元素逐步“冒泡”到数组末尾，对数组进行升序或降序排序的算法,排序,冒泡排序,57,0,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分，每次比较中间元素与目标值，根据比较结果缩小查找范围，直到找到目标值或确定,查找,数组,51,22,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分，每次比较中间元素与目标值，根据比较结果缩小查找范围，直到找到目标值或确定,查找,数组,51,13,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分，每次比较中间元素与目标值，根据比较结果缩小查找范围，直到找到目标值或确定,查找,二分查找,51,0,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分，每次比较中间元素与目标值，根据比较结果缩小查找范围，直到找到目标值或确定,数组,数组,22,13,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分，每次比较中间元素与目标值，根据比较结果缩小查找范围，直到找到目标值或确定,数组,二分查找,22,0,CON,CON
二分查找的核心特征是在有序数组中，通过不断将数组分成两部分，每次比较中间元素与目标值，根据比较结果缩小查找范围，直到找到目标值或确定,数组,二分查找,13,0,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,前驱节点,前驱节点,16,41,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,前驱节点,子树,16,37,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,前驱节点,父节点,16,50,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,前驱节点,前驱节点,16,22,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,前驱节点,子树,41,37,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,前驱节点,父节点,41,50,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,前驱节点,前驱节点,41,22,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,子树,父节点,37,50,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,子树,前驱节点,37,22,CON,CON
在树形结构中一个节点若存在直接的前驱节点且该前驱节点可引出包括此节点在内的子树则此前驱节点为此节点的父节点,父节点,前驱节点,50,22,CON,CON
指针具有能直接访问内存地址、可灵活操作内存数据、能高效传递数据地址、可实现动态内存管理等特点,访问,指针,7,0,CON,CON
单链表是一种链式存储的线性表由节点组成每个节点含数据和指针,指针,线性表,27,11,CON,CON
单链表是一种链式存储的线性表由节点组成每个节点含数据和指针,指针,单链表,27,0,CON,CON
单链表是一种链式存储的线性表由节点组成每个节点含数据和指针,线性表,单链表,11,0,CON,CON
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树,二叉树,子节点,35,13,CON,CON
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树,二叉树,满二叉树,35,0,CON,CON
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树,子节点,满二叉树,13,0,CON,CON
引用是一种给已存在变量起别名的机制，其特点包括必须初始化且初始化后不能再引用其他变量，通过引用访问变量本质上就是访问被引用的变量本身，,访问,初始化,56,29,CON,CON
引用是一种给已存在变量起别名的机制，其特点包括必须初始化且初始化后不能再引用其他变量，通过引用访问变量本质上就是访问被引用的变量本身，,访问,访问,56,47,CON,CON
引用是一种给已存在变量起别名的机制，其特点包括必须初始化且初始化后不能再引用其他变量，通过引用访问变量本质上就是访问被引用的变量本身，,访问,初始化,56,25,CON,CON
引用是一种给已存在变量起别名的机制，其特点包括必须初始化且初始化后不能再引用其他变量，通过引用访问变量本质上就是访问被引用的变量本身，,初始化,访问,29,47,CON,CON
引用是一种给已存在变量起别名的机制，其特点包括必须初始化且初始化后不能再引用其他变量，通过引用访问变量本质上就是访问被引用的变量本身，,初始化,初始化,29,25,CON,CON
引用是一种给已存在变量起别名的机制，其特点包括必须初始化且初始化后不能再引用其他变量，通过引用访问变量本质上就是访问被引用的变量本身，,访问,初始化,47,25,CON,CON
图的顶点是图结构中的基本元素，是组成图的节点，用于表示图中的对象或实体，在有向图或无向图中具有标识作用且与边相关,图的顶点,有向图,0,37,CON,CON
图的顶点是图结构中的基本元素，是组成图的节点，用于表示图中的对象或实体，在有向图或无向图中具有标识作用且与边相关,图的顶点,无向图,0,41,CON,CON
图的顶点是图结构中的基本元素，是组成图的节点，用于表示图中的对象或实体，在有向图或无向图中具有标识作用且与边相关,有向图,无向图,37,41,CON,CON
在树形结构中，一个节点若存在直接后继节点，那么该节点就是其直接后继节点的父节点,父节点,后继节点,36,16,CON,CON
在树形结构中，一个节点若存在直接后继节点，那么该节点就是其直接后继节点的父节点,父节点,后继节点,36,31,CON,CON
在树形结构中，一个节点若存在直接后继节点，那么该节点就是其直接后继节点的父节点,后继节点,后继节点,16,31,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
满二叉树是每一层节点数都达到最大的二叉树,二叉树,满二叉树,17,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
深度优先搜索的核心性质是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，通过这种方式遍历或搜索整个图或,深度优先搜索,路径,0,16,CON,CON
深度优先搜索的核心性质是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，通过这种方式遍历或搜索整个图或,深度优先搜索,路径,0,51,CON,CON
深度优先搜索的核心性质是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，通过这种方式遍历或搜索整个图或,深度优先搜索,遍历,0,60,CON,CON
深度优先搜索的核心性质是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，通过这种方式遍历或搜索整个图或,路径,路径,16,51,CON,CON
深度优先搜索的核心性质是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，通过这种方式遍历或搜索整个图或,路径,遍历,16,60,CON,CON
深度优先搜索的核心性质是沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，通过这种方式遍历或搜索整个图或,路径,遍历,51,60,CON,CON
集合具有确定性即给定一个集合，任何一个元素是否属于这个集合是确定的,集合,集合,12,27,CON,CON
集合具有确定性即给定一个集合，任何一个元素是否属于这个集合是确定的,集合,集合,12,0,CON,CON
集合具有确定性即给定一个集合，任何一个元素是否属于这个集合是确定的,集合,集合,27,0,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,排序,43,29,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,43,0,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,29,0,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子树，每个子树也是一棵树且具有递归性质,根节点,子树,17,39,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子树，每个子树也是一棵树且具有递归性质,根节点,递归,17,49,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子树，每个子树也是一棵树且具有递归性质,根节点,子树,17,34,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子树，每个子树也是一棵树且具有递归性质,子树,递归,39,49,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子树，每个子树也是一棵树且具有递归性质,子树,子树,39,34,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子树，每个子树也是一棵树且具有递归性质,递归,子树,49,34,CON,CON
图的边是连接图中两个顶点的线，它表示顶点之间的某种关系，且边具有方向或无方向之分，在有向图中边有明确的起始顶点,有向图,图的边,42,0,CON,CON
循环链表是一种首尾相连的链表结构,链表,循环链表,12,0,CON,CON
树的节点是包含数据以及指向子节点的链接的基本数据结构单元,树的节点,子节点,0,13,CON,CON
数据类型的核心特征是定义了一组值以及可施加于这些值的一组操作，不同的数据类型具有不同的取值范围和操作集合，它规定了数据在计算机中表示,数据类型,集合,0,50,CON,CON
数据类型的核心特征是定义了一组值以及可施加于这些值的一组操作，不同的数据类型具有不同的取值范围和操作集合，它规定了数据在计算机中表示,数据类型,数据类型,0,34,CON,CON
数据类型的核心特征是定义了一组值以及可施加于这些值的一组操作，不同的数据类型具有不同的取值范围和操作集合，它规定了数据在计算机中表示,集合,数据类型,50,34,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,查找,删除,27,24,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,查找,时间复杂度,27,56,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,查找,操作效率,27,0,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,查找,插入,27,21,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,删除,时间复杂度,24,56,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,删除,操作效率,24,0,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,删除,插入,24,21,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,时间复杂度,操作效率,56,0,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,时间复杂度,插入,56,21,CON,CON
操作效率的特点是指在数据结构中各种操作（如插入、删除、查找等）所花费的时间以及占用的空间等方面表现出的特性，包括时间复杂度和,操作效率,插入,0,21,CON,CON
栈是一种特殊的数据结构，其核心特征为后进先出，即最后进入栈中的元素会最先被取出，且只能在栈顶进行插入和删除操作,删除,插入,51,48,CON,CON
链表由节点组成，节点通过指针相连，数据存储灵活,指针,链表,12,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,排序,数组,23,34,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,排序,数组,23,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,排序,数组,23,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,排序,排序,23,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,排序,归并排序,23,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,数组,34,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,数组,34,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,排序,34,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,归并排序,34,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,数组,17,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,排序,17,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,归并排序,17,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,排序,10,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,数组,归并排序,10,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别进行排序后再合并成一个有序数组的排序算法,排序,归并排序,37,0,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,根节点,路径,6,18,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,树的高度,路径,0,18,CON,CON
父节点具有比子节点更高的层级关系且拥有子节点，是子节点的上一级节点并能对其进行管理或关联等操作,子节点,父节点,6,0,CON,CON
父节点具有比子节点更高的层级关系且拥有子节点，是子节点的上一级节点并能对其进行管理或关联等操作,子节点,子节点,6,19,CON,CON
父节点具有比子节点更高的层级关系且拥有子节点，是子节点的上一级节点并能对其进行管理或关联等操作,子节点,子节点,6,24,CON,CON
父节点具有比子节点更高的层级关系且拥有子节点，是子节点的上一级节点并能对其进行管理或关联等操作,父节点,子节点,0,19,CON,CON
父节点具有比子节点更高的层级关系且拥有子节点，是子节点的上一级节点并能对其进行管理或关联等操作,父节点,子节点,0,24,CON,CON
父节点具有比子节点更高的层级关系且拥有子节点，是子节点的上一级节点并能对其进行管理或关联等操作,子节点,子节点,19,24,CON,CON
叶子节点是树结构中没有子节点的节点，其特点的核心特征包括在树的最底层，没有分支延伸出去，是数据存储或操作的最终位置，代表树,叶子节点,子节点,0,11,CON,CON
叶子节点是树结构中没有子节点的节点，其特点的核心特征包括在树的最底层，没有分支延伸出去，是数据存储或操作的最终位置，代表树,叶子节点,树,0,60,CON,CON
叶子节点是树结构中没有子节点的节点，其特点的核心特征包括在树的最底层，没有分支延伸出去，是数据存储或操作的最终位置，代表树,子节点,树,11,60,CON,CON
线性结构的特点的核心性质是存在唯一的一个被称为“第一个”的数据元素且存在唯一的一个被称为“最后一个”的数据元素并且除第一个之外的数据元素均只有,数据元素,数据元素,64,51,CON,CON
线性结构的特点的核心性质是存在唯一的一个被称为“第一个”的数据元素且存在唯一的一个被称为“最后一个”的数据元素并且除第一个之外的数据元素均只有,数据元素,数据元素,64,29,CON,CON
线性结构的特点的核心性质是存在唯一的一个被称为“第一个”的数据元素且存在唯一的一个被称为“最后一个”的数据元素并且除第一个之外的数据元素均只有,数据元素,线性结构,64,0,CON,CON
线性结构的特点的核心性质是存在唯一的一个被称为“第一个”的数据元素且存在唯一的一个被称为“最后一个”的数据元素并且除第一个之外的数据元素均只有,数据元素,数据元素,51,29,CON,CON
线性结构的特点的核心性质是存在唯一的一个被称为“第一个”的数据元素且存在唯一的一个被称为“最后一个”的数据元素并且除第一个之外的数据元素均只有,数据元素,线性结构,51,0,CON,CON
线性结构的特点的核心性质是存在唯一的一个被称为“第一个”的数据元素且存在唯一的一个被称为“最后一个”的数据元素并且除第一个之外的数据元素均只有,数据元素,线性结构,29,0,CON,CON
递归基础的核心特征是存在一种最简单的情况，在此情况下递归调用不再继续，而是直接返回一个确定的结果，该结果能够终止递归过程,递归,递归,56,26,CON,CON
递归基础的核心特征是存在一种最简单的情况，在此情况下递归调用不再继续，而是直接返回一个确定的结果，该结果能够终止递归过程,递归,递归基础,56,0,CON,CON
递归基础的核心特征是存在一种最简单的情况，在此情况下递归调用不再继续，而是直接返回一个确定的结果，该结果能够终止递归过程,递归,递归基础,26,0,CON,CON
树的深度是从根节点开始自顶向下逐层累加至最远叶节点所经过的层数，其核心特征在于它体现了树中节点层次的最大数量，反映了树,根节点,树的深度,6,0,CON,CON
树的深度是从根节点开始自顶向下逐层累加至最远叶节点所经过的层数，其核心特征在于它体现了树中节点层次的最大数量，反映了树,根节点,树,6,58,CON,CON
树的深度是从根节点开始自顶向下逐层累加至最远叶节点所经过的层数，其核心特征在于它体现了树中节点层次的最大数量，反映了树,树的深度,树,0,58,CON,CON
连通图的核心特征是图中任意两个顶点之间都存在路径相连,连通图,路径,0,22,CON,CON
数组是由相同类型的数据元素按一定顺序排列而成的有限序列,数组,数据元素,0,9,CON,CON
非线性结构中数据元素之间的关系不呈线性关系,非线性结构,数据元素,0,6,CON,CON
二分查找是在有序数组中通过不断折半查找目标值的方法,数组,查找,8,17,CON,CON
二分查找是在有序数组中通过不断折半查找目标值的方法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断折半查找目标值的方法,查找,二分查找,17,0,CON,CON
递归基础是递归算法中最简单情况，在此情况下递归函数直接返回一个确定值而不再调用自身,递归,递归基础,5,0,CON,CON
邻接矩阵是表示图的一种方式，其特点的核心性质为对于有向图或无向图，矩阵中的元素表示对应顶点之间是否存在边，若存在则为,邻接矩阵,无向图,0,29,CON,CON
邻接矩阵是表示图的一种方式，其特点的核心性质为对于有向图或无向图，矩阵中的元素表示对应顶点之间是否存在边，若存在则为,邻接矩阵,有向图,0,25,CON,CON
邻接矩阵是表示图的一种方式，其特点的核心性质为对于有向图或无向图，矩阵中的元素表示对应顶点之间是否存在边，若存在则为,无向图,有向图,29,25,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而将给定元素序列排列成有序序列的排序方法,排序,比较排序,38,0,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,递归,数组,19,32,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,递归,数组,19,8,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,递归,数组,19,15,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,递归,时间复杂度,19,44,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,递归,排序,19,21,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,递归,空间复杂度,19,61,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,递归,归并排序,19,0,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,数组,32,8,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,数组,32,15,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,时间复杂度,32,44,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,排序,32,21,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,空间复杂度,32,61,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,归并排序,32,0,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,数组,8,15,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,时间复杂度,8,44,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,排序,8,21,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,空间复杂度,8,61,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,归并排序,8,0,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,时间复杂度,15,44,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,排序,15,21,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,空间复杂度,15,61,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,数组,归并排序,15,0,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,时间复杂度,排序,44,21,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,时间复杂度,空间复杂度,44,61,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,时间复杂度,归并排序,44,0,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,排序,空间复杂度,21,61,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,排序,归并排序,21,0,CON,CON
归并排序是一种将数组分成两个子数组分别递归排序后再合并成一个有序数组的稳定的分治算法，其时间复杂度为O(n log n)，空间复杂度,空间复杂度,归并排序,61,0,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,访问,58,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,广度优先搜索,58,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,访问,58,39,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,访问,58,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,广度优先搜索,15,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,访问,15,39,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,访问,15,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,广度优先搜索,访问,0,39,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,广度优先搜索,访问,0,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再访问距离为 1 的节点，以此类推，直到访问完所有可达,访问,访问,39,21,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其特点的核心性质,查找,查找,28,2,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其特点的核心性质,查找,遍历,28,49,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其特点的核心性质,查找,遍历,2,49,CON,CON
连通图的核心性质是图中任意两个顶点之间都存在路径相连,连通图,路径,0,22,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,逻辑结构,存储结构,3,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,逻辑结构,数据元素,3,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,数据元素,存储结构,9,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,数据元素,数据元素,9,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,存储结构,数据元素,28,36,CON,CON
存储结构的核心性质是数据元素及其关系在计算机存储器中的表示方式以及如何利用这种表示来高效地进行数据的存储、访问和修改等操作,存储结构,数据元素,0,10,CON,CON
存储结构的核心性质是数据元素及其关系在计算机存储器中的表示方式以及如何利用这种表示来高效地进行数据的存储、访问和修改等操作,存储结构,访问,0,53,CON,CON
存储结构的核心性质是数据元素及其关系在计算机存储器中的表示方式以及如何利用这种表示来高效地进行数据的存储、访问和修改等操作,数据元素,访问,10,53,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入,20,16,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,12,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,33,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,20,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,12,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,33,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,插入排序,16,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,12,33,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,12,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,33,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,查找,遍历,27,44,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,查找,数据元素,27,62,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,查找,数据元素,27,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,查找,顺序查找,27,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,遍历,数据元素,44,62,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,遍历,数据元素,44,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,遍历,顺序查找,44,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,数据元素,数据元素,62,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,数据元素,顺序查找,62,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的值进行比较，直到找到目标值或遍历完整个序列，其核心特征是逐个比较数据元素,数据元素,顺序查找,21,0,CON,CON
堆是一种特殊的数据结构，其核心性质为：对于最大堆，父节点的值大于或等于其子节点的值,堆,父节点,23,25,CON,CON
对于最小堆，父节点的值小于或等于其子节点的值,堆,父节点,4,6,CON,CON
队列的核心性质是先进先出即先进入队列的元素先离开队列,队列,队列,16,0,CON,CON
队列的核心性质是先进先出即先进入队列的元素先离开队列,队列,队列,16,24,CON,CON
队列的核心性质是先进先出即先进入队列的元素先离开队列,队列,队列,0,24,CON,CON
栈是一种后进先出（Last In First Out，LIFO）的数据结构，其操作主要包括入栈将元素添加到栈顶、出栈从栈顶移除元素以及获取,入栈,出栈,45,56,CON,CON
从起始节点出发沿一条路径深入探索直到无法继续再回溯找新路径,路径,路径,27,10,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,根节点,16,9,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,树的节点,16,0,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,父节点,16,25,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,子节点,16,42,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,树的节点,9,0,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,父节点,9,25,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,子节点,9,42,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,树的节点,父节点,0,25,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,树的节点,子节点,0,42,CON,CON
树的节点具有唯一的根节点且每个非根节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,父节点,子节点,25,42,CON,CON
叶子节点是数据结构中没有子节点的节点,子节点,叶子节点,12,0,CON,CON
单链表是一种由节点组成的线性数据结构，每个节点包含数据和指向下一节点的指针,指针,单链表,35,0,CON,CON
树中所有结点的度的最大值就是树的度，其中结点的度是指该结点拥有的子树的数目,子树,树的度,32,14,CON,CON
图的边的核心特征是连接图中的两个顶点，它描述了顶点之间的关系，通过边可以在图中建立起顶点之间的路径和连通性,路径,图的边,47,0,CON,CON
快速排序是通过一趟排序将数据分为两部分并递归排序,排序,递归,22,20,CON,CON
快速排序是通过一趟排序将数据分为两部分并递归排序,排序,排序,22,9,CON,CON
快速排序是通过一趟排序将数据分为两部分并递归排序,排序,快速排序,22,0,CON,CON
快速排序是通过一趟排序将数据分为两部分并递归排序,递归,排序,20,9,CON,CON
快速排序是通过一趟排序将数据分为两部分并递归排序,递归,快速排序,20,0,CON,CON
快速排序是通过一趟排序将数据分为两部分并递归排序,排序,快速排序,9,0,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,叶子节点,树的深度,9,25,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,叶子节点,路径,9,44,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,叶子节点,路径,9,16,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,叶子节点,根节点,9,41,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,叶子节点,根节点,9,53,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,叶子节点,根节点,9,3,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,树的深度,路径,25,44,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,树的深度,路径,25,16,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,树的深度,根节点,25,41,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,树的深度,根节点,25,53,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,树的深度,根节点,25,3,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,路径,路径,44,16,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,路径,根节点,44,41,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,路径,根节点,44,53,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,路径,根节点,44,3,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,路径,根节点,16,41,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,路径,根节点,16,53,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,路径,根节点,16,3,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,根节点,根节点,41,53,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,根节点,根节点,41,3,CON,CON
树中从根节点到最远叶子节点的最长路径上的节点数就是树的深度树中每个节点的深度是其到根节点路径上的节点数总和根节点深度,根节点,根节点,53,3,CON,CON
指针是一种变量，其值为内存地址，通过指针可以间接访问其所指向的内存位置，能灵活地对内存中的数据进行操作，具有高效性和灵活性，可用于,指针,指针,18,0,CON,CON
指针是一种变量，其值为内存地址，通过指针可以间接访问其所指向的内存位置，能灵活地对内存中的数据进行操作，具有高效性和灵活性，可用于,指针,访问,18,24,CON,CON
指针是一种变量，其值为内存地址，通过指针可以间接访问其所指向的内存位置，能灵活地对内存中的数据进行操作，具有高效性和灵活性，可用于,指针,访问,0,24,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,34,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,6,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,34,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,10,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,10,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,21,CON,CON
子节点是树结构中直接位于某一节点下方的节点，与父节点存在直接的层级关系且是父节点所连接的下一层级的节点,父节点,子节点,37,0,CON,CON
子节点是树结构中直接位于某一节点下方的节点，与父节点存在直接的层级关系且是父节点所连接的下一层级的节点,父节点,父节点,37,23,CON,CON
子节点是树结构中直接位于某一节点下方的节点，与父节点存在直接的层级关系且是父节点所连接的下一层级的节点,子节点,父节点,0,23,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,映射,查找,11,48,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,映射,哈希表,11,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,映射,删除,11,45,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,映射,哈希函数,11,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,映射,插入,11,42,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,查找,哈希表,48,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,查找,删除,48,45,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,查找,哈希函数,48,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,查找,插入,48,42,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,哈希表,删除,0,45,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,哈希表,哈希函数,0,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,哈希表,插入,0,42,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,删除,哈希函数,45,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,删除,插入,45,42,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，其核心特征包括能在平均常数时间内进行插入、删除和查找操作，具有较高的存储和检索效率,哈希函数,插入,5,42,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中所有数据元素按某种次序排列，且除第一个和最后一个数据元素外，每个元素都有唯一的前驱,数据元素,线性结构,54,0,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中所有数据元素按某种次序排列，且除第一个和最后一个数据元素外，每个元素都有唯一的前驱,数据元素,数据元素,54,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中所有数据元素按某种次序排列，且除第一个和最后一个数据元素外，每个元素都有唯一的前驱,数据元素,数据元素,54,32,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中所有数据元素按某种次序排列，且除第一个和最后一个数据元素外，每个元素都有唯一的前驱,线性结构,数据元素,0,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中所有数据元素按某种次序排列，且除第一个和最后一个数据元素外，每个元素都有唯一的前驱,线性结构,数据元素,0,32,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中所有数据元素按某种次序排列，且除第一个和最后一个数据元素外，每个元素都有唯一的前驱,数据元素,数据元素,7,32,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，其核心性质包括具有随机访问特性可,线性表,数据元素,20,38,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，其核心性质包括具有随机访问特性可,线性表,数据元素,20,25,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，其核心性质包括具有随机访问特性可,线性表,访问,20,63,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，其核心性质包括具有随机访问特性可,数据元素,数据元素,38,25,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，其核心性质包括具有随机访问特性可,数据元素,访问,38,63,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，其核心性质包括具有随机访问特性可,数据元素,访问,25,63,CON,CON
回溯法是一种通过尝试所有可能的解空间路径，利用深度优先搜索策略，在搜索过程中通过剪枝函数避免无效搜索，以找到满足特定条件的解或最优,回溯法,路径,0,18,CON,CON
回溯法是一种通过尝试所有可能的解空间路径，利用深度优先搜索策略，在搜索过程中通过剪枝函数避免无效搜索，以找到满足特定条件的解或最优,回溯法,深度优先搜索,0,23,CON,CON
回溯法是一种通过尝试所有可能的解空间路径，利用深度优先搜索策略，在搜索过程中通过剪枝函数避免无效搜索，以找到满足特定条件的解或最优,路径,深度优先搜索,18,23,CON,CON
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的,集合,集合,12,27,CON,CON
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的,集合,集合,12,0,CON,CON
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的,集合,集合,27,0,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,访问,27,44,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,图,27,9,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,遍历,27,61,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,广度优先搜索,27,0,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,访问,27,21,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,图,44,9,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,遍历,44,61,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,广度优先搜索,44,0,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,访问,访问,44,21,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,图,遍历,9,61,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,图,广度优先搜索,9,0,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,图,访问,9,21,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,遍历,广度优先搜索,61,0,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,遍历,访问,61,21,CON,CON
广度优先搜索是一种图搜索算法，按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历,广度优先搜索,访问,0,21,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,时间复杂度,19,53,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,插入,19,60,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,查找,19,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,删除,19,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,插入,53,60,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,哈希表,53,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,查找,53,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,删除,53,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,哈希函数,53,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,哈希表,60,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,查找,60,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,删除,60,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,哈希函数,60,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,查找,0,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,删除,0,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,哈希函数,0,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,查找,删除,65,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,查找,哈希函数,65,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,删除,哈希函数,62,13,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,叶子节点,22,38,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,满二叉树,22,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,二叉树,22,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,子节点,22,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,满二叉树,38,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,二叉树,38,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,子节点,38,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,二叉树,0,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,子节点,0,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,二叉树,子节点,7,30,CON,CON
回路是图中一条至少包含一条边且起点和终点相同的路径,路径,回路,23,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,18,41,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,41,0,CON,CON
树的高度是从根节点到最远叶子节点路径上的边数或节点数所表示的垂直距离，它体现了树的纵向层次深度，反映了树结构在垂直,路径,树的高度,16,0,CON,CON
树的高度是从根节点到最远叶子节点路径上的边数或节点数所表示的垂直距离，它体现了树的纵向层次深度，反映了树结构在垂直,路径,根节点,16,6,CON,CON
树的高度是从根节点到最远叶子节点路径上的边数或节点数所表示的垂直距离，它体现了树的纵向层次深度，反映了树结构在垂直,路径,叶子节点,16,12,CON,CON
树的高度是从根节点到最远叶子节点路径上的边数或节点数所表示的垂直距离，它体现了树的纵向层次深度，反映了树结构在垂直,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶子节点路径上的边数或节点数所表示的垂直距离，它体现了树的纵向层次深度，反映了树结构在垂直,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点路径上的边数或节点数所表示的垂直距离，它体现了树的纵向层次深度，反映了树结构在垂直,根节点,叶子节点,6,12,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心特征为有且仅有一个开始和一个终端节点，并且除了开始和终端节点外，每个节点都,线性结构,数据元素,0,7,CON,CON
指针的核心性质是其存储内存地址并可通过该地址间接访问和操作所指向的内存单元,指针,访问,0,24,CON,CON
迭代法是一种通过从一个初始估计出发，利用迭代公式逐步逼近问题精确解的方法其特点包括能将复杂问题转化为简单重复计算、可通过有限步骤得到近似,迭代法,迭代,0,20,CON,CON
哈希表的核心性质是对于不同的关键字可能得到同一哈希地址，即key1≠key2时，可能有Hash(key1)=Hash(key2)，并且哈希表通过哈希,哈希表,哈希表,67,0,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,集合,数组,10,41,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,集合,数组,10,0,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,集合,访问,10,33,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,集合,数据类型,10,23,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,数组,数组,41,0,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,数组,访问,41,33,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,数组,数据类型,41,23,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,数组,访问,0,33,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,数组,数据类型,0,23,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度在创建后通常是固定的，并且在内存中是连续,访问,数据类型,33,23,CON,CON
链表是由节点组成，节点包含数据及指向下一节点的指针,指针,链表,23,0,CON,CON
集合是由确定的、互不相同的对象所组成的整体这些对象称为集合的元素集合具有确定性、互异性和无序性确定性指对于一个给定的集合任何一个对象是否,集合,集合,32,27,CON,CON
集合是由确定的、互不相同的对象所组成的整体这些对象称为集合的元素集合具有确定性、互异性和无序性确定性指对于一个给定的集合任何一个对象是否,集合,集合,32,0,CON,CON
集合是由确定的、互不相同的对象所组成的整体这些对象称为集合的元素集合具有确定性、互异性和无序性确定性指对于一个给定的集合任何一个对象是否,集合,集合,32,58,CON,CON
集合是由确定的、互不相同的对象所组成的整体这些对象称为集合的元素集合具有确定性、互异性和无序性确定性指对于一个给定的集合任何一个对象是否,集合,集合,27,0,CON,CON
集合是由确定的、互不相同的对象所组成的整体这些对象称为集合的元素集合具有确定性、互异性和无序性确定性指对于一个给定的集合任何一个对象是否,集合,集合,27,58,CON,CON
集合是由确定的、互不相同的对象所组成的整体这些对象称为集合的元素集合具有确定性、互异性和无序性确定性指对于一个给定的集合任何一个对象是否,集合,集合,0,58,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,叶子节点,路径,21,48,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,叶子节点,路径,21,16,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,叶子节点,根节点,21,37,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,叶子节点,树的高度,21,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,叶子节点,根节点,21,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,路径,路径,48,16,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,路径,根节点,48,37,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,路径,树的高度,48,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,路径,根节点,48,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,路径,根节点,16,37,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,路径,树的高度,16,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,路径,根节点,16,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,根节点,树的高度,37,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,根节点,根节点,37,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目加1（若根节点为第0层则是最长路径上节点的最大,树的高度,根节点,0,6,CON,CON
树的查找特点是基于树的结构特性通过特定规则从根节点开始按路径逐步查找目标元素以确定其是否存在于树中,查找,查找,32,2,CON,CON
树的查找特点是基于树的结构特性通过特定规则从根节点开始按路径逐步查找目标元素以确定其是否存在于树中,查找,根节点,32,22,CON,CON
树的查找特点是基于树的结构特性通过特定规则从根节点开始按路径逐步查找目标元素以确定其是否存在于树中,查找,路径,32,28,CON,CON
树的查找特点是基于树的结构特性通过特定规则从根节点开始按路径逐步查找目标元素以确定其是否存在于树中,查找,根节点,2,22,CON,CON
树的查找特点是基于树的结构特性通过特定规则从根节点开始按路径逐步查找目标元素以确定其是否存在于树中,查找,路径,2,28,CON,CON
树的查找特点是基于树的结构特性通过特定规则从根节点开始按路径逐步查找目标元素以确定其是否存在于树中,根节点,路径,22,28,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,33,26,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,33,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,33,19,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,26,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,26,19,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,19,CON,CON
快速排序是对数组进行排序的一种算法，其核心性质是通过选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,数组,36,6,CON,CON
快速排序是对数组进行排序的一种算法，其核心性质是通过选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,快速排序,36,0,CON,CON
快速排序是对数组进行排序的一种算法，其核心性质是通过选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,排序,36,10,CON,CON
快速排序是对数组进行排序的一种算法，其核心性质是通过选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,快速排序,6,0,CON,CON
快速排序是对数组进行排序的一种算法，其核心性质是通过选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,数组,排序,6,10,CON,CON
快速排序是对数组进行排序的一种算法，其核心性质是通过选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分,快速排序,排序,0,10,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,61,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,61,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,13,0,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,删除,插入,14,11,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,遍历,24,45,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,查找,24,56,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,线性表,24,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,线性表,24,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,顺序查找,24,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,遍历,查找,45,56,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,遍历,线性表,45,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,遍历,线性表,45,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,遍历,顺序查找,45,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,线性表,56,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,线性表,56,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,查找,顺序查找,56,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,线性表,线性表,50,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,线性表,顺序查找,50,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表为止的查找方法,线性表,顺序查找,6,0,CON,CON
树中一个节点的子树个数称为该节点的度，而树的度是树中所有节点的度的最大值,子树,树的度,7,20,CON,CON
线性结构数据元素间存在一对一的线性关系,数据元素,线性结构,4,0,CON,CON
堆是一种特殊数据结构，父节点键值大于或小于子节点,子节点,父节点,21,11,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,排序,插入,20,16,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,排序,数组,20,52,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,排序,排序,20,12,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,排序,插入排序,20,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,插入,数组,16,52,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,插入,排序,16,12,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,插入,插入排序,16,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,数组,排序,52,12,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,数组,插入排序,52,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置，通过依次对每个元素进行这样的操作，最终使整个数组有序,排序,插入排序,12,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,尾节点,59,11,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,遍历,59,48,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,链表,59,37,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,指针,59,62,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,指针,59,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,头节点,59,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,链表,59,56,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,循环链表,59,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,遍历,11,48,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,链表,11,37,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,指针,11,62,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,指针,11,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,头节点,11,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,链表,11,56,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,尾节点,循环链表,11,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,遍历,链表,48,37,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,遍历,指针,48,62,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,遍历,指针,48,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,遍历,头节点,48,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,遍历,链表,48,56,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,遍历,循环链表,48,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,链表,指针,37,62,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,链表,指针,37,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,链表,头节点,37,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,链表,链表,37,56,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,链表,循环链表,37,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,指针,指针,62,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,指针,头节点,62,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,指针,链表,62,56,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,指针,循环链表,62,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,指针,头节点,15,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,指针,链表,15,56,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,指针,循环链表,15,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,头节点,链表,20,56,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,头节点,循环链表,20,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中各个节点可以依次遍历，不存在常规链表中尾节点指针域为空,链表,循环链表,56,0,CON,CON
简单排序是对数据按特定规则依次比较交换位置的排序方法,排序,简单排序,22,0,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,堆排序,堆,0,40,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,堆排序,排序,0,29,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,堆排序,排序,0,21,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,堆排序,堆,0,8,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,堆,排序,40,29,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,堆,排序,40,21,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,堆,堆,40,8,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,排序,排序,29,21,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,排序,堆,29,8,CON,CON
堆排序是一种利用堆这种数据结构所设计的一种排序算法，它将待排序序列构造成一个最大堆，依次将堆顶元素与堆的最后一个元素交换，,排序,堆,21,8,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该地址所指向的内存单元中的数据，具有灵活高效地实现数据间,指针,访问,0,30,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,子节点,38,48,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,根节点,48,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,子节点,48,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,根节点,48,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有自己的子节点，以此类推形成层次结构,子节点,根节点,32,17,CON,CON
线性结构是一种数据结构，其核心特征为数据元素之间存在一对一的线性关系，即除了第一个元素外，每个元素有且仅有一个前驱,数据元素,线性结构,18,0,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,线性表,表头,0,51,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,线性表,数据元素,0,30,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,线性表,数据类型,0,8,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,线性表,表尾,0,56,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,线性表,数据元素,0,20,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,表头,数据元素,51,30,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,表头,数据类型,51,8,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,表头,表尾,51,56,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,表头,数据元素,51,20,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,数据元素,数据类型,30,8,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,数据元素,表尾,30,56,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,数据元素,数据元素,30,20,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,数据类型,表尾,8,56,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,数据类型,数据元素,8,20,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，数据元素之间存在一对一的线性关系，有唯一的表头元素和表尾元素，,表尾,数据元素,56,20,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,路径,6,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,路径,叶子节点,21,12,CON,CON
简单排序是对数据序列通过比较和交换等操作逐步将其排列成有序状态的排序方法,排序,简单排序,32,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等各种含义，用于描述图中顶点之间关系的,图,加权图,6,0,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点通过特定关系相连且在树的层级结构中有其特定位置和作用等特点,父节点,父节点,13,25,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点通过特定关系相连且在树的层级结构中有其特定位置和作用等特点,父节点,子节点,13,0,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点通过特定关系相连且在树的层级结构中有其特定位置和作用等特点,父节点,子节点,25,0,CON,CON
在有序数组中通过不断折半查找目标值的方法,查找,数组,12,3,CON,CON
根节点是树结构中没有前驱节点且唯一的特殊节点,根节点,前驱节点,0,10,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,访问,访问,20,7,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,访问,删除,20,52,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,访问,操作效率,20,54,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,访问,插入,20,49,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,访问,删除,7,52,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,访问,操作效率,7,54,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,访问,插入,7,49,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,删除,操作效率,52,54,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,删除,插入,52,49,CON,CON
顺序表具有随机访问特性即可以通过下标直接访问元素，存储密度高，逻辑上相邻的元素在物理存储上也相邻，插入和删除操作效率低，需要移动大量,操作效率,插入,54,49,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,指针,头节点,47,59,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,指针,线性表,47,11,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,指针,数据元素,47,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,指针,单链表,47,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,头节点,线性表,59,11,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,头节点,数据元素,59,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,头节点,单链表,59,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,线性表,数据元素,11,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素以及指向下一个节点的指针，其中第一个节点称为头节点，最后一个节点,数据元素,单链表,33,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,线性表,25,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,线性表,41,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,链表,37,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,37,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,37,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,0,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,线性表,存储结构,50,20,CON,CON
归并排序是将数组分治后合并有序子数组的排序算法,排序,数组,19,16,CON,CON
归并排序是将数组分治后合并有序子数组的排序算法,排序,数组,19,6,CON,CON
归并排序是将数组分治后合并有序子数组的排序算法,排序,归并排序,19,0,CON,CON
归并排序是将数组分治后合并有序子数组的排序算法,数组,数组,16,6,CON,CON
归并排序是将数组分治后合并有序子数组的排序算法,数组,归并排序,16,0,CON,CON
归并排序是将数组分治后合并有序子数组的排序算法,数组,归并排序,6,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,叶子节点,根节点,12,32,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,叶子节点,路径,12,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,叶子节点,树的深度,12,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,叶子节点,根节点,12,6,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,根节点,路径,32,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,根节点,树的深度,32,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,根节点,根节点,32,6,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,路径,树的深度,21,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,路径,根节点,21,6,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数体现的，根节点深度为0，每向下一层深度加1，且不同节点到根,树的深度,根节点,0,6,CON,CON
队列是一种先进先出、按顺序存储和操作数据的线性结构,线性结构,队列,21,0,CON,CON
二叉树是一种每个节点最多有两个子节点的树形数据结构,子节点,二叉树,15,0,CON,CON
树的查找特点是基于树的结构特性通过特定路径在树中搜索特定元素以确定其是否存在及位置,查找,路径,2,19,CON,CON
比较排序是一种排序算法，其核心特征是通过元素之间的比较来确定元素的相对顺序，从而将待排序序列转换为有序序列,排序,排序,42,7,CON,CON
比较排序是一种排序算法，其核心特征是通过元素之间的比较来确定元素的相对顺序，从而将待排序序列转换为有序序列,排序,比较排序,42,0,CON,CON
比较排序是一种排序算法，其核心特征是通过元素之间的比较来确定元素的相对顺序，从而将待排序序列转换为有序序列,排序,比较排序,7,0,CON,CON
广度优先搜索按层次依次扩展节点以遍历图或树结构,广度优先搜索,遍历,0,16,CON,CON
二叉树是每个节点最多有两个子树的树结构,子树,二叉树,13,0,CON,CON
算法效率是指算法执行所需要的计算机资源量，包括时间资源和空间资源，衡量算法效率主要通过时间复杂度和空间复杂度来体现,时间复杂度,空间复杂度,43,49,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,遍历,28,4,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,二叉树,28,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,二叉树,28,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,访问,访问,28,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,遍历,二叉树,4,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,遍历,二叉树,4,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,遍历,访问,4,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,二叉树,二叉树,0,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,二叉树,访问,0,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作过程,二叉树,访问,17,15,CON,CON
在树形结构中，若存在一个节点，它有一个或多个子节点，那么这个节点就是这些子节点的父节点,子节点,父节点,36,40,CON,CON
在树形结构中，若存在一个节点，它有一个或多个子节点，那么这个节点就是这些子节点的父节点,子节点,子节点,36,22,CON,CON
在树形结构中，若存在一个节点，它有一个或多个子节点，那么这个节点就是这些子节点的父节点,父节点,子节点,40,22,CON,CON
图的边是连接图中两个顶点的线其具有方向或无方向且有权值或无权值不同类型的图边的具体特点根据图的类型如无向图边,无向图,图的边,50,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、丰富树的层次结构以及在树的遍历等操作中按特定顺序,父节点,父节点,9,32,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、丰富树的层次结构以及在树的遍历等操作中按特定顺序,父节点,遍历,9,49,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、丰富树的层次结构以及在树的遍历等操作中按特定顺序,父节点,子节点,9,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、丰富树的层次结构以及在树的遍历等操作中按特定顺序,父节点,遍历,32,49,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、丰富树的层次结构以及在树的遍历等操作中按特定顺序,父节点,子节点,32,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、丰富树的层次结构以及在树的遍历等操作中按特定顺序,遍历,子节点,49,0,CON,CON
父节点是在树形结构中，直接与一个或多个子节点相连且位于子节点之上的节点,父节点,子节点,0,27,CON,CON
父节点是在树形结构中，直接与一个或多个子节点相连且位于子节点之上的节点,父节点,子节点,0,19,CON,CON
父节点是在树形结构中，直接与一个或多个子节点相连且位于子节点之上的节点,子节点,子节点,27,19,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
邻接矩阵是表示顶点之间相邻关系的矩阵，若图中有n个顶点，则邻接矩阵是一个n×n的矩阵，矩阵中元素的值表示对应顶点之间是否有,邻接矩阵,邻接矩阵,0,29,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,线性表,30,11,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,头节点,30,47,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,指针,30,34,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,单链表,30,0,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,访问,30,51,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,数据元素,30,58,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,链表,30,55,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,线性表,头节点,11,47,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,线性表,指针,11,34,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,线性表,访问,11,51,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,线性表,数据元素,11,58,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,线性表,链表,11,55,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,头节点,指针,47,34,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,头节点,单链表,47,0,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,头节点,访问,47,51,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,头节点,数据元素,47,58,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,头节点,链表,47,55,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,单链表,34,0,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,访问,34,51,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,数据元素,34,58,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,指针,链表,34,55,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,单链表,访问,0,51,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,单链表,数据元素,0,58,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,单链表,链表,0,55,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,访问,数据元素,51,58,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,访问,链表,51,55,CON,CON
单链表是一种链式存储的线性表，其特点包括每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表，数据元素的,数据元素,链表,58,55,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列,数据类型,线性表,8,0,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列,数据类型,数据元素,8,20,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列,线性表,数据元素,0,20,CON,CON
线性查找的核心特征是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列为止,遍历,查找,41,2,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,后继节点,指针,49,58,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,后继节点,指针,49,31,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,后继节点,前驱节点,49,39,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,后继节点,链表,49,62,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,后继节点,双向链表,49,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,指针,指针,58,31,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,指针,前驱节点,58,39,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,指针,链表,58,62,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,指针,双向链表,58,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,指针,前驱节点,31,39,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,指针,链表,31,62,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,指针,双向链表,31,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,前驱节点,链表,39,62,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,前驱节点,双向链表,39,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，另一个指向后继节点，通过这些指针使得链表中的节点,链表,双向链表,62,0,CON,CON
树是一种包含根节点且节点间有层次关系的非线性结构,根节点,非线性结构,6,19,CON,CON
图中任意两点都存在路径相连的图是连通图,路径,连通图,9,16,CON,CON
回路是在图中从一个顶点出发，沿边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复,路径,路径,35,32,CON,CON
回路是在图中从一个顶点出发，沿边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复,路径,回路,35,0,CON,CON
回路是在图中从一个顶点出发，沿边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复,路径,回路,32,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,递归,25,40,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,递归,25,23,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,25,3,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,左子树,25,44,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,根节点,25,19,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,访问,25,48,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,根节点,25,50,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,访问,25,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,二叉树,25,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,25,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,访问,25,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,25,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,递归,25,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,左子树,25,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,右子树,25,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,递归,40,23,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,遍历,40,3,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,左子树,40,44,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,根节点,40,19,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,访问,40,48,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,根节点,40,50,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,访问,40,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,二叉树,40,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,遍历,40,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,访问,40,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,遍历,40,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,递归,40,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,左子树,40,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,右子树,40,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,遍历,23,3,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,左子树,23,44,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,根节点,23,19,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,访问,23,48,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,根节点,23,50,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,访问,23,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,二叉树,23,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,遍历,23,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,访问,23,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,遍历,23,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,递归,23,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,左子树,23,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,右子树,23,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,左子树,3,44,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,根节点,3,19,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,访问,3,48,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,根节点,3,50,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,访问,3,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,二叉树,3,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,遍历,3,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,访问,3,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,遍历,3,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,递归,3,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,左子树,3,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,右子树,3,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,根节点,44,19,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,访问,44,48,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,根节点,44,50,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,访问,44,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,二叉树,44,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,遍历,44,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,访问,44,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,遍历,44,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,递归,44,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,左子树,44,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,右子树,44,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,访问,19,48,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,根节点,19,50,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,访问,19,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,二叉树,19,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,遍历,19,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,访问,19,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,遍历,19,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,递归,19,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,左子树,19,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,右子树,19,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,根节点,48,50,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,访问,48,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,二叉树,48,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,48,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,访问,48,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,48,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,递归,48,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,左子树,48,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,右子树,48,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,访问,50,17,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,二叉树,50,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,遍历,50,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,访问,50,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,遍历,50,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,递归,50,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,左子树,50,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,根节点,右子树,50,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,二叉树,17,0,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,17,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,访问,17,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,17,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,递归,17,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,左子树,17,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,右子树,17,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,二叉树,遍历,0,37,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,二叉树,访问,0,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,二叉树,遍历,0,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,二叉树,递归,0,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,二叉树,左子树,0,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,二叉树,右子树,0,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,访问,37,42,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,遍历,37,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,递归,37,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,左子树,37,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,右子树,37,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,遍历,42,14,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,递归,42,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,左子树,42,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,访问,右子树,42,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,递归,14,55,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,左子树,14,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,遍历,右子树,14,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,左子树,55,27,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,递归,右子树,55,31,CON,CON
二叉树遍历的核心性质包括前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子树再访问根节点最后递归,左子树,右子树,27,31,CON,CON
线性结构的核心性质是数据元素之间存在一对一的线性关系，有且仅有一个开始和一个终端元素，除开始和终端元素外，每个元素有且仅有一个前驱和,线性结构,数据元素,0,10,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,叶子节点,路径,21,16,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,叶子节点,树的高度,21,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,叶子节点,根节点,21,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,路径,树的高度,16,0,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,路径,根节点,16,6,CON,CON
树的高度是从根节点开始，沿着最长路径到最远叶子节点所经过的边的数目,树的高度,根节点,0,6,CON,CON
二叉树遍历按特定顺序访问节点以完整呈现树结构,遍历,二叉树,3,0,CON,CON
二叉树遍历按特定顺序访问节点以完整呈现树结构,遍历,访问,3,10,CON,CON
二叉树遍历按特定顺序访问节点以完整呈现树结构,二叉树,访问,0,10,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,连通图,有向图,0,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,连通图,路径,0,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,连通图,路径,0,43,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,连通图,无向图,0,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,有向图,路径,27,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,有向图,路径,27,43,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,有向图,无向图,27,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,路径,路径,21,43,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,路径,无向图,21,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径相连，在有向图中任意一对顶点间都存在有向路径相互可达的图,路径,无向图,43,6,CON,CON
栈是一种后进先出的数据结构，其核心特征是元素的插入和删除操作都在同一端进行，即栈顶，新元素总是被添加到栈顶，而删除,插入,删除,23,55,CON,CON
栈是一种后进先出的数据结构，其核心特征是元素的插入和删除操作都在同一端进行，即栈顶，新元素总是被添加到栈顶，而删除,插入,删除,23,26,CON,CON
栈是一种后进先出的数据结构，其核心特征是元素的插入和删除操作都在同一端进行，即栈顶，新元素总是被添加到栈顶，而删除,删除,删除,55,26,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,遍历,访问,59,15,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,遍历,访问,59,42,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,遍历,广度优先搜索,59,0,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,遍历,访问,59,25,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,访问,访问,15,42,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,访问,广度优先搜索,15,0,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,访问,访问,15,25,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,访问,广度优先搜索,42,0,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,访问,访问,42,25,CON,CON
广度优先搜索是一种按照层次依次访问图或树中节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直至遍历,广度优先搜索,访问,0,25,CON,CON
数据的物理结构是指数据在计算机存储器中的存储方式包括数据元素的存储及其关系的表示它具体体现为数据元素在存储设备上的存储布局以及数据元素之间关系,物理结构,数据元素,3,46,CON,CON
数据的物理结构是指数据在计算机存储器中的存储方式包括数据元素的存储及其关系的表示它具体体现为数据元素在存储设备上的存储布局以及数据元素之间关系,物理结构,数据元素,3,63,CON,CON
数据的物理结构是指数据在计算机存储器中的存储方式包括数据元素的存储及其关系的表示它具体体现为数据元素在存储设备上的存储布局以及数据元素之间关系,物理结构,数据元素,3,26,CON,CON
数据的物理结构是指数据在计算机存储器中的存储方式包括数据元素的存储及其关系的表示它具体体现为数据元素在存储设备上的存储布局以及数据元素之间关系,数据元素,数据元素,46,63,CON,CON
数据的物理结构是指数据在计算机存储器中的存储方式包括数据元素的存储及其关系的表示它具体体现为数据元素在存储设备上的存储布局以及数据元素之间关系,数据元素,数据元素,46,26,CON,CON
数据的物理结构是指数据在计算机存储器中的存储方式包括数据元素的存储及其关系的表示它具体体现为数据元素在存储设备上的存储布局以及数据元素之间关系,数据元素,数据元素,63,26,CON,CON
完全二叉树是这样一种二叉树，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最底层节点都集中在该层最左边的若干,二叉树,完全二叉树,10,0,CON,CON
单链表是一种由节点组成的线性数据结构每个节点包含数据和指向下一节点的指针,指针,单链表,34,0,CON,CON
树中没有子节点的节点就是叶子节点,子节点,叶子节点,4,12,CON,CON
迭代法的核心性质是通过从一个初始估计值开始，利用某种迭代公式不断重复计算，逐步逼近问题的精确解,迭代法,迭代,0,26,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,数据元素,非线性结构,12,0,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,数据元素,数据元素,12,39,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,数据元素,线性结构,12,33,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,数据元素,非线性结构,12,56,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,非线性结构,数据元素,0,39,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,非线性结构,线性结构,0,33,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,非线性结构,非线性结构,0,56,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,数据元素,线性结构,39,33,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,数据元素,非线性结构,39,56,CON,CON
非线性结构的核心特征是其数据元素之间存在一对多或多对多的关系，不像线性结构那样数据元素之间呈现一对一的线性关系，非线性结构中元素的排列不,线性结构,非线性结构,33,56,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,左子树,右子树,11,30,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,左子树,二叉搜索树,11,0,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,左子树,根节点,11,43,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,左子树,子树,11,52,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,左子树,根节点,11,24,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,右子树,二叉搜索树,30,0,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,右子树,根节点,30,43,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,右子树,子树,30,52,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,右子树,根节点,30,24,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,二叉搜索树,根节点,0,43,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,二叉搜索树,子树,0,52,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,二叉搜索树,根节点,0,24,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,根节点,子树,43,52,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,根节点,根节点,43,24,CON,CON
二叉搜索树的核心性质为左子树上所有节点的值均小于根节点的值且右子树上所有节点的值均大于根节点的值，其左右子树也分别为二叉搜索,子树,根节点,52,24,CON,CON
将未排序数据插入已排序序列的合适位置进行排序,插入,排序,6,2,CON,CON
将未排序数据插入已排序序列的合适位置进行排序,插入,排序,6,20,CON,CON
将未排序数据插入已排序序列的合适位置进行排序,插入,排序,6,9,CON,CON
将未排序数据插入已排序序列的合适位置进行排序,排序,排序,2,20,CON,CON
将未排序数据插入已排序序列的合适位置进行排序,排序,排序,2,9,CON,CON
将未排序数据插入已排序序列的合适位置进行排序,排序,排序,20,9,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆排序,堆,0,36,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆排序,堆,0,58,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆,排序,36,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆,堆,36,58,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆,堆,36,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,排序,堆,14,58,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,排序,堆,14,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据序列构建成一个堆，然后通过不断交换堆顶元素与末尾元素并调整堆来实现,堆,堆,58,8,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式,物理结构,数据元素,3,24,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式,物理结构,数据元素,3,35,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式,数据元素,数据元素,24,35,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中至少包含一条边,路径,路径,38,35,CON,CON
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中至少包含一条边,路径,回路,38,0,CON,CON
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到起始顶点的路径且路径中至少包含一条边,路径,回路,35,0,CON,CON
堆排序是利用堆结构特性进行排序的算法,排序,堆排序,13,0,CON,CON
堆排序是利用堆结构特性进行排序的算法,排序,堆,13,6,CON,CON
堆排序是利用堆结构特性进行排序的算法,堆排序,堆,0,6,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，处于父节点之下，是树形结构等数据结构中父节点进一步细分或延伸出来的节点，具有继承,父节点,父节点,43,26,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，处于父节点之下，是树形结构等数据结构中父节点进一步细分或延伸出来的节点，具有继承,父节点,父节点,43,11,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，处于父节点之下，是树形结构等数据结构中父节点进一步细分或延伸出来的节点，具有继承,父节点,子节点,43,0,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，处于父节点之下，是树形结构等数据结构中父节点进一步细分或延伸出来的节点，具有继承,父节点,父节点,26,11,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，处于父节点之下，是树形结构等数据结构中父节点进一步细分或延伸出来的节点，具有继承,父节点,子节点,26,0,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，处于父节点之下，是树形结构等数据结构中父节点进一步细分或延伸出来的节点，具有继承,父节点,子节点,11,0,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,前驱节点,父节点,25,52,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,前驱节点,前驱节点,25,31,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,前驱节点,父节点,25,0,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,前驱节点,根节点,25,56,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,父节点,前驱节点,52,31,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,父节点,父节点,52,0,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,父节点,根节点,52,56,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,前驱节点,父节点,31,0,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,前驱节点,根节点,31,56,CON,CON
父节点的核心性质是在树形结构中，一个节点存在直接的前驱节点，该前驱节点即为其父节点，且一个节点只能有一个父节点（根节点除外，,父节点,根节点,0,56,CON,CON
迭代法是一种不断用变量的旧值递推新值的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下一次,迭代,递推,47,14,CON,CON
迭代法是一种不断用变量的旧值递推新值的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下一次,迭代,迭代法,47,0,CON,CON
迭代法是一种不断用变量的旧值递推新值的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来计算下一次,递推,迭代法,14,0,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长路径上的边数或节点数（取决于具体定义方式），其核心特征为体现从根到,叶子节点,路径,15,25,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长路径上的边数或节点数（取决于具体定义方式），其核心特征为体现从根到,叶子节点,树的高度,15,0,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长路径上的边数或节点数（取决于具体定义方式），其核心特征为体现从根到,叶子节点,根节点,15,6,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长路径上的边数或节点数（取决于具体定义方式），其核心特征为体现从根到,路径,树的高度,25,0,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长路径上的边数或节点数（取决于具体定义方式），其核心特征为体现从根到,路径,根节点,25,6,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长路径上的边数或节点数（取决于具体定义方式），其核心特征为体现从根到,树的高度,根节点,0,6,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,二叉树,遍历,16,3,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,二叉树,遍历,16,38,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,二叉树,遍历,16,48,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,二叉树,二叉树,16,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,二叉树,访问,16,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,遍历,3,38,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,遍历,3,48,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,访问,3,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,遍历,38,48,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,二叉树,38,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,访问,38,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,二叉树,48,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,遍历,访问,48,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次的操作，包括前序遍历（根左右）、中序遍历（左根右）、后,二叉树,访问,0,14,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
二分查找是在有序数组中通过不断二分区间来定位目标值,数组,二分查找,8,0,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,根节点,51,22,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,子节点,51,33,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,根节点,51,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,子节点,51,39,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,子节点,22,33,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,根节点,22,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,子节点,22,39,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,根节点,33,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,子节点,33,39,CON,CON
树是一种非线性的数据结构，它有一个根节点，且根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,子节点,17,39,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值，且图中的顶点个数可以为零个或,集合,集合,14,5,CON,CON
邻接矩阵是用于表示图的一种矩阵，其核心特征为若图中有n个顶点，则邻接矩阵是一个n×n的方阵，矩阵中元素的值表示对应顶点,邻接矩阵,邻接矩阵,0,32,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,二叉树,根节点,51,55,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,二叉树,子树,51,17,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,二叉树,二叉树,51,0,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,二叉树,子树,51,12,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,根节点,子树,55,17,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,根节点,二叉树,55,0,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,根节点,子树,55,12,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,子树,二叉树,17,0,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,子树,子树,17,12,CON,CON
二叉树每个节点最多有两棵子树，并且子树有左右之分，其次序不能颠倒，它可以为空树，空树没有任何节点，非空二叉树由根节点,二叉树,子树,0,12,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,数组,23,34,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,数组,23,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,数组,23,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,排序,23,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,递归,23,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,归并排序,23,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,数组,34,17,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,数组,34,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,排序,34,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,递归,34,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,归并排序,34,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,数组,17,10,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,排序,17,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,递归,17,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,归并排序,17,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,排序,10,37,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,递归,10,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,数组,归并排序,10,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,递归,37,21,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,排序,归并排序,37,0,CON,CON
归并排序是将一个无序数组分成两个子数组分别递归排序后再合并成一个有序数组的排序算法,递归,归并排序,21,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
抽象数据类型的核心特征是将数据和操作数据的方法封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注抽象数据类型所提供的,抽象数据类型,抽象数据类型,0,60,CON,CON
链表是由节点组成通过指针相连的线性数据结构,链表,指针,0,10,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,子节点,14,52,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,指针,14,18,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,根节点,14,21,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,树的节点,14,0,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,前驱节点,14,37,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,前驱节点,14,26,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,数据元素,14,6,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,指针,52,18,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,根节点,52,21,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,树的节点,52,0,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,前驱节点,52,37,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,前驱节点,52,26,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,子节点,数据元素,52,6,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,指针,根节点,18,21,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,指针,树的节点,18,0,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,指针,前驱节点,18,37,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,指针,前驱节点,18,26,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,指针,数据元素,18,6,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,根节点,树的节点,21,0,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,根节点,前驱节点,21,37,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,根节点,前驱节点,21,26,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,根节点,数据元素,21,6,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,树的节点,前驱节点,0,37,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,树的节点,前驱节点,0,26,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,树的节点,数据元素,0,6,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,前驱节点,前驱节点,37,26,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,前驱节点,数据元素,37,6,CON,CON
树的节点包含数据元素以及指向子节点的指针且根节点没有前驱节点其余节点有唯一前驱节点每个节点可有零个或多个子节点,前驱节点,数据元素,26,6,CON,CON
回路是在电路中电流能够循环流动的闭合路径,回路,路径,0,18,CON,CON
回溯法是一种通过尝试所有可能的解路径并在发现不符合条件时退回上一步继续尝试来求解问题的算法策略，其基础在于按照深度优先策略对问题的解,回溯法,路径,0,16,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
邻接矩阵是一种表示图的方式，其特点为用一个二维数组来存储图中顶点之间的邻接关系，矩阵中元素的值表示对应顶点间是否有边相连,邻接矩阵,数组,0,23,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,33,26,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,33,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,33,19,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,26,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,26,19,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,19,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,回溯法,路径,0,58,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,回溯法,递归,0,29,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,回溯法,树,0,37,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,回溯法,深度优先搜索,0,21,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,路径,递归,58,29,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,路径,树,58,37,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,路径,深度优先搜索,58,21,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,递归,树,29,37,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,递归,深度优先搜索,29,21,CON,CON
回溯法是一种通过系统地尝试所有可能的解，以深度优先搜索方式递归地构建解空间树，并在搜索过程中通过剪枝策略避免无效搜索路径，从而找到,树,深度优先搜索,37,21,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入,23,11,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,排序,23,7,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,排序,23,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入排序,23,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,插入,排序,11,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,排序,7,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入排序,14,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,查找,映射,28,11,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,查找,时间复杂度,28,53,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,查找,插入,28,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,查找,删除,28,34,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,查找,哈希表,28,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,查找,哈希函数,28,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,映射,时间复杂度,11,53,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,映射,插入,11,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,映射,删除,11,34,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,映射,哈希表,11,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,映射,哈希函数,11,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,时间复杂度,插入,53,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,时间复杂度,删除,53,34,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,时间复杂度,哈希表,53,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,时间复杂度,哈希函数,53,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,插入,删除,31,34,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,插入,哈希表,31,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,插入,哈希函数,31,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,删除,哈希表,34,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,删除,哈希函数,34,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储数据，具有快速查找、插入和删除的特点，能在平均情况下以接近常数的时间复杂度完成这些操作，并且,哈希表,哈希函数,0,5,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,61,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,61,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,13,0,CON,CON
堆排序的核心性质是堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶堆），并且堆是一种,堆排序,堆,0,54,CON,CON
数据的物理结构的特点的核心性质包括数据元素在计算机中的存储方式有顺序存储、链式存储等，顺序存储是将数据元素依次存放在连续的存储单元中，,物理结构,数据元素,3,49,CON,CON
数据的物理结构的特点的核心性质包括数据元素在计算机中的存储方式有顺序存储、链式存储等，顺序存储是将数据元素依次存放在连续的存储单元中，,物理结构,数据元素,3,17,CON,CON
数据的物理结构的特点的核心性质包括数据元素在计算机中的存储方式有顺序存储、链式存储等，顺序存储是将数据元素依次存放在连续的存储单元中，,数据元素,数据元素,49,17,CON,CON
邻接矩阵是用来表示图的一种矩阵，其中行和列对应图的顶点，矩阵元素的值表示对应顶点之间是否有边相连，若有边相连则值为1,邻接矩阵,图的顶点,0,23,CON,CON
图是由顶点集合及顶点间边集合构成的数据结构,集合,集合,12,5,CON,CON
指针是存储变量内存地址，能间接访问和修改数据的变量,指针,访问,0,15,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的目标元素进行比较，直到找到目标元素或遍历完整个数据序列为止,遍历,查找,51,30,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的目标元素进行比较，直到找到目标元素或遍历完整个数据序列为止,遍历,顺序查找,51,0,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的目标元素进行比较，直到找到目标元素或遍历完整个数据序列为止,查找,顺序查找,30,0,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数,树的深度,叶子节点,0,23,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数,树的深度,根节点,0,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的层数,叶子节点,根节点,23,6,CON,CON
简单排序是对数据序列按特定规则依次比较和交换元素位置以使其有序的排序方式,排序,简单排序,32,0,CON,CON
单链表由节点组成，每个节点指向下一节点形成线性结构,线性结构,单链表,21,0,CON,CON
回路是在电路中电流能够依次通过各元件形成的闭合路径,路径,回路,23,0,CON,CON
堆排序是利用堆结构进行排序，将数据调整为堆再提取元素,堆排序,堆,0,6,CON,CON
堆排序是利用堆结构进行排序，将数据调整为堆再提取元素,堆排序,排序,0,11,CON,CON
堆排序是利用堆结构进行排序，将数据调整为堆再提取元素,堆,排序,6,11,CON,CON
满二叉树是除叶子外每个节点都有两个子节点的二叉树,二叉树,子节点,21,17,CON,CON
满二叉树是除叶子外每个节点都有两个子节点的二叉树,二叉树,满二叉树,21,0,CON,CON
满二叉树是除叶子外每个节点都有两个子节点的二叉树,子节点,满二叉树,17,0,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在原序列中的相对先后顺序和经过某种操作后在新序列中的相对先后顺序保持一致，则该数据结构具有稳定性,数据元素,稳定性,18,67,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在原序列中的相对先后顺序和经过某种操作后在新序列中的相对先后顺序保持一致，则该数据结构具有稳定性,数据元素,稳定性,18,0,CON,CON
稳定性是指在数据结构中，若两个相等的数据元素在原序列中的相对先后顺序和经过某种操作后在新序列中的相对先后顺序保持一致，则该数据结构具有稳定性,稳定性,稳定性,67,0,CON,CON
树的查找是基于树的层次结构，从根节点开始，根据节点间的父子关系，按特定规则逐步比较目标值与节点值，以确定目标值是否存在于,根节点,查找,15,2,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,叶子节点,树的深度,17,0,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,叶子节点,根节点,17,11,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,叶子节点,路径,17,26,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,树的深度,根节点,0,11,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,树的深度,路径,0,26,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,根节点,路径,11,26,CON,CON
叶子节点没有子节点,叶子节点,子节点,0,6,CON,CON
回路的核心特征是其起点和终点为同一节点且存在一条不重复经过相同节点的路径可从起点回到该起点,回路,路径,0,34,CON,CON
二叉搜索树中任意节点的左子树中的所有节点的值均小于该节点的值且右子树中的所有节点的值均大于该节点的值,右子树,二叉搜索树,31,0,CON,CON
二叉搜索树中任意节点的左子树中的所有节点的值均小于该节点的值且右子树中的所有节点的值均大于该节点的值,右子树,左子树,31,11,CON,CON
二叉搜索树中任意节点的左子树中的所有节点的值均小于该节点的值且右子树中的所有节点的值均大于该节点的值,二叉搜索树,左子树,0,11,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,遍历,24,45,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,查找,24,56,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,线性表,24,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,线性表,24,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,顺序查找,24,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,遍历,查找,45,56,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,遍历,线性表,45,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,遍历,线性表,45,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,遍历,顺序查找,45,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,线性表,56,50,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,线性表,56,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,查找,顺序查找,56,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,线性表,线性表,50,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,线性表,顺序查找,50,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表为止的查找方法,线性表,顺序查找,6,0,CON,CON
根节点是树结构中处于顶端无父节点的起始节点,父节点,根节点,13,0,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,排序,43,29,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,43,0,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,29,0,CON,CON
存储结构的特点的核心特征是它决定了数据在计算机内存或存储设备中的存储方式，包括数据元素之间的逻辑关系如何映射到物理存储上，以及如何通过特定,存储结构,映射,0,52,CON,CON
存储结构的特点的核心特征是它决定了数据在计算机内存或存储设备中的存储方式，包括数据元素之间的逻辑关系如何映射到物理存储上，以及如何通过特定,存储结构,数据元素,0,39,CON,CON
存储结构的特点的核心特征是它决定了数据在计算机内存或存储设备中的存储方式，包括数据元素之间的逻辑关系如何映射到物理存储上，以及如何通过特定,映射,数据元素,52,39,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,数组,查找,18,63,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,数组,数组,18,10,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,数组,查找,18,39,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,数组,二分查找,18,0,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,查找,数组,63,10,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,查找,查找,63,39,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,查找,二分查找,63,0,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,数组,查找,10,39,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,数组,二分查找,10,0,CON,CON
二分查找是一种在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而高效确定目标值是否存在及所在位置的查找算法,查找,二分查找,39,0,CON,CON
快速排序是对给定数组选择一个基准值，将数组分为两部分，小于基准值的元素放在左边大于基准值的元素放在右边，然后对左右两部分分别递归进行,数组,数组,19,8,CON,CON
快速排序是对给定数组选择一个基准值，将数组分为两部分，小于基准值的元素放在左边大于基准值的元素放在右边，然后对左右两部分分别递归进行,数组,递归,19,62,CON,CON
快速排序是对给定数组选择一个基准值，将数组分为两部分，小于基准值的元素放在左边大于基准值的元素放在右边，然后对左右两部分分别递归进行,数组,快速排序,19,0,CON,CON
快速排序是对给定数组选择一个基准值，将数组分为两部分，小于基准值的元素放在左边大于基准值的元素放在右边，然后对左右两部分分别递归进行,数组,递归,8,62,CON,CON
快速排序是对给定数组选择一个基准值，将数组分为两部分，小于基准值的元素放在左边大于基准值的元素放在右边，然后对左右两部分分别递归进行,数组,快速排序,8,0,CON,CON
快速排序是对给定数组选择一个基准值，将数组分为两部分，小于基准值的元素放在左边大于基准值的元素放在右边，然后对左右两部分分别递归进行,递归,快速排序,62,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,头节点,循环链表,28,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,头节点,指针,28,24,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,头节点,链表,28,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,头节点,链表,28,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,头节点,链表,28,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,头节点,遍历,28,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,循环链表,指针,0,24,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,循环链表,链表,0,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,循环链表,链表,0,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,循环链表,链表,0,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,循环链表,遍历,0,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,指针,链表,24,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,指针,链表,24,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,指针,链表,24,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,指针,遍历,24,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,链表,链表,10,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,链表,链表,10,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,链表,遍历,10,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,链表,链表,45,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,链表,遍历,45,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表结尾的情况，,链表,遍历,61,55,CON,CON
在图论中回路是指一条至少包含一条边且起点和终点相同的路径,回路,路径,4,26,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,映射,查找,19,38,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,映射,时间复杂度,19,42,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,查找,时间复杂度,38,42,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,查找,哈希表,38,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,查找,哈希函数,38,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,时间复杂度,哈希表,42,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,时间复杂度,哈希函数,42,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据具有快速查找平均时间复杂度接近常数的特点,哈希表,哈希函数,0,13,CON,CON
树的核心特征是具有一个根节点，并且除根节点外的每个节点都有且仅有一个父节点，同时树中没有回路,回路,根节点,44,18,CON,CON
树的核心特征是具有一个根节点，并且除根节点外的每个节点都有且仅有一个父节点，同时树中没有回路,回路,父节点,44,34,CON,CON
树的核心特征是具有一个根节点，并且除根节点外的每个节点都有且仅有一个父节点，同时树中没有回路,回路,根节点,44,11,CON,CON
树的核心特征是具有一个根节点，并且除根节点外的每个节点都有且仅有一个父节点，同时树中没有回路,根节点,父节点,18,34,CON,CON
树的核心特征是具有一个根节点，并且除根节点外的每个节点都有且仅有一个父节点，同时树中没有回路,根节点,根节点,18,11,CON,CON
树的核心特征是具有一个根节点，并且除根节点外的每个节点都有且仅有一个父节点，同时树中没有回路,父节点,根节点,34,11,CON,CON
满二叉树的核心性质是每一层上的节点数都达到最大值，即如果满二叉树的深度为k，那么它的节点总数为2^k - 1，,满二叉树,满二叉树,0,28,CON,CON
迭代法是一种不断用变量的旧值递推新值，通过重复执行某一运算过程以求解问题的方法,迭代法,递推,0,14,CON,CON
线性查找是一种从数据序列的开头开始，依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是对数据序列无特定要求且查找过程,查找,遍历,2,36,CON,CON
线性查找是一种从数据序列的开头开始，依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是对数据序列无特定要求且查找过程,查找,查找,2,63,CON,CON
线性查找是一种从数据序列的开头开始，依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是对数据序列无特定要求且查找过程,查找,查找,2,44,CON,CON
线性查找是一种从数据序列的开头开始，依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是对数据序列无特定要求且查找过程,遍历,查找,36,63,CON,CON
线性查找是一种从数据序列的开头开始，依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是对数据序列无特定要求且查找过程,遍历,查找,36,44,CON,CON
线性查找是一种从数据序列的开头开始，依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是对数据序列无特定要求且查找过程,查找,查找,63,44,CON,CON
插入排序是将未排序数据插入已排序序列的合适位置,排序,排序,7,14,CON,CON
插入排序是将未排序数据插入已排序序列的合适位置,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入已排序序列的合适位置,排序,插入,7,11,CON,CON
插入排序是将未排序数据插入已排序序列的合适位置,排序,插入排序,14,0,CON,CON
插入排序是将未排序数据插入已排序序列的合适位置,排序,插入,14,11,CON,CON
插入排序是将未排序数据插入已排序序列的合适位置,插入排序,插入,0,11,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，且任意两个节点之间有且仅有一条路径，不存在回路,子节点,回路,33,58,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，且任意两个节点之间有且仅有一条路径，不存在回路,子节点,根节点,33,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，且任意两个节点之间有且仅有一条路径，不存在回路,子节点,路径,33,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，且任意两个节点之间有且仅有一条路径，不存在回路,回路,根节点,58,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，且任意两个节点之间有且仅有一条路径，不存在回路,回路,路径,58,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，且任意两个节点之间有且仅有一条路径，不存在回路,根节点,路径,19,52,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）的排序算法,数组,排序,42,52,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）的排序算法,数组,冒泡排序,42,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）的排序算法,排序,冒泡排序,52,0,CON,CON
比较排序是一种基于元素间比较操作来确定元素相对次序从而将给定元素序列重新排列成有序序列的排序算法,排序,比较排序,44,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,树的深度,38,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,根节点,38,55,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,叶子节点,38,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,路径,38,24,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,根节点,38,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,树的深度,根节点,0,55,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,树的深度,路径,0,24,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,树的深度,根节点,0,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,叶子节点,55,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,路径,55,24,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,根节点,根节点,55,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,叶子节点,路径,12,24,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,叶子节点,根节点,12,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数决定的其具有从根节点开始逐层向下延伸且每层节点到根节点距离不同,路径,根节点,24,6,CON,CON
双向链表是节点含前驱和后继指针的链表结构,链表,双向链表,16,0,CON,CON
双向链表是节点含前驱和后继指针的链表结构,链表,指针,16,13,CON,CON
双向链表是节点含前驱和后继指针的链表结构,双向链表,指针,0,13,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,后继节点,前驱节点,48,38,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,后继节点,指针,48,31,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,后继节点,指针,48,60,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,后继节点,双向链表,48,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,前驱节点,指针,38,31,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,前驱节点,指针,38,60,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,前驱节点,双向链表,38,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,指针,指针,31,60,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,指针,双向链表,31,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这些节点和指针形成双向链接,指针,双向链表,60,0,CON,CON
递归基础是递归算法中最简单的情况，通常是问题的最小规模或最基本形式，直接给出答案而无需进一步递归调用,递归,递归基础,5,0,CON,CON
递归基础是递归算法中最简单的情况，通常是问题的最小规模或最基本形式，直接给出答案而无需进一步递归调用,递归,递归,5,46,CON,CON
递归基础是递归算法中最简单的情况，通常是问题的最小规模或最基本形式，直接给出答案而无需进一步递归调用,递归基础,递归,0,46,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,遍历,查找,44,24,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,遍历,查找,44,55,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,遍历,顺序查找,44,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,遍历,线性表,44,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,遍历,线性表,44,49,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,查找,查找,24,55,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,查找,顺序查找,24,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,查找,线性表,24,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,查找,线性表,24,49,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,查找,顺序查找,55,0,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,查找,线性表,55,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,查找,线性表,55,49,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,顺序查找,线性表,0,6,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,顺序查找,线性表,0,49,CON,CON
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或遍历完整个线性表为止的查找方法,线性表,线性表,6,49,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,遍历,16,47,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,遍历,16,3,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,根节点,16,52,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,访问,16,58,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,访问,16,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,二叉树,16,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,递归,16,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,访问,16,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,访问,16,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,左子树,16,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,遍历,47,3,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,根节点,47,52,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,47,58,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,47,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,二叉树,47,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,递归,47,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,47,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,47,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,左子树,47,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,根节点,3,52,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,3,58,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,3,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,递归,3,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,3,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,访问,3,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,遍历,左子树,3,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,根节点,访问,52,58,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,根节点,访问,52,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,根节点,二叉树,52,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,根节点,递归,52,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,根节点,访问,52,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,根节点,访问,52,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,根节点,左子树,52,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,访问,58,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,二叉树,58,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,递归,58,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,访问,58,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,访问,58,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,左子树,58,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,二叉树,50,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,递归,50,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,访问,50,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,访问,50,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,左子树,50,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,递归,0,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,访问,0,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,访问,0,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,二叉树,左子树,0,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,递归,访问,56,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,递归,访问,56,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,递归,左子树,56,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,访问,14,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,左子树,14,60,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，且每个节点仅被访问一次，其核心性质包括先序遍历先访问根节点再递归访问左子树,访问,左子树,33,60,CON,CON
队列的核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,0,17,CON,CON
队列的核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,0,24,CON,CON
队列的核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,17,24,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此操作将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）从而实现对数组,数组,数组,47,61,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此操作将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）从而实现对数组,数组,冒泡排序,47,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此操作将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）从而实现对数组,数组,冒泡排序,61,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,25,40,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,25,50,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,25,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,25,29,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,25,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,25,35,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,25,55,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,归并排序,25,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,40,50,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,40,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,40,29,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,40,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,40,35,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,40,55,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,归并排序,40,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,50,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,50,29,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,50,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,50,35,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,50,55,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,归并排序,50,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,8,29,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,数组,8,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,8,35,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,8,55,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,归并排序,8,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,排序,数组,29,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,排序,排序,29,35,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,排序,排序,29,55,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,排序,归并排序,29,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,15,35,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,排序,15,55,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,数组,归并排序,15,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,排序,排序,35,55,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,排序,归并排序,35,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对这两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组的一种排序算法,排序,归并排序,55,0,CON,CON
叶子节点是树结构中没有子节点的末端节点,叶子节点,子节点,0,11,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,线性表,数据元素,11,21,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,线性表,指针,11,34,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,线性表,尾节点,11,65,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,线性表,指针,11,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,线性表,后继节点,11,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,数据元素,指针,21,34,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,数据元素,尾节点,21,65,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,数据元素,单链表,21,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,数据元素,指针,21,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,数据元素,后继节点,21,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,指针,尾节点,34,65,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,指针,单链表,34,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,指针,指针,34,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,指针,后继节点,34,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,尾节点,单链表,65,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,尾节点,指针,65,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,尾节点,后继节点,65,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,单链表,指针,0,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,单链表,后继节点,0,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来形成一个线性序列，其中除了尾节点,指针,后继节点,39,29,CON,CON
迭代法是一种通过从一个初始估计值开始，利用某种迭代公式不断重复计算以逐步逼近问题精确解的方法其核心性质是通过重复执行相同的计算步骤逐渐改进,迭代法,迭代,0,23,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,查找,数组,34,10,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,查找,时间复杂度,34,49,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,查找,查找,34,42,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,查找,二分查找,34,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,数组,时间复杂度,10,49,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,数组,查找,10,42,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,数组,二分查找,10,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,时间复杂度,查找,49,42,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,时间复杂度,二分查找,49,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来快速定位目标元素的查找算法其特点是查找效率高平均时间复杂度为对数级,查找,二分查找,42,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,47,36,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,47,23,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,47,30,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,47,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,47,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,47,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,数组,36,23,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,数组,36,30,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,数组,36,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,排序,36,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,归并排序,36,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,23,30,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,23,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,23,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,23,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,30,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,30,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,30,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,16,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,16,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,归并排序,42,0,CON,CON
简单排序是对数据序列通过比较和交换等操作，按照特定规则将元素重新排列以达到有序状态的排序方法,排序,简单排序,42,0,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,双向链表,14,0,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,链表,14,17,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,双向链表,链表,0,17,CON,CON
深度优先搜索是按深度优先依次访问节点直至完成搜索,深度优先搜索,访问,0,14,CON,CON
树中各节点度的最大值就是树的度，树的度反映了树中节点分支情况的最大程度，它体现了树结构的复杂程度，不同树的度各不,树的度,树的度,51,12,CON,CON
树中各节点度的最大值就是树的度，树的度反映了树中节点分支情况的最大程度，它体现了树结构的复杂程度，不同树的度各不,树的度,树的度,51,16,CON,CON
树中各节点度的最大值就是树的度，树的度反映了树中节点分支情况的最大程度，它体现了树结构的复杂程度，不同树的度各不,树的度,树的度,12,16,CON,CON
无向图是一种图结构，其中边没有方向，顶点之间的连接是对称的即若存在从顶点u到顶点v的边则必然存在从顶点v到顶点u,图,无向图,6,0,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,路径,6,26,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,叶子节点,6,45,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,叶子节点,6,15,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,根节点,6,41,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,树的高度,6,0,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,路径,6,51,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,路径,叶子节点,26,45,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,路径,叶子节点,26,15,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,路径,根节点,26,41,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,路径,树的高度,26,0,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,路径,路径,26,51,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,叶子节点,叶子节点,45,15,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,叶子节点,根节点,45,41,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,叶子节点,树的高度,45,0,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,叶子节点,路径,45,51,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,叶子节点,根节点,15,41,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,叶子节点,树的高度,15,0,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,叶子节点,路径,15,51,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,树的高度,41,0,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,根节点,路径,41,51,CON,CON
树的高度是从根节点开始，到最远叶子节点经过的最长简单路径上的边数，其核心特征为是从根节点到叶子节点最长路径的边数衡量,树的高度,路径,0,51,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,38,58,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,38,51,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,线性表,38,8,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,38,45,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,38,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,58,51,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,线性表,58,8,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,58,45,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,58,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,线性表,51,8,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,51,45,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,51,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,线性表,队列,8,45,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先出队列，后进入队列的元素后出队列,队列,队列,45,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,路径,6,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,路径,叶子节点,21,12,CON,CON
快速排序是对无序数组通过选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行同样,数组,数组,8,21,CON,CON
快速排序是对无序数组通过选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行同样,数组,快速排序,8,0,CON,CON
快速排序是对无序数组通过选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行同样,数组,递归,8,60,CON,CON
快速排序是对无序数组通过选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行同样,数组,快速排序,21,0,CON,CON
快速排序是对无序数组通过选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行同样,数组,递归,21,60,CON,CON
快速排序是对无序数组通过选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行同样,快速排序,递归,0,60,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,头节点,尾节点,19,11,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,头节点,链表,19,43,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,头节点,链表,19,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,头节点,指针,19,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,头节点,遍历,19,39,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,头节点,循环链表,19,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,头节点,链表,19,26,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,尾节点,链表,11,43,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,尾节点,链表,11,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,尾节点,指针,11,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,尾节点,遍历,11,39,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,尾节点,循环链表,11,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,尾节点,链表,11,26,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,链表,43,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,指针,43,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,遍历,43,39,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,循环链表,43,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,链表,43,26,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,指针,7,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,遍历,7,39,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,循环链表,7,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,链表,链表,7,26,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,指针,遍历,15,39,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,指针,循环链表,15,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,指针,链表,15,26,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,遍历,循环链表,39,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,遍历,链表,39,26,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任意节点出发都可以遍历整个链表形成一个环,循环链表,链表,0,26,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个被称为根的特殊节点，除根节点外每个节点有且仅有一个父节点，,子节点,根节点,20,39,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个被称为根的特殊节点，除根节点外每个节点有且仅有一个父节点，,子节点,树的节点,20,0,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个被称为根的特殊节点，除根节点外每个节点有且仅有一个父节点，,子节点,父节点,20,53,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个被称为根的特殊节点，除根节点外每个节点有且仅有一个父节点，,根节点,树的节点,39,0,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个被称为根的特殊节点，除根节点外每个节点有且仅有一个父节点，,根节点,父节点,39,53,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个被称为根的特殊节点，除根节点外每个节点有且仅有一个父节点，,树的节点,父节点,0,53,CON,CON
按顺序逐个检查数据元素以查找目标元素的查找方式,查找,查找,19,12,CON,CON
按顺序逐个检查数据元素以查找目标元素的查找方式,查找,数据元素,19,7,CON,CON
按顺序逐个检查数据元素以查找目标元素的查找方式,查找,数据元素,12,7,CON,CON
邻接矩阵是一种表示图的方式，其中用一个二维数组来存储顶点之间的连接关系，若顶点之间有边相连则对应位置的值为1（或其他表示有,邻接矩阵,数组,0,21,CON,CON
邻接表是用链表存储图中顶点及邻接顶点信息的数据结构,链表,邻接表,5,0,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆排序,排序,0,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆排序,数组,0,29,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆排序,堆,0,42,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆排序,堆,0,57,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆排序,堆,0,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,排序,数组,20,29,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,排序,堆,20,42,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,排序,堆,20,57,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,排序,堆,20,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,数组,堆,29,42,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,数组,堆,29,57,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,数组,堆,29,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆,堆,42,57,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆,堆,42,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它通过将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，,堆,堆,57,7,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即第i层有2^(,满二叉树,二叉树,0,24,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,右子树,左子树,43,22,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,右子树,二叉搜索树,43,0,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,左子树,二叉搜索树,22,0,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,线性表,27,57,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,查找,27,2,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,线性表,27,18,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,遍历,27,52,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,线性表,27,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,线性表,查找,57,2,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,线性表,线性表,57,18,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,线性表,遍历,57,52,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,线性表,线性表,57,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,线性表,2,18,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,遍历,2,52,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,查找,线性表,2,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,线性表,遍历,18,52,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,线性表,线性表,18,6,CON,CON
线性查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到则返回该元素的位置，若遍历完整个线性表都,遍历,线性表,52,6,CON,CON
树的度是树内各结点的度的最大值其中结点的度是指结点拥有的子树的数目,子树,树的度,28,0,CON,CON
满二叉树的核心特征是除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,子节点,子节点,36,18,CON,CON
满二叉树的核心特征是除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,子节点,满二叉树,36,0,CON,CON
满二叉树的核心特征是除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,子节点,满二叉树,18,0,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中没有,根节点,子节点,38,33,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中没有,根节点,父节点,38,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中没有,根节点,根节点,38,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中没有,子节点,父节点,33,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中没有,子节点,根节点,33,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中没有,父节点,根节点,52,19,CON,CON
双向链表是节点含前驱和后继指针的链表结构,链表,双向链表,16,0,CON,CON
双向链表是节点含前驱和后继指针的链表结构,链表,指针,16,13,CON,CON
双向链表是节点含前驱和后继指针的链表结构,双向链表,指针,0,13,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,叶子节点,树的高度,15,0,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,叶子节点,路径,15,24,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,叶子节点,根节点,15,6,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,24,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,路径,根节点,24,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,路径,根节点,20,6,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,排序,43,29,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,43,0,CON,CON
比较排序的核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,29,0,CON,CON
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法其核心性质是利用前一步的计算结果来生成下一步,迭代法,迭代,0,23,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可不同，其核心特征在于,边的权重,图,43,6,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可不同，其核心特征在于,边的权重,加权图,43,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可不同，其核心特征在于,图,加权图,6,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,排序,10,61,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,数据元素,61,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,排序,61,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,数据元素,61,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,选择排序,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序方法,数据元素,选择排序,13,0,CON,CON
算法效率的特点包括时间复杂度反映算法执行时间随问题规模增长的变化趋势空间复杂度体现算法执行过程中所需存储空间随问题规模增长的变化情况最优、平均和最坏时间,时间复杂度,空间复杂度,9,34,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,父节点,9,40,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,父节点,9,47,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,父节点,9,32,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,子节点,9,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,父节点,40,47,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,父节点,40,32,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,子节点,40,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,父节点,47,32,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,子节点,47,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点、数量可因父节点而异、与父节点通过特定关系关联等特点,父节点,子节点,32,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,查找,数组,59,8,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,查找,数组,59,16,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,查找,查找,59,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,查找,二分查找,59,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,数组,数组,8,16,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,数组,查找,8,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,数组,查找,16,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,数组,二分查找,16,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的查找算法,查找,二分查找,37,0,CON,CON
堆是一种特殊数据结构满足父节点键值大于或小于子节点,父节点,子节点,12,22,CON,CON
队列是一种先进先出的数据结构，其核心性质为元素按照进入的先后顺序依次存储，先进入队列的元素先离开队列,队列,队列,48,40,CON,CON
队列是一种先进先出的数据结构，其核心性质为元素按照进入的先后顺序依次存储，先进入队列的元素先离开队列,队列,队列,48,0,CON,CON
队列是一种先进先出的数据结构，其核心性质为元素按照进入的先后顺序依次存储，先进入队列的元素先离开队列,队列,队列,40,0,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，顶点之间的连接是单向的,图,有向图,6,0,CON,CON
在树形数据结构中父节点是指其直接有子节点且是子节点的前驱节点的节点,父节点,子节点,8,17,CON,CON
在树形数据结构中父节点是指其直接有子节点且是子节点的前驱节点的节点,父节点,子节点,8,22,CON,CON
在树形数据结构中父节点是指其直接有子节点且是子节点的前驱节点的节点,父节点,前驱节点,8,26,CON,CON
在树形数据结构中父节点是指其直接有子节点且是子节点的前驱节点的节点,子节点,子节点,17,22,CON,CON
在树形数据结构中父节点是指其直接有子节点且是子节点的前驱节点的节点,子节点,前驱节点,17,26,CON,CON
在树形数据结构中父节点是指其直接有子节点且是子节点的前驱节点的节点,子节点,前驱节点,22,26,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，边可以具有权重等属性，图中的顶点可以是各种类型的对象，边可以,集合,集合,13,4,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,尾节点,19,11,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,链表,19,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,遍历,19,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,链表,19,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,指针,19,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,链表,19,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,循环链表,19,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,链表,11,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,遍历,11,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,链表,11,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,指针,11,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,链表,11,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,循环链表,11,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,遍历,7,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,链表,7,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,指针,7,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,链表,7,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,7,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,遍历,链表,50,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,遍历,指针,50,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,遍历,链表,50,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,遍历,循环链表,50,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,指针,54,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,链表,54,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,54,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,指针,链表,15,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,指针,循环链表,15,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,37,0,CON,CON
加权图的核心性质是图中每条边都被赋予一个权重值，该权重值用于表示边的某种属性或代价等，不同边的权重值可不同，基于这些,边的权重,加权图,45,0,CON,CON
顺序查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其核心特征是逐个,查找,遍历,28,49,CON,CON
顺序查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其核心特征是逐个,查找,顺序查找,28,0,CON,CON
顺序查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止，其核心特征是逐个,遍历,顺序查找,49,0,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,父节点,子节点,38,0,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,父节点,后继节点,38,44,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,父节点,父节点,38,13,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,父节点,子节点,38,34,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,子节点,后继节点,0,44,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,子节点,父节点,0,13,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,子节点,子节点,0,34,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,后继节点,父节点,44,13,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,后继节点,子节点,44,34,CON,CON
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,父节点,子节点,13,34,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,哈希函数,哈希表,13,0,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据以及指向下一个节点的指针，通过这些指针将节点依次连接起来形成一个链式结构,指针,指针,47,40,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据以及指向下一个节点的指针，通过这些指针将节点依次连接起来形成一个链式结构,指针,链表,47,0,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据以及指向下一个节点的指针，通过这些指针将节点依次连接起来形成一个链式结构,指针,链表,40,0,CON,CON
树中没有子节点的节点即叶子节点,叶子节点,子节点,11,4,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,遍历,16,3,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,递归,16,44,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,左子树,16,48,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,右子树,16,52,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,遍历,16,58,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,访问,16,38,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,根节点,16,40,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,二叉树,16,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,遍历,16,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,访问,16,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,访问,16,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,递归,3,44,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,左子树,3,48,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,右子树,3,52,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,遍历,3,58,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,3,38,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,根节点,3,40,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,遍历,3,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,3,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,3,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,左子树,44,48,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,右子树,44,52,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,遍历,44,58,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,访问,44,38,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,根节点,44,40,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,二叉树,44,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,遍历,44,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,访问,44,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,递归,访问,44,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,右子树,48,52,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,遍历,48,58,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,访问,48,38,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,根节点,48,40,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,二叉树,48,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,遍历,48,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,访问,48,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,左子树,访问,48,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,右子树,遍历,52,58,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,右子树,访问,52,38,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,右子树,根节点,52,40,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,右子树,二叉树,52,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,右子树,遍历,52,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,右子树,访问,52,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,右子树,访问,52,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,58,38,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,根节点,58,40,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,二叉树,58,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,遍历,58,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,58,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,58,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,访问,根节点,38,40,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,访问,二叉树,38,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,访问,遍历,38,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,访问,访问,38,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,访问,访问,38,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,根节点,二叉树,40,0,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,根节点,遍历,40,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,根节点,访问,40,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,根节点,访问,40,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,遍历,0,35,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,访问,0,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,二叉树,访问,0,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,35,14,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,遍历,访问,35,46,CON,CON
二叉树遍历是按照某种规则依次访问二叉树中的每个节点，其核心性质包括先序遍历先访问根节点再递归访问左子树和右子树，中序遍历,访问,访问,14,46,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，具有随机访问特性，可按元素序号快速访问，,访问,数组,59,34,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，具有随机访问特性，可按元素序号快速访问，,访问,线性表,59,6,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，具有随机访问特性，可按元素序号快速访问，,访问,访问,59,46,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，具有随机访问特性，可按元素序号快速访问，,数组,线性表,34,6,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，具有随机访问特性，可按元素序号快速访问，,数组,访问,34,46,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，具有随机访问特性，可按元素序号快速访问，,线性表,访问,6,46,CON,CON
堆排序是利用堆结构进行排序的一种算法,堆排序,堆,0,6,CON,CON
堆排序是利用堆结构进行排序的一种算法,堆排序,排序,0,11,CON,CON
堆排序是利用堆结构进行排序的一种算法,堆,排序,6,11,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,哈希函数,哈希表,13,0,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质是顺序性地逐个检查,遍历,查找,43,2,CON,CON
树中数据元素及指向子树的分支构成节点,子树,数据元素,9,2,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,插入,排序,6,2,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,插入,排序,6,20,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,插入,排序,6,9,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,排序,排序,2,20,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,排序,排序,2,9,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,排序,排序,20,9,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构,线性结构,数据元素,0,7,CON,CON
链表是通过指针将节点连接起来的线性数据结构,链表,指针,0,5,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,25,0,CON,CON
堆排序利用堆结构特性对数据进行排序操作,堆排序,堆,0,5,CON,CON
堆排序利用堆结构特性对数据进行排序操作,堆排序,排序,0,15,CON,CON
堆排序利用堆结构特性对数据进行排序操作,堆,排序,5,15,CON,CON
图是一种由顶点集合以及顶点之间的边集合所构成的数据结构，其中顶点是图的基本元素，边表示顶点之间的关系,集合,集合,7,17,CON,CON
数据类型是一组值的集合以及定义在这组值上的一组操作的总称,数据类型,集合,0,9,CON,CON
树的深度是从根节点开始自顶向下逐层累加至最远叶节点所经过的层数,树的深度,根节点,0,6,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,尾节点,链表,14,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,指针,链表,18,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,头节点,链表,23,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,链表,链表,31,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,链表,循环链表,31,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构,链表,循环链表,10,0,CON,CON
线性结构中数据元素存在一对一的线性关系,线性结构,数据元素,0,5,CON,CON
子节点是树结构中直接连接在父节点之下的节点,父节点,子节点,13,0,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其核心特征是逐个元素进行比较查找,查找,遍历,2,36,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其核心特征是逐个元素进行比较查找,查找,查找,2,58,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列，其核心特征是逐个元素进行比较查找,遍历,查找,36,58,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它决定了数据在计算机中的存储方式和访问,物理结构,访问,3,66,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它决定了数据在计算机中的存储方式和访问,物理结构,数据元素,3,13,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它决定了数据在计算机中的存储方式和访问,物理结构,数据元素,3,35,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它决定了数据在计算机中的存储方式和访问,访问,数据元素,66,13,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它决定了数据在计算机中的存储方式和访问,访问,数据元素,66,35,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它决定了数据在计算机中的存储方式和访问,数据元素,数据元素,13,35,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,排序,排序,28,40,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,排序,时间复杂度,28,48,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,排序,比较排序,28,38,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,排序,比较排序,28,0,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,排序,时间复杂度,40,48,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,排序,比较排序,40,38,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,排序,比较排序,40,0,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,时间复杂度,比较排序,48,38,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,时间复杂度,比较排序,48,0,CON,CON
比较排序是通过元素间的比较来确定元素间的相对次序从而实现排序，其核心性质包括比较排序在最坏情况下时间复杂度为Ω(n log n)且任何基于比较,比较排序,比较排序,38,0,CON,CON
平衡二叉树的核心特征是每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,子树,0,34,CON,CON
平衡二叉树的核心特征是每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,40,CON,CON
平衡二叉树的核心特征是每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,子树,0,18,CON,CON
平衡二叉树的核心特征是每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,平衡二叉树,34,40,CON,CON
平衡二叉树的核心特征是每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,子树,34,18,CON,CON
平衡二叉树的核心特征是每个节点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,子树,40,18,CON,CON
回溯法按选优条件深度优先搜索并适时回溯找解,回溯法,深度优先搜索,0,8,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的节点，其特点的核心特征包括：在层次结构中处于父节点的下一层级，与父节点,子节点,父节点,0,55,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的节点，其特点的核心特征包括：在层次结构中处于父节点的下一层级，与父节点,子节点,父节点,0,45,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的节点，其特点的核心特征包括：在层次结构中处于父节点的下一层级，与父节点,子节点,父节点,0,19,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的节点，其特点的核心特征包括：在层次结构中处于父节点的下一层级，与父节点,父节点,父节点,55,45,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的节点，其特点的核心特征包括：在层次结构中处于父节点的下一层级，与父节点,父节点,父节点,55,19,CON,CON
子节点是树结构或图结构中直接连接到某个父节点的节点，其特点的核心特征包括：在层次结构中处于父节点的下一层级，与父节点,父节点,父节点,45,19,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,时间复杂度,查找,58,50,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,时间复杂度,删除,58,54,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,时间复杂度,哈希表,58,0,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,时间复杂度,映射,58,13,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,时间复杂度,插入,58,52,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,时间复杂度,哈希函数,58,7,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,查找,删除,50,54,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,查找,哈希表,50,0,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,查找,映射,50,13,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,查找,插入,50,52,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,查找,哈希函数,50,7,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,删除,哈希表,54,0,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,删除,映射,54,13,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,删除,插入,54,52,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,删除,哈希函数,54,7,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,哈希表,映射,0,13,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,哈希表,插入,0,52,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,哈希表,哈希函数,0,7,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,映射,插入,13,52,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,映射,哈希函数,13,7,CON,CON
哈希表具有通过哈希函数将键映射为特定位置以实现快速数据存储与检索、能高效处理大规模数据且在平均情况下查找插入删除操作时间复杂度为常数级等特点,插入,哈希函数,52,7,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,插入,8,36,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,删除,8,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,删除,36,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,队列,36,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,删除,队列,23,0,CON,CON
指针是一种变量，其值为内存地址，通过指针可以直接访问和操作该地址所指向的内存单元，具有灵活性和高效性，能方便地处理动态数据结构和,指针,指针,18,0,CON,CON
指针是一种变量，其值为内存地址，通过指针可以直接访问和操作该地址所指向的内存单元，具有灵活性和高效性，能方便地处理动态数据结构和,指针,访问,18,24,CON,CON
指针是一种变量，其值为内存地址，通过指针可以直接访问和操作该地址所指向的内存单元，具有灵活性和高效性，能方便地处理动态数据结构和,指针,访问,0,24,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
递归基础是递归算法中最简单情况，是无需再次递归调用自身就能直接给出结果的终止条件,递归,递归,21,5,CON,CON
递归基础是递归算法中最简单情况，是无需再次递归调用自身就能直接给出结果的终止条件,递归,递归基础,21,0,CON,CON
递归基础是递归算法中最简单情况，是无需再次递归调用自身就能直接给出结果的终止条件,递归,递归基础,5,0,CON,CON
比较排序通过元素间比较确定其相对顺序来排序,排序,比较排序,19,0,CON,CON
数组是由相同类型的数据元素组成的有限序列，这些元素在内存中按顺序存储，可通过下标来唯一标识每个元素,数组,数据元素,0,9,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,38,20,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,38,7,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,38,56,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,38,0,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,20,7,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,20,56,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,20,0,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,7,56,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,7,0,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,56,0,CON,CON
邻接矩阵是用一个二维数组来表示图中顶点之间邻接关系的矩阵，其中矩阵元素的值表示对应顶点之间是否有边相连及边的相关信息,邻接矩阵,数组,0,10,CON,CON
在树形结构中，根节点是没有前驱节点且位于树的顶部具有特殊地位的起始节点,根节点,前驱节点,7,13,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,访问,访问,36,18,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,访问,遍历,36,53,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,访问,广度优先搜索,36,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,访问,访问,36,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,访问,遍历,18,53,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,遍历,广度优先搜索,53,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,遍历,访问,53,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问离起始节点距离为1的所有节点，再访问距离为2的节点，以此类推，直到遍历完所有节点，它通过,广度优先搜索,访问,0,12,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,35,0,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,时间复杂度,遍历,43,29,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,时间复杂度,线性表,43,34,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,时间复杂度,线性表,43,6,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,时间复杂度,顺序查找,43,0,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,遍历,线性表,29,34,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,遍历,线性表,29,6,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,遍历,顺序查找,29,0,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,线性表,线性表,34,6,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,线性表,顺序查找,34,0,CON,CON
顺序查找是对线性表中的元素依次进行比较，直到找到目标元素或遍历完整个线性表，其特点包括时间复杂度在最坏情况下为O(n)，平均情况下为O,线性表,顺序查找,6,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,映射,删除,20,57,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,映射,插入,20,54,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,映射,查找,20,60,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,映射,哈希表,20,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,映射,哈希函数,20,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,删除,插入,57,54,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,删除,查找,57,60,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,删除,哈希表,57,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,删除,哈希函数,57,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,插入,查找,54,60,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,插入,哈希表,54,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,插入,哈希函数,54,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,查找,哈希表,60,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,查找,哈希函数,60,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有在平均情况下能以接近常数时间进行插入、删除和查找操作的,哈希表,哈希函数,0,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构,集合,集合,14,5,CON,CON
非线性结构的核心特征是存在至少一个数据元素有不止一个前驱元素或不止一个后继元素，即数据元素之间的关系不再是一对一的线性关系，可能存在一对多、,数据元素,数据元素,17,41,CON,CON
非线性结构的核心特征是存在至少一个数据元素有不止一个前驱元素或不止一个后继元素，即数据元素之间的关系不再是一对一的线性关系，可能存在一对多、,数据元素,非线性结构,17,0,CON,CON
非线性结构的核心特征是存在至少一个数据元素有不止一个前驱元素或不止一个后继元素，即数据元素之间的关系不再是一对一的线性关系，可能存在一对多、,数据元素,非线性结构,41,0,CON,CON
树中所有结点的度的最大值就是树的度其核心特征是反映树中各结点分支情况的最大值体现了树的复杂程度取决于树中拥有最多子树的结点,树的度,子树,14,56,CON,CON
比较排序是基于元素间比较操作来确定元素间相对次序从而实现对数据序列进行排序的排序算法,排序,排序,38,35,CON,CON
比较排序是基于元素间比较操作来确定元素间相对次序从而实现对数据序列进行排序的排序算法,排序,比较排序,38,0,CON,CON
比较排序是基于元素间比较操作来确定元素间相对次序从而实现对数据序列进行排序的排序算法,排序,比较排序,35,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,左子树,3,52,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,根节点,3,44,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,递归,3,48,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,访问,3,50,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,右子树,3,56,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,访问,3,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,遍历,3,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,二叉树,3,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,访问,3,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,根节点,52,44,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,递归,52,48,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,访问,52,50,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,右子树,52,56,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,二叉树,52,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,访问,52,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,遍历,52,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,二叉树,52,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,左子树,访问,52,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,递归,44,48,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,访问,44,50,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,右子树,44,56,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,二叉树,44,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,访问,44,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,遍历,44,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,二叉树,44,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,根节点,访问,44,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,递归,访问,48,50,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,递归,右子树,48,56,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,递归,二叉树,48,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,递归,访问,48,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,递归,遍历,48,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,递归,二叉树,48,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,递归,访问,48,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,右子树,50,56,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,二叉树,50,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,访问,50,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,遍历,50,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,二叉树,50,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,访问,50,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,右子树,二叉树,56,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,右子树,访问,56,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,右子树,遍历,56,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,右子树,二叉树,56,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,右子树,访问,56,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,二叉树,访问,0,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,二叉树,遍历,0,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,二叉树,二叉树,0,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,二叉树,访问,0,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,遍历,42,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,二叉树,42,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,访问,访问,42,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,二叉树,39,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,遍历,访问,39,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问从而得到不同节点序列的操作，前序遍历先访问根节点再递归访问左子树和右子树，,二叉树,访问,13,21,CON,CON
回路的核心性质是从回路中任意一点出发，沿回路的边遍历，最终能回到出发点且所经过的边互不重复,回路,回路,0,20,CON,CON
回路的核心性质是从回路中任意一点出发，沿回路的边遍历，最终能回到出发点且所经过的边互不重复,回路,回路,0,9,CON,CON
回路的核心性质是从回路中任意一点出发，沿回路的边遍历，最终能回到出发点且所经过的边互不重复,回路,遍历,0,24,CON,CON
回路的核心性质是从回路中任意一点出发，沿回路的边遍历，最终能回到出发点且所经过的边互不重复,回路,回路,20,9,CON,CON
回路的核心性质是从回路中任意一点出发，沿回路的边遍历，最终能回到出发点且所经过的边互不重复,回路,遍历,20,24,CON,CON
回路的核心性质是从回路中任意一点出发，沿回路的边遍历，最终能回到出发点且所经过的边互不重复,回路,遍历,9,24,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,48,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入,排序,11,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,48,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,48,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,7,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,15,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,插入排序,25,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,排序,排序,25,55,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过构建有序序列，对于未排序数据，在已排序序列中从后,插入排序,排序,0,55,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,数组,20,27,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,排序,20,30,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,交换排序,20,0,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,排序,27,30,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,交换排序,27,0,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,排序,交换排序,30,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,线性表,指针,11,58,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,线性表,指针,11,48,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,线性表,数据元素,11,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,线性表,链表,11,66,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,指针,指针,58,48,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,指针,数据元素,58,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,指针,单链表,58,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,指针,链表,58,66,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,指针,数据元素,48,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,指针,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,指针,链表,48,66,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,数据元素,单链表,33,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,数据元素,链表,33,66,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些节点的指针依次连接形成链表,单链表,链表,0,66,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉搜索树,左子树,0,22,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉搜索树,右子树,0,42,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,左子树,右子树,22,42,CON,CON
二叉树是每个节点最多有两个子树的树结构,子树,二叉树,13,0,CON,CON
回路是从一节点出发经一系列节点又回到该节点的闭合路径,路径,回路,24,0,CON,CON
邻接矩阵是表示图的一种方式，其特点的核心性质包括：若图中有n个顶点，则邻接矩阵是一个n阶方阵,邻接矩阵,邻接矩阵,0,35,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点,链表,链表,43,40,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点,链表,邻接表,43,0,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中的节点表示与该顶点相邻接的顶点,链表,邻接表,40,0,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,数组,插入,34,53,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,数组,访问,34,45,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,数组,删除,34,56,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,数组,线性表,34,6,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,插入,访问,53,45,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,插入,删除,53,56,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,插入,线性表,53,6,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,访问,删除,45,56,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,访问,线性表,45,6,CON,CON
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，通过数组来存储元素，可随机访问元素且在进行插入和删除操作时,删除,线性表,56,6,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,递归,47,27,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,47,3,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,根节点,47,23,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,47,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,47,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,递归,47,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,47,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,右子树,47,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,二叉树,47,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,47,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,47,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,47,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,47,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,27,3,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,根节点,27,23,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,27,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,27,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,递归,27,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,27,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,右子树,27,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,二叉树,27,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,27,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,27,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,27,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,27,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,根节点,3,23,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,遍历,3,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,3,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,递归,3,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,遍历,3,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,右子树,3,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,二叉树,3,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,3,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,3,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,3,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,3,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,遍历,23,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,访问,23,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,递归,23,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,遍历,23,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,右子树,23,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,二叉树,23,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,访问,23,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,左子树,23,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,访问,23,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,左子树,23,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,17,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,递归,17,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,遍历,17,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,右子树,17,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,二叉树,17,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,17,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,17,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,17,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,17,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,递归,53,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,53,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,右子树,53,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,二叉树,53,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,53,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,53,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,53,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,53,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,45,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,右子树,45,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,二叉树,45,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,45,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,45,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,45,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,45,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,右子树,41,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,二叉树,41,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,41,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,41,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,41,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,41,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,二叉树,35,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,访问,35,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,左子树,35,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,访问,35,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,左子树,35,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,访问,0,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,左子树,0,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,访问,0,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,左子树,0,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,29,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,29,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,29,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,左子树,访问,31,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,左子树,左子树,31,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,21,49,CON,CON
非线性结构中数据元素之间存在非一对一的关系,非线性结构,数据元素,0,6,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，有且仅有一个开始和一个终端节点，除开始节点外每个节点有且仅有一个前驱，除终端节点,线性结构,数据元素,0,10,CON,CON
数组是存储相同数据类型元素的有序集合,数组,集合,0,16,CON,CON
数组是存储相同数据类型元素的有序集合,数组,数据类型,0,7,CON,CON
数组是存储相同数据类型元素的有序集合,集合,数据类型,16,7,CON,CON
子节点是树结构中直接连接在父节点之下的节点,父节点,子节点,13,0,CON,CON
回溯法基础的特点是通过深度优先搜索策略，在问题的解空间树中按深度优先方式从根节点出发搜索解，当发现当前节点不满足求解条件时就,回溯法,根节点,0,37,CON,CON
回溯法基础的特点是通过深度优先搜索策略，在问题的解空间树中按深度优先方式从根节点出发搜索解，当发现当前节点不满足求解条件时就,回溯法,深度优先搜索,0,11,CON,CON
回溯法基础的特点是通过深度优先搜索策略，在问题的解空间树中按深度优先方式从根节点出发搜索解，当发现当前节点不满足求解条件时就,根节点,深度优先搜索,37,11,CON,CON
线性结构是一种数据结构，其核心特征为存在一个对数据元素的有限序列，该序列中的元素之间存在唯一的前驱和后继关系（除了第一个元素无前驱，,线性结构,数据元素,0,23,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，每一趟比较都会将最大（或最小）的元素“,数组,排序,40,44,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，每一趟比较都会将最大（或最小）的元素“,数组,冒泡排序,40,0,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，每一趟比较都会将最大（或最小）的元素“,排序,冒泡排序,44,0,CON,CON
连通图中任意两点之间都存在路径可相互连通,连通图,路径,0,13,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来，形成一个链式结构，其,链表,指针,0,39,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来，形成一个链式结构，其,链表,指针,0,44,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来，形成一个链式结构，其,指针,指针,39,44,CON,CON
数据类型是对数据的一种分类方式，它定义了数据所具有的值的集合以及可以对这些值执行的操作,集合,数据类型,28,0,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,根节点,路径,6,18,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,树的深度,路径,0,18,CON,CON
二叉搜索树是一棵空树或者一棵具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,21,28,CON,CON
二叉搜索树是一棵空树或者一棵具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,21,35,CON,CON
二叉搜索树是一棵空树或者一棵具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,二叉搜索树,21,0,CON,CON
二叉搜索树是一棵空树或者一棵具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,28,35,CON,CON
二叉搜索树是一棵空树或者一棵具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,28,0,CON,CON
二叉搜索树是一棵空树或者一棵具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,35,0,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,后继节点,47,40,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,数据元素,47,24,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,双向链表,47,0,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,前驱节点,47,35,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,后继节点,数据元素,40,24,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,后继节点,双向链表,40,0,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,后继节点,前驱节点,40,35,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,数据元素,双向链表,24,0,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,数据元素,前驱节点,24,35,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,双向链表,前驱节点,0,35,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,查找,51,40,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,查找,51,27,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,线性表,51,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,顺序查找,51,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,线性表,51,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,遍历,51,46,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,查找,40,27,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,线性表,40,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,顺序查找,40,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,线性表,40,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,遍历,40,46,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,线性表,27,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,顺序查找,27,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,线性表,27,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,查找,遍历,27,46,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,顺序查找,18,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,线性表,18,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,遍历,18,46,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,顺序查找,线性表,0,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,顺序查找,遍历,0,46,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若相等则查找成功，若遍历完整个线性表都未找到相等元素,线性表,遍历,6,46,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,路径,叶子节点,27,15,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,路径,树的高度,27,0,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,路径,根节点,27,6,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,叶子节点,树的高度,15,0,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,叶子节点,根节点,15,6,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,线性表,插入,8,26,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,线性表,删除,8,38,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,插入,队列,26,0,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,插入,删除,26,38,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,队列,删除,0,38,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,线性表,插入,8,26,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,线性表,删除,8,38,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,插入,队列,26,0,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,插入,删除,26,38,CON,CON
队列是一种特殊的线性表，其核心性质是只允许在一端进行插入操作，而在另一端进行删除操作，遵循先进先出的原则,队列,删除,0,38,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，相邻元素之间存在一对一的线性关系,数据元素,数据类型,15,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，相邻元素之间存在一对一的线性关系,数据元素,空表,15,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，相邻元素之间存在一对一的线性关系,数据元素,线性表,15,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，相邻元素之间存在一对一的线性关系,数据类型,空表,8,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，相邻元素之间存在一对一的线性关系,数据类型,线性表,8,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，相邻元素之间存在一对一的线性关系,空表,线性表,37,0,CON,CON
树的度的核心特征是树中所有结点的度的最大值即树内各结点的度的取值范围中的最大值就是树的度,树的度,树的度,0,41,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,线性表,47,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,数据元素,47,15,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,数据类型,47,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,空表,47,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,线性表,47,42,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,线性表,数据元素,0,15,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,线性表,数据类型,0,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,线性表,空表,0,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,线性表,线性表,0,42,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,数据类型,15,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,空表,15,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据元素,线性表,15,42,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据类型,空表,8,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,数据类型,线性表,8,42,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中n≥0，当n=0时为空表，并且线性表中的数据元素之间存在一对一的线性,空表,线性表,37,42,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,34,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,6,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,34,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,10,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,10,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,21,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法，其特点包括能将复杂问题转化为简单重复,迭代法,迭代,0,24,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,二叉树,38,17,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,完全二叉树,38,0,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,完全二叉树,17,0,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,叶子节点,树的高度,15,0,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,叶子节点,路径,15,24,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,叶子节点,根节点,15,6,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,24,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
树的高度是从根节点开始，到最远叶子节点的最长简单路径上的边数,路径,根节点,24,6,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,路径,遍历,12,31,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,路径,回路,12,0,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,路径,路径,12,45,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,路径,回路,12,17,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,遍历,回路,31,0,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,遍历,路径,31,45,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,遍历,回路,31,17,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,回路,路径,0,45,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,回路,回路,0,17,CON,CON
回路的核心特征是存在一条路径能够从回路中的某一顶点出发，沿着边遍历，最终回到该起始顶点，且路径中经过的顶点和边均不重复（除,路径,回路,45,17,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,尾节点,访问,14,58,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,尾节点,访问,14,51,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,尾节点,链表,14,39,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,指针,58,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,头节点,58,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,链表,58,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,访问,58,51,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,链表,58,39,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,循环链表,58,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,指针,访问,18,51,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,指针,链表,18,39,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,头节点,访问,23,51,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,头节点,链表,23,39,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,链表,访问,10,51,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,链表,链表,10,39,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,链表,51,39,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,访问,循环链表,51,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构使得链表中各个节点可以依次被访问而不会出现访问越界的情况,链表,循环链表,39,0,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,排序,堆排序,28,0,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,排序,数组,28,30,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,排序,排序,28,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,排序,堆,28,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,排序,堆,28,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,堆排序,数组,0,30,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,堆排序,排序,0,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,堆排序,堆,0,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,堆排序,堆,0,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,数组,排序,30,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,数组,堆,30,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,数组,堆,30,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,排序,堆,20,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,排序,堆,20,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后调整,堆,堆,37,7,CON,CON
完全二叉树是除最后一层外每层节点数满且最后一层靠左排列的二叉树,二叉树,完全二叉树,28,0,CON,CON
抽象数据类型是对数据及操作进行抽象描述的数据类型,抽象数据类型,数据类型,0,20,CON,CON
快速排序是对数组进行排序的一种算法，它选择一个基准值，将数组分为两部分，小于基准值的放在左边，大于基准值的放在右边，然后对左右,数组,数组,28,6,CON,CON
快速排序是对数组进行排序的一种算法，它选择一个基准值，将数组分为两部分，小于基准值的放在左边，大于基准值的放在右边，然后对左右,数组,快速排序,28,0,CON,CON
快速排序是对数组进行排序的一种算法，它选择一个基准值，将数组分为两部分，小于基准值的放在左边，大于基准值的放在右边，然后对左右,数组,排序,28,10,CON,CON
快速排序是对数组进行排序的一种算法，它选择一个基准值，将数组分为两部分，小于基准值的放在左边，大于基准值的放在右边，然后对左右,数组,快速排序,6,0,CON,CON
快速排序是对数组进行排序的一种算法，它选择一个基准值，将数组分为两部分，小于基准值的放在左边，大于基准值的放在右边，然后对左右,数组,排序,6,10,CON,CON
快速排序是对数组进行排序的一种算法，它选择一个基准值，将数组分为两部分，小于基准值的放在左边，大于基准值的放在右边，然后对左右,快速排序,排序,0,10,CON,CON
递归基础是递归定义中满足特定条件的初始情况其核心性质是具有明确的、无需进一步递归即可确定的定义值或状态,递归,递归,5,38,CON,CON
递归基础是递归定义中满足特定条件的初始情况其核心性质是具有明确的、无需进一步递归即可确定的定义值或状态,递归,递归基础,5,0,CON,CON
递归基础是递归定义中满足特定条件的初始情况其核心性质是具有明确的、无需进一步递归即可确定的定义值或状态,递归,递归基础,38,0,CON,CON
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，其强调数据的逻辑结构和相关操作而不依赖于具体的实现细节,抽象数据类型,逻辑结构,0,34,CON,CON
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过下标直接访问元素，时间复杂度为O(1),访问,时间复杂度,40,45,CON,CON
平衡二叉树左右子树高度差绝对值不超过1且左右子树都是平衡二叉树,子树,平衡二叉树,22,26,CON,CON
平衡二叉树左右子树高度差绝对值不超过1且左右子树都是平衡二叉树,子树,子树,22,7,CON,CON
平衡二叉树左右子树高度差绝对值不超过1且左右子树都是平衡二叉树,子树,平衡二叉树,22,0,CON,CON
平衡二叉树左右子树高度差绝对值不超过1且左右子树都是平衡二叉树,平衡二叉树,子树,26,7,CON,CON
平衡二叉树左右子树高度差绝对值不超过1且左右子树都是平衡二叉树,平衡二叉树,平衡二叉树,26,0,CON,CON
平衡二叉树左右子树高度差绝对值不超过1且左右子树都是平衡二叉树,子树,平衡二叉树,7,0,CON,CON
算法效率的定义的核心特征是指算法执行所需要的时间和空间资源与问题规模之间的关系，通常用时间复杂度和空间复杂度来衡量，时间复杂度关注算法执行,时间复杂度,时间复杂度,43,58,CON,CON
算法效率的定义的核心特征是指算法执行所需要的时间和空间资源与问题规模之间的关系，通常用时间复杂度和空间复杂度来衡量，时间复杂度关注算法执行,时间复杂度,空间复杂度,43,49,CON,CON
算法效率的定义的核心特征是指算法执行所需要的时间和空间资源与问题规模之间的关系，通常用时间复杂度和空间复杂度来衡量，时间复杂度关注算法执行,时间复杂度,空间复杂度,58,49,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表尾,表头,47,44,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表尾,线性表,47,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表尾,数据元素,47,15,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表尾,表头,47,29,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表尾,表尾,47,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表尾,数据类型,47,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表头,线性表,44,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表头,数据元素,44,15,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表头,表头,44,29,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表头,表尾,44,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表头,数据类型,44,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,线性表,数据元素,0,15,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,线性表,表头,0,29,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,线性表,表尾,0,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,线性表,数据类型,0,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,数据元素,表头,15,29,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,数据元素,表尾,15,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,数据元素,数据类型,15,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表头,表尾,29,37,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表头,数据类型,29,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有唯一的表头元素、唯一的表尾元素，且除表头和表尾元素外每个元素有且,表尾,数据类型,37,8,CON,CON
双向链表是一种每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针的数据结构,指针,双向链表,22,0,CON,CON
双向链表是一种每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针的数据结构,指针,指针,22,35,CON,CON
双向链表是一种每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针的数据结构,双向链表,指针,0,35,CON,CON
算法效率是指算法执行所需的时间和空间资源的量度它反映了算法在解决特定问题时的优劣程度体现为算法的时间复杂度和空间复杂度等指标,空间复杂度,时间复杂度,54,48,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,18,57,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,54,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,18,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,54,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,57,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,54,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,54,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,15,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点,链表,邻接表,35,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的边数,树的深度,路径,0,24,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的边数,树的深度,根节点,0,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的边数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的边数,路径,根节点,24,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的边数,路径,叶子节点,24,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的边数,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,路径,根节点,20,6,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,线性表,指针,11,48,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,线性表,链表,11,63,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,线性表,数据元素,11,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,线性表,访问,11,59,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,线性表,指针,11,56,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,线性表,头节点,11,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,指针,链表,48,63,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,指针,数据元素,48,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,指针,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,指针,访问,48,59,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,指针,指针,48,56,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,指针,头节点,48,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,链表,数据元素,63,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,链表,单链表,63,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,链表,访问,63,59,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,链表,指针,63,56,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,链表,头节点,63,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,数据元素,单链表,33,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,数据元素,访问,33,59,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,数据元素,指针,33,56,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,数据元素,头节点,33,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,单链表,访问,0,59,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,单链表,指针,0,56,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,单链表,头节点,0,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,访问,指针,59,56,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,访问,头节点,59,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点指针来访问整个链表,指针,头节点,56,53,CON,CON
对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应，这就是映射定义的核心特征,集合,映射,2,36,CON,CON
对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应，这就是映射定义的核心特征,集合,集合,2,15,CON,CON
对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应，这就是映射定义的核心特征,映射,集合,36,15,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,遍历,27,10,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,遍历,27,59,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,图,27,9,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,访问,27,35,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,广度优先搜索,27,0,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,访问,27,21,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,遍历,10,59,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,图,10,9,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,访问,10,35,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,广度优先搜索,10,0,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,访问,10,21,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,图,59,9,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,访问,59,35,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,广度优先搜索,59,0,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,遍历,访问,59,21,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,图,访问,9,35,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,图,广度优先搜索,9,0,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,图,访问,9,21,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,广度优先搜索,35,0,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,访问,访问,35,21,CON,CON
广度优先搜索是一种图遍历算法，按照层次依次访问节点，先访问起始节点，再访问其邻接节点，然后是邻接节点的邻接节点等，直到遍历,广度优先搜索,访问,0,21,CON,CON
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出,队列,队列,31,0,CON,CON
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出,队列,队列,31,17,CON,CON
队列的核心特征是先进先出，即先进入队列的元素会先被取出，后进入队列的元素后被取出,队列,队列,0,17,CON,CON
线性查找是按顺序逐个检查数据元素直至找到目标元素的查找方法,查找,查找,2,25,CON,CON
线性查找是按顺序逐个检查数据元素直至找到目标元素的查找方法,查找,数据元素,2,12,CON,CON
线性查找是按顺序逐个检查数据元素直至找到目标元素的查找方法,查找,数据元素,25,12,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,树的节点,指针,0,31,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,树的节点,子节点,0,35,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,树的节点,树的节点,0,41,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,树的节点,数据元素,0,14,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,树的节点,子节点,0,27,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,指针,子节点,31,35,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,指针,树的节点,31,41,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,指针,数据元素,31,14,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,指针,子节点,31,27,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,子节点,树的节点,35,41,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,子节点,数据元素,35,14,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,子节点,子节点,35,27,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,树的节点,数据元素,41,14,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,树的节点,子节点,41,27,CON,CON
树的节点的核心特征是具有一个数据元素以及零个或多个指向子节点的指针这些子节点同样是树的节点并且每个节点在树的结构中具有特定的,数据元素,子节点,14,27,CON,CON
循环链表是尾节点指针指向头节点的链表结构,尾节点,指针,5,8,CON,CON
循环链表是尾节点指针指向头节点的链表结构,尾节点,链表,5,16,CON,CON
循环链表是尾节点指针指向头节点的链表结构,尾节点,头节点,5,12,CON,CON
循环链表是尾节点指针指向头节点的链表结构,尾节点,循环链表,5,0,CON,CON
循环链表是尾节点指针指向头节点的链表结构,指针,链表,8,16,CON,CON
循环链表是尾节点指针指向头节点的链表结构,指针,头节点,8,12,CON,CON
循环链表是尾节点指针指向头节点的链表结构,指针,循环链表,8,0,CON,CON
循环链表是尾节点指针指向头节点的链表结构,链表,头节点,16,12,CON,CON
循环链表是尾节点指针指向头节点的链表结构,链表,循环链表,16,0,CON,CON
循环链表是尾节点指针指向头节点的链表结构,头节点,循环链表,12,0,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径相连,根节点,子节点,20,35,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径相连,根节点,路径,20,55,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径相连,子节点,路径,35,55,CON,CON
算法效率的特点的核心性质包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需额外空间随输入,空间复杂度,时间复杂度,20,26,CON,CON
算法效率的特点的核心性质包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需额外空间随输入,空间复杂度,空间复杂度,20,52,CON,CON
算法效率的特点的核心性质包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需额外空间随输入,空间复杂度,时间复杂度,20,14,CON,CON
算法效率的特点的核心性质包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需额外空间随输入,时间复杂度,空间复杂度,26,52,CON,CON
算法效率的特点的核心性质包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需额外空间随输入,时间复杂度,时间复杂度,26,14,CON,CON
算法效率的特点的核心性质包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需额外空间随输入,空间复杂度,时间复杂度,52,14,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,前驱节点,链表,40,7,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,前驱节点,遍历,40,63,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,前驱节点,后继节点,40,45,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,前驱节点,指针,40,32,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,前驱节点,指针,40,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,前驱节点,双向链表,40,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,链表,遍历,7,63,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,链表,后继节点,7,45,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,链表,指针,7,32,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,链表,指针,7,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,遍历,后继节点,63,45,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,遍历,指针,63,32,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,遍历,指针,63,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,遍历,双向链表,63,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,后继节点,指针,45,32,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,后继节点,指针,45,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,后继节点,双向链表,45,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,指针,指针,32,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,指针,双向链表,32,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，通过这些指针可在两个方向上遍历,指针,双向链表,54,0,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,队列,遍历,54,13,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,队列,广度优先搜索,54,0,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,队列,访问,54,39,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,队列,访问,54,33,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,遍历,广度优先搜索,13,0,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,遍历,访问,13,39,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,遍历,访问,13,33,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,广度优先搜索,访问,0,39,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,广度优先搜索,访问,0,33,CON,CON
广度优先搜索是一种图或树的遍历算法，它从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直到,访问,访问,39,33,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,二分查找,15,0,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,查找,15,24,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,二分查找,查找,0,24,CON,CON
顺序表是一种线性表，其核心性质包括用一组地址连续的存储单元依次存储数据元素，数据元素在内存中按逻辑顺序依次存放，并且可以通过数组下标直接,线性表,数据元素,6,38,CON,CON
顺序表是一种线性表，其核心性质包括用一组地址连续的存储单元依次存储数据元素，数据元素在内存中按逻辑顺序依次存放，并且可以通过数组下标直接,线性表,数据元素,6,33,CON,CON
顺序表是一种线性表，其核心性质包括用一组地址连续的存储单元依次存储数据元素，数据元素在内存中按逻辑顺序依次存放，并且可以通过数组下标直接,线性表,数组,6,62,CON,CON
顺序表是一种线性表，其核心性质包括用一组地址连续的存储单元依次存储数据元素，数据元素在内存中按逻辑顺序依次存放，并且可以通过数组下标直接,数据元素,数据元素,38,33,CON,CON
顺序表是一种线性表，其核心性质包括用一组地址连续的存储单元依次存储数据元素，数据元素在内存中按逻辑顺序依次存放，并且可以通过数组下标直接,数据元素,数组,38,62,CON,CON
顺序表是一种线性表，其核心性质包括用一组地址连续的存储单元依次存储数据元素，数据元素在内存中按逻辑顺序依次存放，并且可以通过数组下标直接,数据元素,数组,33,62,CON,CON
无向图是由顶点集和边集组成的图，其中边集是顶点集的无序对集合且每条边都连接两个顶点,集合,无向图,28,0,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,数据元素,排序,36,24,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,数据元素,排序,36,12,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,数据元素,排序,36,64,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,数据元素,冒泡排序,36,0,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,排序,排序,24,12,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,排序,排序,24,64,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,排序,冒泡排序,24,0,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,排序,排序,12,64,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,排序,冒泡排序,12,0,CON,CON
冒泡排序是一种比较简单的排序算法，它重复地走访要排序的数列，一次比较两个数据元素，如果顺序错误就把它们交换过来，直到整个数列都被排序,排序,冒泡排序,64,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它不仅要存储数据元素本身的值，还要存储数据元素之间的逻辑关系,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它不仅要存储数据元素本身的值，还要存储数据元素之间的逻辑关系,存储结构,数据元素,0,32,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它不仅要存储数据元素本身的值，还要存储数据元素之间的逻辑关系,存储结构,数据元素,0,45,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它不仅要存储数据元素本身的值，还要存储数据元素之间的逻辑关系,数据元素,数据元素,6,32,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它不仅要存储数据元素本身的值，还要存储数据元素之间的逻辑关系,数据元素,数据元素,6,45,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它不仅要存储数据元素本身的值，还要存储数据元素之间的逻辑关系,数据元素,数据元素,32,45,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,查找,19,44,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,删除,19,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,插入,19,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,时间复杂度,19,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,哈希表,44,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,删除,44,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,插入,44,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,时间复杂度,44,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,哈希函数,44,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,删除,0,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,插入,0,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,时间复杂度,0,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,哈希函数,0,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,删除,插入,41,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,删除,时间复杂度,41,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,删除,哈希函数,41,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,插入,时间复杂度,39,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,插入,哈希函数,39,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,时间复杂度,哈希函数,61,13,CON,CON
树的查找的核心特征是基于树的层次结构，从根节点开始，按照特定规则依次比较节点值，以确定目标元素是否存在于树中，若存在则返回,查找,根节点,2,20,CON,CON
树的节点是树结构中的基本组成单元，包含数据元素以及指向其子节点的若干分支,树的节点,数据元素,0,19,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，对于树中的任一结点，若其序号i满足1≤i≤n，则其左孩子序号为2i,二叉树,完全二叉树,17,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，用于描述图中,边的权重,图,43,6,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，用于描述图中,边的权重,加权图,43,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，用于描述图中,图,加权图,6,0,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应,集合,映射,22,0,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应,集合,集合,22,10,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一的一个元素与之对应,映射,集合,0,10,CON,CON
顺序查找的核心性质是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列,遍历,查找,51,30,CON,CON
顺序查找的核心性质是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列,遍历,顺序查找,51,0,CON,CON
顺序查找的核心性质是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列,查找,顺序查找,30,0,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应,集合,映射,22,0,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应,集合,集合,22,10,CON,CON
映射的核心性质是对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应,映射,集合,0,10,CON,CON
交换排序是通过比较和交换元素位置来逐步将无序序列转化为有序序列，其核心性质是在排序过程中不断对序列中的元素进行两两比较，若顺序错误就,排序,交换排序,39,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果该二叉树的深度为h，那么它的节点总数为2^h - 1,二叉树,满二叉树,7,0,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果该二叉树的深度为h，那么它的节点总数为2^h - 1,二叉树,二叉树,7,30,CON,CON
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果该二叉树的深度为h，那么它的节点总数为2^h - 1,满二叉树,二叉树,0,30,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
根节点是树结构中没有前驱节点，处于树的起始位置，具有特殊地位的节点,根节点,前驱节点,0,10,CON,CON
比较排序通过元素间比较确定最终排序顺序,排序,比较排序,15,0,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,图,无向图,6,40,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,图,有向图,6,50,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,图,有向图,6,0,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,图,有向图,6,34,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,无向图,有向图,40,50,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,无向图,有向图,40,0,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,无向图,有向图,40,34,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,有向图,有向图,50,0,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,有向图,有向图,50,34,CON,CON
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,有向图,有向图,0,34,CON,CON
加权图是一种图结构其中每条边都被赋予一个数值作为权重用于表示边的某种代价、距离、容量等相关属性,图,加权图,6,0,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆排序,堆,0,17,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆排序,数组,0,10,CON,CON
堆排序的核心特征是将数组构建成一个堆，其中大顶堆每个节点的值都大于或等于其子节点的值，小顶堆每个节点的值都小于或等于其子节点,堆,数组,17,10,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,线性表,访问,11,48,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,线性表,链表,11,50,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,线性表,指针,11,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,线性表,头节点,11,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,线性表,指针,11,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,访问,链表,48,50,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,访问,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,访问,指针,48,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,访问,头节点,48,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,访问,指针,48,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,链表,单链表,50,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,链表,指针,50,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,链表,头节点,50,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,链表,指针,50,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,单链表,指针,0,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,单链表,头节点,0,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,单链表,指针,0,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,指针,头节点,29,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,指针,指针,29,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点,头节点,指针,42,25,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,树,回溯法,47,0,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,树,根节点,47,37,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,树,深度优先搜索,47,27,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,回溯法,根节点,0,37,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,回溯法,深度优先搜索,0,27,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,根节点,深度优先搜索,37,27,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
递归基础是递归函数中终止递归调用的初始条件,递归,递归基础,12,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,遍历,12,3,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,遍历,12,9,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,访问,12,24,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,子树,12,20,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,子树,12,53,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,访问,12,41,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,右子树,12,43,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,访问,12,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,二叉树,12,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,遍历,12,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,根节点,12,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,访问,12,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,左子树,12,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,遍历,12,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,遍历,3,9,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,3,24,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,子树,3,20,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,子树,3,53,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,3,41,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,右子树,3,43,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,3,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,二叉树,3,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,遍历,3,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,根节点,3,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,3,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,左子树,3,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,遍历,3,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,9,24,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,子树,9,20,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,子树,9,53,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,9,41,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,右子树,9,43,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,9,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,二叉树,9,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,遍历,9,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,根节点,9,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,9,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,左子树,9,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,遍历,9,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,子树,24,20,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,子树,24,53,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,访问,24,41,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,右子树,24,43,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,访问,24,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,二叉树,24,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,遍历,24,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,根节点,24,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,访问,24,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,左子树,24,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,遍历,24,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,子树,20,53,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,访问,20,41,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,右子树,20,43,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,访问,20,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,二叉树,20,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,遍历,20,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,根节点,20,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,访问,20,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,左子树,20,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,遍历,20,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,访问,53,41,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,右子树,53,43,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,访问,53,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,二叉树,53,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,遍历,53,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,根节点,53,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,访问,53,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,左子树,53,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,子树,遍历,53,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,右子树,41,43,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,访问,41,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,二叉树,41,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,遍历,41,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,根节点,41,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,访问,41,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,左子树,41,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,遍历,41,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,右子树,访问,43,16,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,右子树,二叉树,43,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,右子树,遍历,43,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,右子树,根节点,43,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,右子树,访问,43,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,右子树,左子树,43,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,右子树,遍历,43,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,二叉树,16,0,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,遍历,16,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,根节点,16,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,访问,16,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,左子树,16,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,遍历,16,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,二叉树,遍历,0,29,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,二叉树,根节点,0,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,二叉树,访问,0,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,二叉树,左子树,0,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,二叉树,遍历,0,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,根节点,29,37,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,访问,29,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,左子树,29,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,遍历,遍历,29,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,访问,37,35,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,左子树,37,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,根节点,遍历,37,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,左子树,35,31,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,访问,遍历,35,49,CON,CON
二叉树遍历分为前序遍历中根节点先访问左右子树随后访问，中序遍历左子树先访问根节点再访问右子树，后序遍历左右子树,左子树,遍历,31,49,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻的特点，其存储单元是连续的，可通过数组下标直接计算出元素的存储地址，支持随机访问,数组,访问,41,62,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,满二叉树,二叉树,0,24,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,右子树,左子树,52,48,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,右子树,根节点,52,44,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,右子树,遍历,52,4,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,右子树,二叉树,52,0,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,右子树,遍历,52,41,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,右子树,二叉树,52,18,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,右子树,访问,52,16,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,左子树,根节点,48,44,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,左子树,遍历,48,4,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,左子树,二叉树,48,0,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,左子树,遍历,48,41,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,左子树,二叉树,48,18,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,左子树,访问,48,16,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,根节点,遍历,44,4,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,根节点,二叉树,44,0,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,根节点,遍历,44,41,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,根节点,二叉树,44,18,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,根节点,访问,44,16,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,遍历,二叉树,4,0,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,遍历,遍历,4,41,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,遍历,二叉树,4,18,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,遍历,访问,4,16,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,二叉树,遍历,0,41,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,二叉树,二叉树,0,18,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,二叉树,访问,0,16,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,遍历,二叉树,41,18,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,遍历,访问,41,16,CON,CON
二叉树的遍历是指按照某种特定顺序访问二叉树中的每个节点一次且仅一次的操作，包括前序遍历（根节点、左子树、右子树）、,二叉树,访问,18,16,CON,CON
迭代法是一种不断用变量的旧值递推新值，从初始值出发通过有限步骤逐步逼近问题解的方法，其特点包括计算过程相对简单、易于编程实现,迭代法,递推,0,14,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,逻辑结构,存储结构,12,34,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,逻辑结构,数据元素,12,55,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,逻辑结构,数据元素,12,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,逻辑结构,线性表,12,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,存储结构,数据元素,34,55,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,存储结构,数据元素,34,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,存储结构,线性表,34,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,数据元素,数据元素,55,17,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,数据元素,线性表,55,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其物理存储结构是用一组地址连续的存储单元依次存储数据元素，使得逻辑上,数据元素,线性表,17,6,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,树,叶子节点,58,12,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,树,路径,58,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,树,树的深度,58,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,树,根节点,58,6,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,叶子节点,路径,12,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,叶子节点,树的深度,12,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,叶子节点,根节点,12,6,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,路径,树的深度,21,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,路径,根节点,21,6,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构和节点分布情况，不同类型的树,树的深度,根节点,0,6,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和操作该内存地址所存储的数据,访问,指针,31,25,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和操作该内存地址所存储的数据,访问,指针,31,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和操作该内存地址所存储的数据,指针,指针,25,0,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
比较排序是一种排序算法，其核心性质是通过比较元素之间的大小关系来确定元素的相对顺序从而实现排序,排序,排序,45,7,CON,CON
比较排序是一种排序算法，其核心性质是通过比较元素之间的大小关系来确定元素的相对顺序从而实现排序,排序,比较排序,45,0,CON,CON
比较排序是一种排序算法，其核心性质是通过比较元素之间的大小关系来确定元素的相对顺序从而实现排序,排序,比较排序,7,0,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，即任何一个对象要么是该集合的元素，要么不是，,集合,集合,0,30,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，即任何一个对象要么是该集合的元素，要么不是，,集合,集合,0,54,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，即任何一个对象要么是该集合的元素，要么不是，,集合,集合,30,54,CON,CON
递归基础是递归函数中无需递归调用的最简情况,递归,递归基础,12,0,CON,CON
二分查找是在有序数组中通过不断将区间分成两部分，每次根据中间元素与目标值的比较结果，缩小查找区间，直至找到目标值或确定目标值不存在的,数组,查找,8,44,CON,CON
二分查找是在有序数组中通过不断将区间分成两部分，每次根据中间元素与目标值的比较结果，缩小查找区间，直至找到目标值或确定目标值不存在的,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将区间分成两部分，每次根据中间元素与目标值的比较结果，缩小查找区间，直至找到目标值或确定目标值不存在的,查找,二分查找,44,0,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,指针,单链表,44,0,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,指针,链表,44,59,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,指针,指针,44,37,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,指针,数据元素,44,22,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,单链表,链表,0,59,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,单链表,指针,0,37,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,单链表,数据元素,0,22,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,链表,指针,59,37,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,链表,数据元素,59,22,CON,CON
单链表是一种线性数据结构，其每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成链表，且只有一个头,指针,数据元素,37,22,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继,数据元素,非线性结构,18,0,CON,CON
指针的核心性质是其存储了变量的内存地址，通过该地址能够对所指向的变量进行访问和操作,访问,指针,36,0,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,59,2,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,59,28,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,59,49,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,2,28,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,2,49,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,28,49,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把排序好的子序列合并成一个有序序列，其核心特征是通过分治策略将问题不断分解,排序,排序,21,26,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把排序好的子序列合并成一个有序序列，其核心特征是通过分治策略将问题不断分解,排序,归并排序,21,0,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把排序好的子序列合并成一个有序序列，其核心特征是通过分治策略将问题不断分解,排序,归并排序,26,0,CON,CON
二叉树是一种每个节点最多有两个子树的树结构,子树,二叉树,15,0,CON,CON
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h,二叉树,完全二叉树,8,0,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点最多有一个父节点，除根节点外的其他节点被分为若干互不相交的有限集合，,根节点,根节点,20,39,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点最多有一个父节点，除根节点外的其他节点被分为若干互不相交的有限集合，,根节点,父节点,20,34,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点最多有一个父节点，除根节点外的其他节点被分为若干互不相交的有限集合，,根节点,集合,20,60,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点最多有一个父节点，除根节点外的其他节点被分为若干互不相交的有限集合，,根节点,父节点,39,34,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点最多有一个父节点，除根节点外的其他节点被分为若干互不相交的有限集合，,根节点,集合,39,60,CON,CON
树是一种非线性的数据结构，它有且仅有一个根节点，且每个节点最多有一个父节点，除根节点外的其他节点被分为若干互不相交的有限集合，,父节点,集合,34,60,CON,CON
二分查找是在有序数组中，通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直到找到目标值或确定目标值不存在，具有每次比较可,数组,查找,8,38,CON,CON
二分查找是在有序数组中，通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直到找到目标值或确定目标值不存在，具有每次比较可,数组,数组,8,17,CON,CON
二分查找是在有序数组中，通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直到找到目标值或确定目标值不存在，具有每次比较可,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中，通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直到找到目标值或确定目标值不存在，具有每次比较可,查找,数组,38,17,CON,CON
二分查找是在有序数组中，通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直到找到目标值或确定目标值不存在，具有每次比较可,查找,二分查找,38,0,CON,CON
二分查找是在有序数组中，通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直到找到目标值或确定目标值不存在，具有每次比较可,数组,二分查找,17,0,CON,CON
比较排序的核心性质是通过元素间的比较来确定元素间的相对次序从而实现排序,排序,比较排序,33,0,CON,CON
迭代法的核心特征是通过从一个初始估计值开始，利用相同的计算规则或公式不断重复计算，逐步逼近问题的精确解，每次迭代产生的结果会作为下,迭代法,迭代,0,54,CON,CON
根节点是树结构中没有前驱节点且唯一的起始节点，它位于树的顶端，是树整体结构的核心起始点,根节点,前驱节点,0,10,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的相互关系以及数据的组织形式,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的相互关系以及数据的组织形式,逻辑结构,存储结构,3,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的相互关系以及数据的组织形式,逻辑结构,数据元素,3,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的相互关系以及数据的组织形式,数据元素,存储结构,9,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的相互关系以及数据的组织形式,数据元素,数据元素,9,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的相互关系以及数据的组织形式,存储结构,数据元素,28,36,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，树中的其他节点都直接或间接连接到根节点，根节点是树的起始点和层次结构的基础,根节点,根节点,43,39,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，树中的其他节点都直接或间接连接到根节点，根节点是树的起始点和层次结构的基础,根节点,父节点,43,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，树中的其他节点都直接或间接连接到根节点，根节点是树的起始点和层次结构的基础,根节点,根节点,43,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，树中的其他节点都直接或间接连接到根节点，根节点是树的起始点和层次结构的基础,根节点,父节点,39,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，树中的其他节点都直接或间接连接到根节点，根节点是树的起始点和层次结构的基础,根节点,根节点,39,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，树中的其他节点都直接或间接连接到根节点，根节点是树的起始点和层次结构的基础,父节点,根节点,19,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,排序,32,7,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,32,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,排序,32,46,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,比较排序,7,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,排序,排序,7,46,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的相对位置从而实现排序,比较排序,排序,0,46,CON,CON
按特定顺序访问二叉树中所有节点的操作是二叉树遍历核心概念,遍历,二叉树,22,7,CON,CON
按特定顺序访问二叉树中所有节点的操作是二叉树遍历核心概念,遍历,访问,22,5,CON,CON
按特定顺序访问二叉树中所有节点的操作是二叉树遍历核心概念,遍历,二叉树,22,19,CON,CON
按特定顺序访问二叉树中所有节点的操作是二叉树遍历核心概念,二叉树,访问,7,5,CON,CON
按特定顺序访问二叉树中所有节点的操作是二叉树遍历核心概念,二叉树,二叉树,7,19,CON,CON
按特定顺序访问二叉树中所有节点的操作是二叉树遍历核心概念,访问,二叉树,5,19,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,深度优先搜索,路径,0,36,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,深度优先搜索,遍历,0,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,路径,遍历,36,11,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,线性表,队列,8,27,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,线性表,队列,8,34,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,27,34,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,27,0,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,34,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正常开始并逐步展开的起始点，具有能直接给出结果而,递归,递归,5,21,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正常开始并逐步展开的起始点，具有能直接给出结果而,递归,递归,5,38,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正常开始并逐步展开的起始点，具有能直接给出结果而,递归,递归基础,5,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正常开始并逐步展开的起始点，具有能直接给出结果而,递归,递归,21,38,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正常开始并逐步展开的起始点，具有能直接给出结果而,递归,递归基础,21,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正常开始并逐步展开的起始点，具有能直接给出结果而,递归,递归基础,38,0,CON,CON
完全二叉树是一种特殊的二叉树，其除了最后一层外，每一层上的节点数都是满的，并且最后一层上的节点都集中在最左边的若干,完全二叉树,二叉树,0,11,CON,CON
栈是一种后进先出的数据结构，其操作主要集中在栈顶，元素按照后进先出的顺序进行入栈和出栈操作,出栈,入栈,41,38,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,完全二叉树,满二叉树,0,39,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,二叉树,38,17,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,完全二叉树,38,0,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,完全二叉树,17,0,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而对序列进行排序的排序方法其核心性质是通过元素间的比较操作逐步构建有序序列,排序,排序,28,31,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而对序列进行排序的排序方法其核心性质是通过元素间的比较操作逐步构建有序序列,排序,比较排序,28,0,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而对序列进行排序的排序方法其核心性质是通过元素间的比较操作逐步构建有序序列,排序,比较排序,31,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,路径,6,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,路径,0,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,路径,叶子节点,22,12,CON,CON
指针的核心特征是其存储的是变量的内存地址，通过该地址可以直接访问和操作所指向变量的值，使得程序能够灵活地处理数据的存储位置和间接访问,指针,访问,0,64,CON,CON
指针的核心特征是其存储的是变量的内存地址，通过该地址可以直接访问和操作所指向变量的值，使得程序能够灵活地处理数据的存储位置和间接访问,指针,访问,0,30,CON,CON
指针的核心特征是其存储的是变量的内存地址，通过该地址可以直接访问和操作所指向变量的值，使得程序能够灵活地处理数据的存储位置和间接访问,访问,访问,64,30,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,存储结构,62,0,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,数据元素,62,31,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,插入,62,70,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,访问,62,67,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,数据元素,62,13,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,存储结构,数据元素,0,31,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,存储结构,插入,0,70,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,存储结构,访问,0,67,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,存储结构,数据元素,0,13,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,插入,31,70,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,访问,31,67,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,数据元素,数据元素,31,13,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,插入,访问,70,67,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,插入,数据元素,70,13,CON,CON
存储结构定义的核心性质包括数据元素在计算机内存中的存储方式以及数据元素之间的逻辑关系如何通过存储方式来体现，还包括如何实现对数据元素的访问、插入,访问,数据元素,67,13,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,父节点,子节点,28,44,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,父节点,根节点,28,19,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,父节点,树的节点,28,0,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,父节点,根节点,28,12,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,子节点,根节点,44,19,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,子节点,树的节点,44,0,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,子节点,根节点,44,12,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,根节点,树的节点,19,0,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,根节点,根节点,19,12,CON,CON
树的节点具有有且仅有一个根节点、每个非根节点有且仅有一个父节点、每个节点可以有零个或多个子节点以及节点之间具有层次关系等特点,树的节点,根节点,0,12,CON,CON
回路是在图中从一顶点出发又回到该顶点的路径,回路,路径,0,19,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,插入,8,36,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,删除,8,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,删除,36,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,队列,36,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,删除,队列,23,0,CON,CON
简单排序是对给定元素序列按照特定规则进行比较和交换等操作以使其呈现出特定顺序的排序方式其核心特征是通过逐次比较元素并根据比较结果进行相应,排序,简单排序,39,0,CON,CON
回路是图中从某顶点出发又回到该顶点的路径,回路,路径,0,18,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,循环链表,链表,0,43,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,循环链表,头节点,0,26,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,循环链表,遍历,0,53,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,循环链表,链表,0,10,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,循环链表,尾节点,0,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,循环链表,指针,0,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,链表,头节点,43,26,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,链表,遍历,43,53,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,链表,链表,43,10,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,链表,尾节点,43,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,链表,指针,43,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,头节点,遍历,26,53,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,头节点,链表,26,10,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,头节点,尾节点,26,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,头节点,指针,26,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,遍历,链表,53,10,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,遍历,尾节点,53,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,遍历,指针,53,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,链表,尾节点,10,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,链表,指针,10,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明显的头和尾,尾节点,指针,17,21,CON,CON
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关不同算法的空间复杂度因实现方式和数据处理需求而异可能存在,空间复杂度,空间复杂度,49,0,CON,CON
非线性结构中各数据元素之间的关系不再是简单的一对一，而是存在一对多、多对一或多对多等复杂关系，数据元素之间的前驱和后继关系不,数据元素,非线性结构,7,0,CON,CON
非线性结构中各数据元素之间的关系不再是简单的一对一，而是存在一对多、多对一或多对多等复杂关系，数据元素之间的前驱和后继关系不,数据元素,数据元素,7,47,CON,CON
非线性结构中各数据元素之间的关系不再是简单的一对一，而是存在一对多、多对一或多对多等复杂关系，数据元素之间的前驱和后继关系不,非线性结构,数据元素,0,47,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,哈希函数,哈希表,13,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,访问,遍历,18,60,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,访问,访问,18,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,遍历,广度优先搜索,60,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,遍历,访问,60,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,遍历,访问,60,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,广度优先搜索,访问,0,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,广度优先搜索,访问,0,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完同一层所有节点后再进入下一层，直到找到目标节点或遍历完所有,访问,访问,12,33,CON,CON
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树,子节点,完全二叉树,12,22,CON,CON
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树,子节点,父节点,12,6,CON,CON
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树,完全二叉树,父节点,22,6,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,访问,数组,43,0,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,访问,数据元素,43,14,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,访问,集合,43,21,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,访问,数据类型,43,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,数组,数据元素,0,14,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,数组,集合,0,21,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,数组,数据类型,0,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,数据元素,集合,14,21,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,数据元素,数据类型,14,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，其特点包括内存中连续存储可通过下标快速访问、元素类型一致方便处理、存储空间固定但可灵活定义大小,集合,数据类型,21,7,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
数据类型是一组值的集合以及定义在这组值上的一组操作的总称,数据类型,集合,0,9,CON,CON
线性查找是按顺序逐个检查数据元素以确定目标值的方法,查找,数据元素,2,12,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机中的存储方式包括顺序存储链式存储索引存储散列存储等以及数据元素之间的逻辑关系在计算机中的表示形式,物理结构,数据元素,3,51,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列为止，其核心特征是按顺序依次对每个元素进行比较查找,查找,查找,2,66,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列为止，其核心特征是按顺序依次对每个元素进行比较查找,查找,遍历,2,36,CON,CON
线性查找是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列为止，其核心特征是按顺序依次对每个元素进行比较查找,查找,遍历,66,36,CON,CON
树中各节点度的最大值即为树的度，且树中不同节点的度可能不同，度为0的节点是叶子节点，度不为0的节点为分支节点，,叶子节点,树的度,37,12,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,数据元素,物理结构,60,3,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,数据元素,数据元素,60,51,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,数据元素,数据元素,60,13,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,数据元素,数据元素,60,35,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,物理结构,数据元素,3,51,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,物理结构,数据元素,3,13,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,物理结构,数据元素,3,35,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,数据元素,数据元素,51,13,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,数据元素,数据元素,51,35,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，其中数据元素的表示包含数据元素值的表示,数据元素,数据元素,13,35,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,18,41,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,41,0,CON,CON
快速排序的核心特征是选择一个基准元素，通过一趟排序将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后,排序,数组,23,26,CON,CON
快速排序的核心特征是选择一个基准元素，通过一趟排序将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后,排序,快速排序,23,0,CON,CON
快速排序的核心特征是选择一个基准元素，通过一趟排序将数组分为两部分，使得左边部分元素都小于等于基准元素，右边部分元素都大于等于基准元素，然后,数组,快速排序,26,0,CON,CON
邻接矩阵是表示图的一种方式，其特点的核心性质包括对于有向图，矩阵中元素若表示从顶点i到顶点j有边，则对应位置为1否则,邻接矩阵,有向图,0,26,CON,CON
子节点是树结构或图结构中，直接连接在某一节点之下的节点，具有与父节点存在特定连接关系且处于其下层的特点,父节点,子节点,31,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，用于表示该边的某种属性或代价等,图,加权图,6,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,遍历,13,3,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,13,54,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,二叉树,13,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,右子树,13,43,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,递归,13,52,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,13,37,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,递归,13,35,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,13,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,根节点,13,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,左子树,13,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,遍历,13,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,13,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,遍历,13,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,3,54,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,右子树,3,43,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,递归,3,52,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,3,37,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,递归,3,35,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,3,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,根节点,3,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,左子树,3,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,遍历,3,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,3,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,遍历,3,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,二叉树,54,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,右子树,54,43,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,递归,54,52,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,54,37,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,递归,54,35,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,54,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,根节点,54,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,左子树,54,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,54,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,54,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,54,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,右子树,0,43,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,递归,0,52,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,0,37,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,递归,0,35,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,0,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,根节点,0,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,左子树,0,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,遍历,0,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,0,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,遍历,0,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,递归,43,52,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,访问,43,37,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,递归,43,35,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,访问,43,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,根节点,43,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,左子树,43,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,遍历,43,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,访问,43,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,遍历,43,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,52,37,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,递归,52,35,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,52,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,根节点,52,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,左子树,52,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,遍历,52,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,52,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,遍历,52,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,递归,37,35,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,37,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,根节点,37,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,左子树,37,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,37,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,37,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,37,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,35,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,根节点,35,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,左子树,35,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,遍历,35,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,35,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,遍历,35,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,根节点,29,31,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,左子树,29,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,29,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,29,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,29,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,左子树,31,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,遍历,31,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,访问,31,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,遍历,31,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,左子树,遍历,39,49,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,左子树,访问,39,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,左子树,遍历,39,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,49,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,遍历,49,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,21,26,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,指针,父节点,28,46,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,指针,根节点,28,32,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,指针,树的节点,28,0,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,指针,父节点,28,54,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,指针,子节点,28,24,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,指针,根节点,28,49,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,父节点,根节点,46,32,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,父节点,树的节点,46,0,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,父节点,父节点,46,54,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,父节点,子节点,46,24,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,父节点,根节点,46,49,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,根节点,树的节点,32,0,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,根节点,父节点,32,54,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,根节点,子节点,32,24,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,根节点,根节点,32,49,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,树的节点,父节点,0,54,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,树的节点,子节点,0,24,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,树的节点,根节点,0,49,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,父节点,子节点,54,24,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,父节点,根节点,54,49,CON,CON
树的节点是树结构中的基本组成单元包含数据以及指向子节点的指针且除根节点外每个节点有且仅有一个父节点根节点没有父节点,子节点,根节点,24,49,CON,CON
数组是由相同类型的数据元素按一定顺序排列组成的有限序列，这些元素存储在连续的内存单元中，可通过下标来唯一标识每个元素,数组,数据元素,0,9,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,线性表,25,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,线性表,41,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,链表,37,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,37,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,37,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,0,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,线性表,存储结构,50,20,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希函数,查找,11,48,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希函数,时间复杂度,11,58,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希函数,映射,11,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希函数,哈希表,11,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希函数,删除,11,51,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希函数,插入,11,45,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,查找,时间复杂度,48,58,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,查找,映射,48,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,查找,哈希表,48,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,查找,删除,48,51,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,查找,插入,48,45,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,时间复杂度,映射,58,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,时间复杂度,哈希表,58,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,时间复杂度,删除,58,51,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,时间复杂度,插入,58,45,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,映射,哈希表,17,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,映射,删除,17,51,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,映射,插入,17,45,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希表,删除,0,51,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,哈希表,插入,0,45,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，利用哈希值来确定元素在表中的存储位置，使得插入、查找和删除操作的平均时间复杂度为,删除,插入,51,45,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,头节点,尾节点,12,7,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,头节点,链表,12,20,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,头节点,循环链表,12,0,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,尾节点,链表,7,20,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,尾节点,循环链表,7,0,CON,CON
循环链表是一种尾节点指向头节点形成循环的链表结构,链表,循环链表,20,0,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,回路,路径,53,31,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,回路,路径,53,41,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,回路,路径,53,0,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,回路,路径,53,26,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,回路,路径,53,50,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,31,41,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,31,0,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,31,26,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,31,50,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,41,0,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,41,26,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,41,50,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,0,26,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,0,50,CON,CON
路径是图中顶点与顶点之间经过边的序列，其核心性质包括路径长度为路径上边的数目，简单路径是顶点不重复的路径，回路是起点和终点相同,路径,路径,26,50,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
引用是C++中为已存在的变量起的一个别名，通过该别名可以直接访问和操作原始变量，其定义时必须初始化且初始化后不能再引用其他变量,初始化,初始化,46,50,CON,CON
引用是C++中为已存在的变量起的一个别名，通过该别名可以直接访问和操作原始变量，其定义时必须初始化且初始化后不能再引用其他变量,初始化,访问,46,30,CON,CON
引用是C++中为已存在的变量起的一个别名，通过该别名可以直接访问和操作原始变量，其定义时必须初始化且初始化后不能再引用其他变量,初始化,访问,50,30,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,集合,图的顶点,40,33,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,集合,集合,40,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,集合,集合,40,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,集合,集合,40,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,图的顶点,集合,33,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,图的顶点,集合,33,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,图的顶点,集合,33,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,集合,集合,5,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,集合,集合,5,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素是图的顶点，关系集合中的元素是顶点之间的边,集合,集合,14,26,CON,CON
回路是在图中从一个顶点出发，沿着边连续移动，最终回到起始顶点的路径且除起始顶点外所经过的顶点不重复,路径,回路,31,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,路径,6,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,路径,0,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,路径,叶子节点,22,12,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问其所指向的变量，具有指向特定内存地址、可用于动态内存管理和函数参数,访问,指针,31,25,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问其所指向的变量，具有指向特定内存地址、可用于动态内存管理和函数参数,访问,指针,31,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问其所指向的变量，具有指向特定内存地址、可用于动态内存管理和函数参数,指针,指针,25,0,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,访问,19,36,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,遍历,19,53,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,访问,19,13,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,广度优先搜索,19,0,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,遍历,36,53,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,访问,36,13,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,广度优先搜索,36,0,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,遍历,访问,53,13,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,遍历,广度优先搜索,53,0,CON,CON
广度优先搜索是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点等，直到遍历完所有节点或找到,访问,广度优先搜索,13,0,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,父节点,遍历,16,43,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,父节点,根节点,16,0,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,父节点,树,16,47,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,父节点,树,16,58,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,遍历,根节点,43,0,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,遍历,树,43,47,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,遍历,树,43,58,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,根节点,树,0,47,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,根节点,树,0,58,CON,CON
根节点是树结构中的起始节点，没有父节点，它在树中处于最高层次，是树的入口点，通过它可以遍历整个树结构，并且它对于确定树,树,树,47,58,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,插入,11,45,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,排序,插入,7,45,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,排序,45,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,排序,45,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,插入,插入排序,45,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其核心性质是通过不断将一个数据插入到前面已排好序的序列中的适当位置,排序,插入排序,25,0,CON,CON
指针的核心特征是其存储的是变量的内存地址，通过该地址能够直接访问和操作所指向变量的值，并且指针变量本身也有自己的内存地址用于存储所,指针,指针,45,0,CON,CON
指针的核心特征是其存储的是变量的内存地址，通过该地址能够直接访问和操作所指向变量的值，并且指针变量本身也有自己的内存地址用于存储所,指针,访问,45,30,CON,CON
指针的核心特征是其存储的是变量的内存地址，通过该地址能够直接访问和操作所指向变量的值，并且指针变量本身也有自己的内存地址用于存储所,指针,访问,0,30,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,线性表,指针,11,43,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,线性表,后继节点,11,38,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,线性表,指针,11,48,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,线性表,数据元素,11,30,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,线性表,链表,11,62,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,后继节点,43,38,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,指针,43,48,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,单链表,43,0,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,数据元素,43,30,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,链表,43,62,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,后继节点,指针,38,48,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,后继节点,单链表,38,0,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,后继节点,数据元素,38,30,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,后继节点,链表,38,62,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,数据元素,48,30,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,指针,链表,48,62,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,单链表,数据元素,0,30,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,单链表,链表,0,62,CON,CON
单链表是一种链式存储的线性表，其特点的核心特征为每个节点包含数据元素以及指向后继节点的指针，通过指针依次连接各个节点从而形成链表结构，并且,数据元素,链表,30,62,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,映射,6,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,集合,6,18,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,映射,集合,0,18,CON,CON
广度优先搜索按层次依次扩展节点以遍历图或树,广度优先搜索,遍历,0,16,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,尾节点,头节点,11,21,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,尾节点,指针,11,15,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,尾节点,遍历,11,49,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,尾节点,循环链表,11,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,头节点,指针,21,15,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,头节点,遍历,21,49,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,头节点,循环链表,21,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,指针,遍历,15,49,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,指针,循环链表,15,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从表中任一节点出发均可通过遍历操作到达表中其他节点,遍历,循环链表,49,0,CON,CON
回路是图中一条至少包含一条边的、起点和终点相同的路径,路径,回路,24,0,CON,CON
邻接表是用链表存储图中顶点及与其相邻顶点信息的数据结构,链表,邻接表,5,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,插入,8,36,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,删除,8,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,插入,删除,36,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,插入,队列,36,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,删除,队列,23,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希函数,哈希表,5,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希函数,映射,5,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希表,映射,0,11,CON,CON
线性表是数据元素有序排列且有唯一前驱和后继的数据结构,数据元素,线性表,4,0,CON,CON
回溯法基础的特点是在问题求解过程中，通过深度优先搜索方式，按照某种规则不断尝试，当发现当前尝试不满足条件或无法达到目标时就退回上一步,回溯法,深度优先搜索,0,20,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,访问,44,18,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,访问,44,24,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,访问,44,34,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,广度优先搜索,44,0,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,访问,18,24,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,访问,18,34,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,广度优先搜索,18,0,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,访问,24,34,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,广度优先搜索,24,0,CON,CON
广度优先搜索的核心性质是按照层次依次访问节点，先访问的节点层次浅，后访问的节点层次深，在访问完当前层次的所有节点后再进入下一层,访问,广度优先搜索,34,0,CON,CON
深度优先搜索按深度依次访问节点直至无法深入再回溯,深度优先搜索,访问,0,11,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点所经过的最长路径上的边数或节点数,路径,根节点,29,13,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点所经过的最长路径上的边数或节点数,路径,叶子节点,29,19,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点所经过的最长路径上的边数或节点数,路径,树的高度,29,0,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点所经过的最长路径上的边数或节点数,根节点,叶子节点,13,19,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点所经过的最长路径上的边数或节点数,根节点,树的高度,13,0,CON,CON
树的高度的核心特征是从树的根节点到最远叶子节点所经过的最长路径上的边数或节点数,叶子节点,树的高度,19,0,CON,CON
堆排序基于堆结构，通过选择和交换实现数据排序,堆排序,排序,0,20,CON,CON
堆排序基于堆结构，通过选择和交换实现数据排序,堆排序,堆,0,5,CON,CON
堆排序基于堆结构，通过选择和交换实现数据排序,排序,堆,20,5,CON,CON
无向图是一种图结构其中任意两个顶点之间的边没有方向且顶点集和边集共同构成该图结构,图,无向图,6,0,CON,CON
完全二叉树是除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树,完全二叉树,二叉树,0,45,CON,CON
线性查找是从数据序列的第一个元素开始依次逐个与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法,遍历,查找,39,47,CON,CON
线性查找是从数据序列的第一个元素开始依次逐个与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法,遍历,查找,39,2,CON,CON
线性查找是从数据序列的第一个元素开始依次逐个与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法,查找,查找,47,2,CON,CON
图的核心特征是由顶点集合以及顶点之间的边集合所构成，顶点表示事物，边表示事物之间的关系，图中的顶点之间通过边相互连接，体现了各个,集合,集合,20,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,头节点,40,22,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,尾节点,40,14,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,指针,40,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,链表,40,57,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,遍历,40,53,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,链表,40,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,40,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,尾节点,22,14,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,指针,22,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,链表,22,57,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,遍历,22,53,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,链表,22,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,头节点,循环链表,22,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,链表,14,57,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,遍历,14,53,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,指针,链表,18,57,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,指针,遍历,18,53,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,遍历,57,53,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,链表,57,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,57,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,遍历,链表,53,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,遍历,循环链表,53,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,10,0,CON,CON
数据的逻辑结构的定义的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，仅关注数据元素,逻辑结构,数据元素,3,63,CON,CON
数据的逻辑结构的定义的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，仅关注数据元素,逻辑结构,数据元素,3,16,CON,CON
数据的逻辑结构的定义的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，仅关注数据元素,逻辑结构,数据元素,3,32,CON,CON
数据的逻辑结构的定义的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，仅关注数据元素,数据元素,数据元素,63,16,CON,CON
数据的逻辑结构的定义的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，仅关注数据元素,数据元素,数据元素,63,32,CON,CON
数据的逻辑结构的定义的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的关联方式而不涉及数据在计算机中的存储方式，仅关注数据元素,数据元素,数据元素,16,32,CON,CON
数组是由相同类型的数据元素组成的有序集合，具有存储相同类型数据、元素有序排列且有固定存储位置和大小等核心性质,数组,数据元素,0,9,CON,CON
数组是由相同类型的数据元素组成的有序集合，具有存储相同类型数据、元素有序排列且有固定存储位置和大小等核心性质,数组,集合,0,18,CON,CON
数组是由相同类型的数据元素组成的有序集合，具有存储相同类型数据、元素有序排列且有固定存储位置和大小等核心性质,数据元素,集合,9,18,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,访问,时间复杂度,27,53,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,访问,查找,27,63,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,访问,插入,27,60,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,访问,哈希表,27,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,访问,映射,27,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,访问,删除,27,66,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,访问,哈希函数,27,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,时间复杂度,查找,53,63,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,时间复杂度,插入,53,60,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,时间复杂度,哈希表,53,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,时间复杂度,映射,53,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,时间复杂度,删除,53,66,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,时间复杂度,哈希函数,53,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,查找,插入,63,60,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,查找,哈希表,63,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,查找,映射,63,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,查找,删除,63,66,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,查找,哈希函数,63,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,插入,哈希表,60,0,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,插入,映射,60,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,插入,删除,60,66,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,插入,哈希函数,60,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,哈希表,映射,0,13,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,哈希表,删除,0,66,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,哈希表,哈希函数,0,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,映射,删除,13,66,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,映射,哈希函数,13,7,CON,CON
哈希表具有通过哈希函数将键映射到特定位置以实现快速数据访问的特点，其核心性质包括能在平均情况下以接近常数的时间复杂度进行插入、查找和删除,删除,哈希函数,66,7,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,线性表,25,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,线性表,41,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,链表,37,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,37,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,37,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,0,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,线性表,存储结构,50,20,CON,CON
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法,迭代法,迭代,0,23,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即对于深度为i的节点,满二叉树,二叉树,0,24,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据从而实现高效的查找操作,查找,映射,41,19,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据从而实现高效的查找操作,查找,哈希函数,41,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据从而实现高效的查找操作,查找,哈希表,41,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据从而实现高效的查找操作,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据从而实现高效的查找操作,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据从而实现高效的查找操作,哈希函数,哈希表,13,0,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型,逻辑结构,线性结构,3,38,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型,逻辑结构,集合,3,34,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型,逻辑结构,数据元素,3,13,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型,线性结构,集合,38,34,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型,线性结构,数据元素,38,13,CON,CON
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型,集合,数据元素,34,13,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点,树的深度,路径,0,24,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点,树的深度,根节点,0,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点,路径,根节点,24,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点,路径,叶子节点,24,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点,根节点,叶子节点,6,12,CON,CON
线性结构是一种数据结构，其核心特征为数据元素之间存在一对一的线性关系，有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有,数据元素,线性结构,18,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,头节点,指针,28,24,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,头节点,链表,28,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,头节点,尾节点,28,57,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,头节点,遍历,28,51,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,头节点,链表,28,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,头节点,链表,28,62,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,头节点,循环链表,28,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,指针,链表,24,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,指针,尾节点,24,57,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,指针,遍历,24,51,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,指针,链表,24,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,指针,链表,24,62,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,指针,循环链表,24,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,尾节点,10,57,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,遍历,10,51,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,链表,10,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,链表,10,62,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,尾节点,遍历,57,51,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,尾节点,链表,57,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,尾节点,链表,57,62,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,尾节点,循环链表,57,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,遍历,链表,51,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,遍历,链表,51,62,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,遍历,循环链表,51,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,链表,45,62,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,循环链表,45,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在尾节点，从链表中的任意,链表,循环链表,62,0,CON,CON
回路是从某节点出发又回到该节点的闭合路径,回路,路径,0,18,CON,CON
回路是在图中从某顶点出发又回到该顶点的路径,回路,路径,0,19,CON,CON
稳定性是指在数据结构中，对于相等的元素，在排序前后它们的相对位置保持不变的性质,排序,稳定性,21,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，其右子树中所有节点的值均大于该节点的值,二叉搜索树,左子树,0,22,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，其右子树中所有节点的值均大于该节点的值,二叉搜索树,右子树,0,42,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，其右子树中所有节点的值均大于该节点的值,左子树,右子树,22,42,CON,CON
顺序查找的核心特征是从数据序列的起始位置开始，依次逐个检查每个元素，直到找到目标元素或遍历完整个序列为止,遍历,顺序查找,43,0,CON,CON
回溯法基础是一种通过尝试所有可能的解空间路径来求解问题的方法，其核心特征是在搜索过程中，一旦发现当前部分解无法导致完整的有效解，,回溯法,路径,0,20,CON,CON
引用是给已存在对象起的一个别名，对引用的操作实际上就是对其所引用对象的操作，引用必须在定义时初始化且初始化后不能再引用其他对象,初始化,初始化,46,50,CON,CON
平衡二叉树是左右两个子树高度差绝对值不超过1的二叉树,子树,平衡二叉树,10,0,CON,CON
平衡二叉树是左右两个子树高度差绝对值不超过1的二叉树,子树,二叉树,10,23,CON,CON
平衡二叉树是左右两个子树高度差绝对值不超过1的二叉树,平衡二叉树,二叉树,0,23,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,排序,28,19,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,28,8,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆排序,28,0,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,排序,28,58,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,28,37,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,28,52,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,19,8,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆排序,19,0,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,排序,19,58,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,19,37,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,19,52,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆,堆排序,8,0,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆,排序,8,58,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆,堆,8,37,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆,堆,8,52,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆排序,排序,0,58,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆排序,堆,0,37,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆排序,堆,0,52,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,58,37,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,排序,堆,58,52,CON,CON
堆排序是一种利用堆这种数据结构特性进行排序的方法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有,堆,堆,37,52,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，,深度优先搜索,路径,0,41,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，,深度优先搜索,遍历,0,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，,路径,遍历,41,11,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,二叉树,0,13,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,遍历,0,3,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,访问,0,11,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,遍历,13,3,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,访问,13,11,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,遍历,访问,3,11,CON,CON
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的,集合,集合,12,27,CON,CON
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的,集合,集合,12,0,CON,CON
集合具有确定性即给定一个集合，任何一个对象是否属于这个集合是明确的,集合,集合,27,0,CON,CON
双向链表是一种数据结构，其每个节点除了包含数据域外，还包含两个指针，分别指向前一个节点和后一个节点，从而形成双向链接关系，便于在两个,指针,双向链表,31,0,CON,CON
深度优先搜索沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,10,CON,CON
深度优先搜索沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,45,CON,CON
深度优先搜索沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,路径,路径,10,45,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点集合不能为空，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,41,28,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点集合不能为空，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,41,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点集合不能为空，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,41,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点集合不能为空，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,28,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点集合不能为空，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,28,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点集合不能为空，顶点间的关系集合描述了顶点之间的连接方式,集合,集合,14,5,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,堆排序,堆,0,50,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,堆排序,排序,0,16,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,堆排序,排序,0,35,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,堆,排序,50,16,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,堆,排序,50,35,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,堆,堆,50,8,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,排序,排序,16,35,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,排序,堆,16,8,CON,CON
堆排序是一种基于堆这种数据结构的排序算法，其核心性质是利用堆的特性将待排序数据构建成一个最大堆或最小堆，然后通过不断取出堆顶,排序,堆,35,8,CON,CON
有向图的核心性质是其边具有方向性，即从一个顶点指向另一个顶点，这种方向性决定了图中顶点之间的关系和路径走向,路径,有向图,49,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,链表,循环链表,10,0,CON,CON
数据逻辑结构核心概念是数据元素间逻辑关系,数据元素,逻辑结构,11,2,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构,链表,循环链表,10,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,遍历,36,4,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,遍历,36,50,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,访问,36,54,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,遍历,36,41,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,根节点,36,56,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,二叉树,36,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,二叉树,36,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,递归,36,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,访问,36,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,遍历,4,50,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,访问,4,54,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,遍历,4,41,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,根节点,4,56,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,二叉树,4,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,二叉树,4,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,递归,4,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,访问,4,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,访问,50,54,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,遍历,50,41,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,根节点,50,56,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,二叉树,50,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,二叉树,50,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,递归,50,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,访问,50,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,遍历,54,41,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,根节点,54,56,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,二叉树,54,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,二叉树,54,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,递归,54,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,访问,访问,54,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,根节点,41,56,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,二叉树,41,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,二叉树,41,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,递归,41,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,遍历,访问,41,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,根节点,二叉树,56,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,根节点,二叉树,56,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,根节点,递归,56,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,根节点,访问,56,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,二叉树,二叉树,17,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,二叉树,递归,17,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,二叉树,访问,17,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,二叉树,递归,0,61,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,二叉树,访问,0,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点，并且每个节点仅被访问一次，遍历顺序通常有先序遍历（先访问根节点，再递归,递归,访问,61,15,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点后回溯到前一步再选择其他路径,深度优先搜索,路径,0,30,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点后回溯到前一步再选择其他路径,深度优先搜索,路径,0,64,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点后回溯到前一步再选择其他路径,路径,路径,30,64,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,数组,数组,8,16,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,数组,查找,8,61,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,数组,查找,8,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,数组,查找,16,61,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,数组,查找,16,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,数组,二分查找,16,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,查找,查找,61,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,查找,二分查找,61,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，直至找到目标值或确定目标值不存在的一种查找算法,查找,二分查找,37,0,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,数组,集合,36,9,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,数组,访问,36,48,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,数组,数组,36,0,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,数组,数据类型,36,22,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,集合,访问,9,48,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,集合,数组,9,0,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,集合,数据类型,9,22,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,访问,数组,48,0,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,访问,数据类型,48,22,CON,CON
数组是一种有序数据集合，其中的元素具有相同的数据类型，并且通过一个统一的数组名和下标来唯一标识和访问每个元素,数组,数据类型,0,22,CON,CON
循环链表是一种首尾相连的链表，无明显头指针和尾指针,指针,链表,19,12,CON,CON
循环链表是一种首尾相连的链表，无明显头指针和尾指针,指针,指针,19,23,CON,CON
循环链表是一种首尾相连的链表，无明显头指针和尾指针,指针,循环链表,19,0,CON,CON
循环链表是一种首尾相连的链表，无明显头指针和尾指针,链表,指针,12,23,CON,CON
循环链表是一种首尾相连的链表，无明显头指针和尾指针,链表,循环链表,12,0,CON,CON
循环链表是一种首尾相连的链表，无明显头指针和尾指针,指针,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,尾节点,40,14,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,指针,40,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,头节点,40,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,遍历,40,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,链表,40,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,链表,40,56,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,循环链表,40,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,尾节点,遍历,14,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,尾节点,链表,14,56,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,指针,遍历,18,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,指针,链表,18,56,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,头节点,遍历,23,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,头节点,链表,23,56,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,遍历,链表,50,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,遍历,链表,50,56,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,遍历,循环链表,50,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,链表,10,56,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，不存在链表尾端的概念，能够,链表,循环链表,56,0,CON,CON
算法效率的特点的核心特征包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需的额外空间随,空间复杂度,时间复杂度,20,26,CON,CON
算法效率的特点的核心特征包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需的额外空间随,空间复杂度,空间复杂度,20,52,CON,CON
算法效率的特点的核心特征包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需的额外空间随,空间复杂度,时间复杂度,20,14,CON,CON
算法效率的特点的核心特征包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需的额外空间随,时间复杂度,空间复杂度,26,52,CON,CON
算法效率的特点的核心特征包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需的额外空间随,时间复杂度,时间复杂度,26,14,CON,CON
算法效率的特点的核心特征包括时间复杂度和空间复杂度，时间复杂度衡量算法执行时间随输入规模增长的变化趋势，空间复杂度衡量算法执行过程中所需的额外空间随,空间复杂度,时间复杂度,52,14,CON,CON
二叉搜索树中每个节点左子树值小于该节点右子树值,左子树,二叉搜索树,10,0,CON,CON
二叉搜索树中每个节点左子树值小于该节点右子树值,左子树,右子树,10,19,CON,CON
二叉搜索树中每个节点左子树值小于该节点右子树值,二叉搜索树,右子树,0,19,CON,CON
线性表是零个或多个数据元素的有限序列,数据元素,线性表,9,0,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序,排序,排序,7,40,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序,排序,比较排序,7,0,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素之间的相对次序从而实现排序,排序,比较排序,40,0,CON,CON
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，其余节点分为m（m≥0）个互不相交的有限集合,根节点,集合,33,57,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向子节点的分支,数据项,数据元素,17,10,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向子节点的分支,数据项,树的节点,17,0,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向子节点的分支,数据项,子节点,17,23,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向子节点的分支,数据元素,树的节点,10,0,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向子节点的分支,数据元素,子节点,10,23,CON,CON
树的节点是树结构中的数据元素，包含数据项及指向子节点的分支,树的节点,子节点,0,23,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,访问,访问,38,18,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,访问,遍历,38,48,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,访问,广度优先搜索,38,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,访问,访问,38,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,访问,遍历,18,48,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,遍历,广度优先搜索,48,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,遍历,访问,48,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，同一层节点的访问顺序不固定，直到遍历完所有可达节点，其核心特征是基于,广度优先搜索,访问,0,12,CON,CON
指针的核心性质是其存储的是变量的内存地址，通过该地址可以对所指向的变量进行间接访问和操作,访问,指针,39,0,CON,CON
简单排序是对一组数据按照特定规则进行排列的操作，其核心特征在于通过比较数据元素之间的大小关系，依据设定的排序准则，逐步将数据调整为有序序列,排序,简单排序,52,0,CON,CON
简单排序是对一组数据按照特定规则进行排列的操作，其核心特征在于通过比较数据元素之间的大小关系，依据设定的排序准则，逐步将数据调整为有序序列,排序,数据元素,52,35,CON,CON
简单排序是对一组数据按照特定规则进行排列的操作，其核心特征在于通过比较数据元素之间的大小关系，依据设定的排序准则，逐步将数据调整为有序序列,简单排序,数据元素,0,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，其特点的核心性质,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，其特点的核心性质,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，其特点的核心性质,链表,邻接表,35,0,CON,CON
子节点的核心性质是其与父节点存在特定关联关系且在所属数据结构层次中有明确位置和作用，是构成整体结构的重要组成部分，在数据的组织和,父节点,子节点,11,0,CON,CON
根节点是树结构中没有前驱节点且唯一直接位于树顶端的节点,根节点,前驱节点,0,10,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,遍历,51,38,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,访问,51,58,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,访问,51,30,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,遍历,51,4,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,二叉树,51,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,遍历,51,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,二叉树,51,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,访问,51,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,递归,51,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,根节点,访问,51,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,38,58,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,38,30,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,遍历,38,4,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,二叉树,38,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,遍历,38,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,二叉树,38,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,38,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,递归,38,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,38,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,访问,58,30,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,遍历,58,4,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,二叉树,58,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,遍历,58,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,二叉树,58,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,访问,58,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,递归,58,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,访问,58,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,遍历,30,4,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,二叉树,30,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,遍历,30,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,二叉树,30,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,访问,30,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,递归,30,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,访问,30,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,二叉树,4,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,遍历,4,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,二叉树,4,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,4,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,递归,4,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,4,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,遍历,0,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,二叉树,0,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,访问,0,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,递归,0,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,访问,0,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,二叉树,45,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,45,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,递归,45,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,遍历,访问,45,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,访问,18,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,递归,18,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,二叉树,访问,18,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,递归,16,56,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,访问,访问,16,49,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每一个节点且仅访问一次，常见的遍历方式有前序遍历（先访问根节点，再递归访问左,递归,访问,56,49,CON,CON
线性结构中数据元素存在一对一的线性关系,线性结构,数据元素,0,5,CON,CON
交换排序通过比较元素并交换不满足顺序要求的元素位置来逐步将数组或序列调整为有序状态其核心性质是相邻元素间的比较与交换操作使得较大元素不断,数组,交换排序,29,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,遍历,40,58,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,遍历,40,4,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,遍历,40,53,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,遍历,40,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,二叉树,40,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,二叉树,40,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,访问,40,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,访问,40,35,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,遍历,58,4,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,遍历,58,53,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,遍历,58,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,58,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,58,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,58,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,58,35,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,遍历,4,53,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,遍历,4,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,4,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,4,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,4,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,4,35,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,遍历,53,45,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,53,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,53,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,53,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,53,35,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,45,0,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,二叉树,45,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,45,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,遍历,访问,45,35,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,二叉树,二叉树,0,18,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,二叉树,访问,0,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,二叉树,访问,0,35,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,二叉树,访问,18,16,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,二叉树,访问,18,35,CON,CON
二叉树的遍历是指按照某种规则依次访问二叉树中的每个节点，使得每个节点被访问且仅被访问一次，遍历方式包括先序遍历、中序遍历、后,访问,访问,16,35,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,子节点,二叉树,22,0,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,子节点,根节点,22,57,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,子节点,二叉树,22,33,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,子节点,子节点,22,13,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,子节点,子节点,22,27,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,二叉树,根节点,0,57,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,二叉树,二叉树,0,33,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,二叉树,子节点,0,13,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,二叉树,子节点,0,27,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,根节点,二叉树,57,33,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,根节点,子节点,57,13,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,根节点,子节点,57,27,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,二叉树,子节点,33,13,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,二叉树,子节点,33,27,CON,CON
二叉树的每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树，其节点之间存在严格的层次关系，根节点是,子节点,子节点,13,27,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,18,41,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,41,0,CON,CON
迭代法是一种通过从一个初始估计值开始，按照一定的迭代公式或规则不断重复计算，逐步逼近问题的精确解的方法，其核心特征是利用前一步的,迭代法,迭代,0,24,CON,CON
算法效率是指算法执行所需要的时间和空间资源的量度它反映了算法在不同规模输入下的运行性能包括时间复杂度和空间复杂度等方面,空间复杂度,时间复杂度,51,45,CON,CON
父节点具有比子节点更高一层的层级关系且在数据结构中处于直接连接子节点并对其进行管理或关联的位置,子节点,子节点,31,6,CON,CON
父节点具有比子节点更高一层的层级关系且在数据结构中处于直接连接子节点并对其进行管理或关联的位置,子节点,父节点,31,0,CON,CON
父节点具有比子节点更高一层的层级关系且在数据结构中处于直接连接子节点并对其进行管理或关联的位置,子节点,父节点,6,0,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其每一层上的节点数都达到最大值，即第i层有2^(,满二叉树,二叉树,0,24,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,数据元素,12,62,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,数据元素,12,26,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,线性表,12,0,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,数据元素,12,54,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,数据元素,62,26,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,线性表,62,0,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,数据元素,62,54,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,线性表,26,0,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,数据元素,数据元素,26,54,CON,CON
线性表是一种由零个或多个数据元素组成的有限序列，其中数据元素之间存在一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素,线性表,数据元素,0,54,CON,CON
堆的核心特征是父节点的值大于或等于（大顶堆）其子节点的值，或者父节点的值小于或等于（小顶堆）其子节点的值,父节点,父节点,31,7,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,根节点,子节点,16,32,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,根节点,父节点,16,54,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,根节点,根节点,16,39,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,根节点,树,16,58,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,子节点,父节点,32,54,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,子节点,根节点,32,39,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,子节点,树,32,58,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,父节点,根节点,54,39,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,父节点,树,54,58,CON,CON
树是一种非线性数据结构，它有一个根节点，每个节点可以有零个或多个子节点，并且除根节点外每个节点都有且仅有一个父节点，树,根节点,树,39,58,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点存在特定连接关系、在树的层级结构中有其特定位置且可能存在多个兄弟子节点,父节点,父节点,13,25,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点存在特定连接关系、在树的层级结构中有其特定位置且可能存在多个兄弟子节点,父节点,子节点,13,60,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点存在特定连接关系、在树的层级结构中有其特定位置且可能存在多个兄弟子节点,父节点,子节点,13,0,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点存在特定连接关系、在树的层级结构中有其特定位置且可能存在多个兄弟子节点,父节点,子节点,25,60,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点存在特定连接关系、在树的层级结构中有其特定位置且可能存在多个兄弟子节点,父节点,子节点,25,0,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有与父节点存在特定连接关系、在树的层级结构中有其特定位置且可能存在多个兄弟子节点,子节点,子节点,60,0,CON,CON
迭代法是一种不断用变量的旧值递推新值的方法，其核心特征是通过重复执行特定的计算步骤，从初始值出发逐步逼近问题的解，每次,迭代法,递推,0,14,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出，且操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和出栈操作,入栈,入栈,48,40,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出，且操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和出栈操作,入栈,出栈,48,52,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出，且操作主要集中在栈顶进行包括入栈操作将元素压入栈顶和出栈操作,入栈,出栈,40,52,CON,CON
完全二叉树是除最后一层外每层节点数满且最后一层靠左对齐的二叉树,二叉树,完全二叉树,28,0,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,尾节点,头节点,11,19,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,尾节点,链表,11,34,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,尾节点,遍历,11,45,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,尾节点,指针,11,15,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,尾节点,循环链表,11,0,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,头节点,链表,19,34,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,头节点,遍历,19,45,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,头节点,指针,19,15,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,头节点,循环链表,19,0,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,链表,遍历,34,45,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,链表,指针,34,15,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,链表,循环链表,34,0,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,遍历,指针,45,15,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,遍历,循环链表,45,0,CON,CON
循环链表的核心性质是其尾节点的指针指向头节点从而形成一个环形结构使得链表中各个节点可以依次遍历且没有明确的终点,指针,循环链表,15,0,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,插入,排序,6,2,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,插入,排序,6,20,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,插入,排序,6,9,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,排序,排序,2,20,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,排序,排序,2,9,CON,CON
将未排序数据插入已排序序列的合适位置完成排序,排序,排序,20,9,CON,CON
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h,二叉树,完全二叉树,8,0,CON,CON
集合具有确定性、互异性和无序性，确定性指集合中的元素必须是确定的，互异性指集合中的元素互不相同，无序性指集合中的元素没有顺序之分,集合,集合,0,20,CON,CON
集合具有确定性、互异性和无序性，确定性指集合中的元素必须是确定的，互异性指集合中的元素互不相同，无序性指集合中的元素没有顺序之分,集合,集合,0,52,CON,CON
集合具有确定性、互异性和无序性，确定性指集合中的元素必须是确定的，互异性指集合中的元素互不相同，无序性指集合中的元素没有顺序之分,集合,集合,0,37,CON,CON
集合具有确定性、互异性和无序性，确定性指集合中的元素必须是确定的，互异性指集合中的元素互不相同，无序性指集合中的元素没有顺序之分,集合,集合,20,52,CON,CON
集合具有确定性、互异性和无序性，确定性指集合中的元素必须是确定的，互异性指集合中的元素互不相同，无序性指集合中的元素没有顺序之分,集合,集合,20,37,CON,CON
集合具有确定性、互异性和无序性，确定性指集合中的元素必须是确定的，互异性指集合中的元素互不相同，无序性指集合中的元素没有顺序之分,集合,集合,52,37,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,插入,指针,58,30,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,插入,前驱节点,58,38,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,插入,链表,58,7,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,插入,遍历,58,54,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,插入,删除,58,61,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,插入,双向链表,58,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,插入,后继节点,58,43,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,指针,前驱节点,30,38,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,指针,链表,30,7,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,指针,遍历,30,54,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,指针,删除,30,61,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,指针,双向链表,30,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,指针,后继节点,30,43,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,前驱节点,链表,38,7,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,前驱节点,遍历,38,54,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,前驱节点,删除,38,61,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,前驱节点,双向链表,38,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,前驱节点,后继节点,38,43,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,链表,遍历,7,54,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,链表,删除,7,61,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,链表,双向链表,7,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,链表,后继节点,7,43,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,遍历,删除,54,61,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,遍历,双向链表,54,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,遍历,后继节点,54,43,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,删除,双向链表,61,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,删除,后继节点,61,43,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点，从而支持双向遍历，在插入和删除节点,双向链表,后继节点,0,43,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,18,57,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,54,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,15,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,18,0,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,54,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,15,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,57,0,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,54,15,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,54,0,CON,CON
选择排序的核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,15,0,CON,CON
指针的核心性质是其存储内存地址并可通过该地址访问和操作内存中的数据,访问,指针,22,0,CON,CON
非线性结构的核心性质是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继,非线性结构,数据元素,0,22,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，直到遍历完所有节点,路径,路径,23,58,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，直到遍历完所有节点,路径,遍历,23,63,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，直到遍历完所有节点,路径,深度优先搜索,23,0,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，直到遍历完所有节点,路径,遍历,58,63,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，直到遍历完所有节点,路径,深度优先搜索,58,0,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，直到遍历完所有节点,遍历,深度优先搜索,63,0,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步交换到右侧，重复此过程直到整个数组有序的排序算法,排序,数组,43,38,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步交换到右侧，重复此过程直到整个数组有序的排序算法,排序,冒泡排序,43,0,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步交换到右侧，重复此过程直到整个数组有序的排序算法,数组,冒泡排序,38,0,CON,CON
迭代法是一种通过从一个初始估计值开始，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值,满二叉树,二叉树,0,22,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,遍历,46,3,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,访问,46,34,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,右子树,46,50,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,二叉树,46,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,根节点,46,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,根节点,46,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,访问,46,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,遍历,46,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,二叉树,46,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,访问,46,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,左子树,遍历,46,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,访问,3,34,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,右子树,3,50,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,根节点,3,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,根节点,3,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,访问,3,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,遍历,3,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,二叉树,3,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,访问,3,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,遍历,3,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,右子树,34,50,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,二叉树,34,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,根节点,34,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,根节点,34,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,访问,34,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,遍历,34,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,二叉树,34,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,访问,34,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,遍历,34,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,二叉树,50,0,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,根节点,50,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,根节点,50,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,访问,50,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,遍历,50,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,二叉树,50,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,访问,50,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,右子树,遍历,50,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,根节点,0,42,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,根节点,0,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,访问,0,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,遍历,0,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,二叉树,0,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,访问,0,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,遍历,0,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,根节点,42,29,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,访问,42,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,遍历,42,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,二叉树,42,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,访问,42,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,遍历,42,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,访问,29,21,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,遍历,29,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,二叉树,29,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,访问,29,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,根节点,遍历,29,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,遍历,21,39,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,二叉树,21,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,访问,21,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,遍历,21,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,二叉树,39,13,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,访问,39,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,遍历,遍历,39,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,访问,13,55,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,二叉树,遍历,13,26,CON,CON
二叉树遍历是按照特定规则对二叉树中节点进行访问，先序遍历是根节点优先访问，中序遍历是根节点在左子树和右子树之间访问,访问,遍历,55,26,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，对于树中的每个结点，如果其序号i满足1≤i≤n，且i>1时其父结点序号,二叉树,完全二叉树,17,0,CON,CON
迭代法是一种通过从一个初始估计值开始，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
线性查找的核心性质是从数据序列的起始位置开始，依次对每个元素进行比较，直到找到目标元素或遍历完整个序列,查找,遍历,2,44,CON,CON
循环链表是一种首尾相连的链表结构,链表,循环链表,12,0,CON,CON
邻接矩阵是用于表示图的一种矩阵，其核心性质为对于一个具有n个顶点的图，邻接矩阵是一个n×n的矩阵，若顶点i与顶点,邻接矩阵,邻接矩阵,0,35,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步并探索其他路径，其核心性质是优先访问深度大的节点，通过,深度优先搜索,访问,0,56,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步并探索其他路径，其核心性质是优先访问深度大的节点，通过,深度优先搜索,路径,0,10,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步并探索其他路径，其核心性质是优先访问深度大的节点，通过,深度优先搜索,路径,0,45,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步并探索其他路径，其核心性质是优先访问深度大的节点，通过,访问,路径,56,10,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步并探索其他路径，其核心性质是优先访问深度大的节点，通过,访问,路径,56,45,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步并探索其他路径，其核心性质是优先访问深度大的节点，通过,路径,路径,10,45,CON,CON
有向图的核心特征是其边具有方向性，即从一个顶点指向另一个顶点，这种方向性决定了图中顶点之间的关系是单向的，不同于无向图边,有向图,无向图,0,56,CON,CON
线性结构的核心特征是数据元素之间存在一对一的线性关系，有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有一个前驱元素，除,线性结构,数据元素,0,10,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数据序列转换为有序序列的排序方法其特点在于相邻或不相邻元素之间基于比较结果进行位置互换以逐步,排序,交换排序,36,0,CON,CON
回路是图中一条起点和终点相同的路径,路径,回路,15,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,查找,数组,59,8,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,查找,数组,59,16,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,查找,查找,59,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,查找,二分查找,59,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,数组,数组,8,16,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,数组,查找,8,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,数组,查找,16,37,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,数组,二分查找,16,0,CON,CON
二分查找是在有序数组中通过不断将数组中间元素与目标值比较，根据比较结果缩小查找范围，从而确定目标值是否存在及所在位置的查找算法,查找,二分查找,37,0,CON,CON
数据的逻辑结构是指数据元素之间抽象化的相互关系，它不考虑数据在计算机中的存储方式，仅关注数据元素之间的逻辑关系,逻辑结构,数据元素,3,44,CON,CON
数据的逻辑结构是指数据元素之间抽象化的相互关系，它不考虑数据在计算机中的存储方式，仅关注数据元素之间的逻辑关系,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间抽象化的相互关系，它不考虑数据在计算机中的存储方式，仅关注数据元素之间的逻辑关系,数据元素,数据元素,44,9,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,访问,18,24,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,访问,18,61,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,广度优先搜索,18,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,访问,18,39,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,访问,24,61,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,广度优先搜索,24,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,访问,24,39,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,广度优先搜索,61,0,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,访问,访问,61,39,CON,CON
广度优先搜索的核心特征是按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层次的所有节点后，再进入下一层进行访问，,广度优先搜索,访问,0,39,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,根节点,父节点,38,22,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,根节点,根节点,38,0,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,根节点,遍历,38,45,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,根节点,树,38,49,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,父节点,根节点,22,0,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,父节点,遍历,22,45,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,父节点,树,22,49,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,根节点,遍历,0,45,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,根节点,树,0,49,CON,CON
根节点是树结构中的起始节点，其核心特征为没有父节点且是整个树结构的入口点，从根节点开始可以遍历整个树，它在树的层次结构,遍历,树,45,49,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改元素,数组,集合,0,9,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改元素,数组,数据类型,0,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改元素,数组,访问,0,37,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改元素,集合,数据类型,9,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改元素,集合,访问,9,37,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改元素,数据类型,访问,23,37,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,头节点,47,52,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,线性表,47,11,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,访问,47,60,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,单链表,47,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,数据元素,47,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,指针,47,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,链表,47,64,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,头节点,线性表,52,11,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,头节点,访问,52,60,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,头节点,单链表,52,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,头节点,数据元素,52,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,头节点,指针,52,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,头节点,链表,52,64,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,线性表,访问,11,60,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,线性表,数据元素,11,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,线性表,指针,11,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,线性表,链表,11,64,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,访问,单链表,60,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,访问,数据元素,60,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,访问,指针,60,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,访问,链表,60,64,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,单链表,数据元素,0,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,单链表,指针,0,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,单链表,链表,0,64,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,数据元素,指针,32,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,数据元素,链表,32,64,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针可以访问整个链表,指针,链表,56,64,CON,CON
满二叉树是除叶节点外每个节点都有两个子节点的二叉树,子节点,二叉树,18,22,CON,CON
满二叉树是除叶节点外每个节点都有两个子节点的二叉树,子节点,满二叉树,18,0,CON,CON
满二叉树是除叶节点外每个节点都有两个子节点的二叉树,二叉树,满二叉树,22,0,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立对应关系，使得对于一个集合中的每一个元素，在另一个集合中都有唯一确定的元素与之对应,集合,集合,48,34,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立对应关系，使得对于一个集合中的每一个元素，在另一个集合中都有唯一确定的元素与之对应,集合,映射,48,0,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立对应关系，使得对于一个集合中的每一个元素，在另一个集合中都有唯一确定的元素与之对应,集合,集合,48,17,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立对应关系，使得对于一个集合中的每一个元素，在另一个集合中都有唯一确定的元素与之对应,集合,映射,34,0,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立对应关系，使得对于一个集合中的每一个元素，在另一个集合中都有唯一确定的元素与之对应,集合,集合,34,17,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立对应关系，使得对于一个集合中的每一个元素，在另一个集合中都有唯一确定的元素与之对应,映射,集合,0,17,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，尽可能深地探索一条路径，直到无法继续或达到目标节点，然后,深度优先搜索,路径,0,46,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，尽可能深地探索一条路径，直到无法继续或达到目标节点，然后,深度优先搜索,遍历,0,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法，其核心性质是从起始节点开始，尽可能深地探索一条路径，直到无法继续或达到目标节点，然后,路径,遍历,46,11,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,树,右子树,12,47,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,树,左子树,12,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,左子树,右子树,21,47,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,左子树,左子树,21,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,右子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,右子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,右子树,左子树,47,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,右子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,平衡二叉树,左子树,0,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,排序,左子树,10,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左子树和右子树都是一棵平衡,左子树,右子树,43,25,CON,CON
子节点是树状结构中直接连接在父节点之下的节点,父节点,子节点,14,0,CON,CON
简单排序是对数据序列进行比较和交换等操作以逐步将数据按特定顺序排列的排序方法，其特点是实现相对简单、基本思想易于理解但通常效率不如一些,排序,简单排序,34,0,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻的数据结构,线性表,数据元素,20,38,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻的数据结构,线性表,数据元素,20,25,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻的数据结构,数据元素,数据元素,38,25,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列为止的查找方法,遍历,查找,40,50,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列为止的查找方法,遍历,顺序查找,40,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列为止的查找方法,查找,顺序查找,50,0,CON,CON
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点的路径且路径中至少包含一条边,路径,路径,36,39,CON,CON
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点的路径且路径中至少包含一条边,路径,回路,36,0,CON,CON
回路是数据结构中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点的路径且路径中至少包含一条边,路径,回路,39,0,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,堆排序,排序,0,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,堆排序,堆,0,54,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,堆排序,堆,0,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,排序,堆,17,54,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,排序,堆,17,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,排序,堆,17,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,堆,堆,54,34,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,堆,堆,54,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆结构来实现对,堆,堆,34,8,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系可以是有向边或无向边，顶点集合不能为空且顶点间关系集合定义了顶点,集合,集合,43,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系可以是有向边或无向边，顶点集合不能为空且顶点间关系集合定义了顶点,集合,集合,43,55,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系可以是有向边或无向边，顶点集合不能为空且顶点间关系集合定义了顶点,集合,集合,43,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系可以是有向边或无向边，顶点集合不能为空且顶点间关系集合定义了顶点,集合,集合,14,55,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系可以是有向边或无向边，顶点集合不能为空且顶点间关系集合定义了顶点,集合,集合,14,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系可以是有向边或无向边，顶点集合不能为空且顶点间关系集合定义了顶点,集合,集合,55,5,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,链表,单链表,27,23,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,链表,邻接表,27,0,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,链表,图,27,61,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,链表,存储结构,27,54,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,单链表,邻接表,23,0,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,单链表,图,23,61,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,单链表,存储结构,23,54,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,邻接表,图,0,61,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,邻接表,存储结构,0,54,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以一种链式存储结构来表示图,图,存储结构,61,54,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,树,38,12,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,平衡二叉树,38,0,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,排序,38,10,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,子树,38,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,平衡二叉树,38,44,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,树,子树,12,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,树,平衡二叉树,12,44,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,子树,0,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,44,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,排序,子树,10,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,排序,平衡二叉树,10,44,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1且左右子树都是一棵平衡二叉树,子树,平衡二叉树,22,44,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,数据元素,数据元素,25,65,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,数据元素,物理结构,25,3,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,数据元素,存储结构,25,51,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,数据元素,数据元素,25,35,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,数据元素,物理结构,65,3,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,数据元素,存储结构,65,51,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,数据元素,数据元素,65,35,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,物理结构,存储结构,3,51,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,物理结构,数据元素,3,35,CON,CON
数据的物理结构是数据在计算机内存中的存储方式，包括数据元素的存储表示及数据元素间关系的表示，其特点涉及存储结构、存储地址计算方式、数据元素,存储结构,数据元素,51,35,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此操作将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）从而实现,数组,冒泡排序,51,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,集合,访问,9,38,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,集合,访问,9,56,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,集合,插入,9,59,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,集合,删除,9,61,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,集合,数组,9,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,集合,操作效率,9,63,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,集合,数据类型,9,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,访问,38,56,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,插入,38,59,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,删除,38,61,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,数组,38,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,操作效率,38,63,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,数据类型,38,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,插入,56,59,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,删除,56,61,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,数组,56,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,操作效率,56,63,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,访问,数据类型,56,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,插入,删除,59,61,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,插入,数组,59,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,插入,操作效率,59,63,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,插入,数据类型,59,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,删除,数组,61,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,删除,操作效率,61,63,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,删除,数据类型,61,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,数组,操作效率,0,63,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,数组,数据类型,0,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来唯一标识和访问元素，内存中存储连续，可高效随机访问但插入删除操作效率较低,操作效率,数据类型,63,23,CON,CON
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素,集合,集合,0,35,CON,CON
算法效率的特点是指算法执行时间随问题规模增长的变化趋势以及占用资源如内存等方面的特性包括时间复杂度和空间复杂度等综合表现,时间复杂度,空间复杂度,44,50,CON,CON
非线性结构的核心特征是存在至少一个数据元素有不止一个前驱元素或不止一个后继元素或者元素之间的关系不满足线性关系,数据元素,非线性结构,17,0,CON,CON
邻接矩阵是用于表示图的一种矩阵，其中矩阵的行和列分别对应图的顶点，矩阵元素的值表示对应顶点之间是否存在边（对于无向图，若,邻接矩阵,无向图,0,55,CON,CON
邻接矩阵是用于表示图的一种矩阵，其中矩阵的行和列分别对应图的顶点，矩阵元素的值表示对应顶点之间是否存在边（对于无向图，若,邻接矩阵,图的顶点,0,28,CON,CON
邻接矩阵是用于表示图的一种矩阵，其中矩阵的行和列分别对应图的顶点，矩阵元素的值表示对应顶点之间是否存在边（对于无向图，若,无向图,图的顶点,55,28,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,路径,根节点,20,6,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它描述了数据在存储器中的存储方式，如,物理结构,数据元素,3,13,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它描述了数据在存储器中的存储方式，如,物理结构,数据元素,3,35,CON,CON
数据的物理结构的核心特征是数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，它描述了数据在存储器中的存储方式，如,数据元素,数据元素,13,35,CON,CON
路径是图中顶点与顶点之间经过边的有序序列且路径长度是路径上边的数目,路径,路径,0,21,CON,CON
路径是图中顶点与顶点之间经过边的有序序列且路径长度是路径上边的数目,路径,路径,0,26,CON,CON
路径是图中顶点与顶点之间经过边的有序序列且路径长度是路径上边的数目,路径,路径,21,26,CON,CON
数据结构中稳定性是指在排序过程中，相等元素之间的相对顺序在排序前后保持不变的特性,稳定性,排序,5,29,CON,CON
数据结构中稳定性是指在排序过程中，相等元素之间的相对顺序在排序前后保持不变的特性,稳定性,排序,5,11,CON,CON
数据结构中稳定性是指在排序过程中，相等元素之间的相对顺序在排序前后保持不变的特性,排序,排序,29,11,CON,CON
回溯法基础特点是按条件深度优先搜索并适时回溯,回溯法,深度优先搜索,0,11,CON,CON
连通图的核心性质是图中任意两个顶点之间都存在路径相连,连通图,路径,0,22,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,时间复杂度,19,54,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,删除,19,63,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,插入,19,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,查找,19,66,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,删除,54,63,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,哈希表,54,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,插入,54,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,查找,54,66,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,哈希函数,54,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,删除,哈希表,63,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,删除,插入,63,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,删除,查找,63,66,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,删除,哈希函数,63,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,插入,0,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,查找,0,66,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,哈希函数,0,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,查找,61,66,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,哈希函数,61,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征包括能在平均情况下以接近常数的时间复杂度进行插入删除和查找,查找,哈希函数,66,13,CON,CON
递归基础是递归函数中最简单的情况，通常是函数直接返回一个已知值而不再进行递归调用，其核心性质是为递归函数提供了一个终止条件，使得递归调用,递归,递归,36,64,CON,CON
递归基础是递归函数中最简单的情况，通常是函数直接返回一个已知值而不再进行递归调用，其核心性质是为递归函数提供了一个终止条件，使得递归调用,递归,递归基础,36,0,CON,CON
递归基础是递归函数中最简单的情况，通常是函数直接返回一个已知值而不再进行递归调用，其核心性质是为递归函数提供了一个终止条件，使得递归调用,递归,递归基础,64,0,CON,CON
树的查找的核心特征是基于树的层次结构，从根节点开始，按照特定规则（如比较节点值等）逐层向下搜索，以确定目标元素是否存在于树,查找,根节点,2,20,CON,CON
树的查找的核心特征是基于树的层次结构，从根节点开始，按照特定规则（如比较节点值等）逐层向下搜索，以确定目标元素是否存在于树,查找,树,2,60,CON,CON
树的查找的核心特征是基于树的层次结构，从根节点开始，按照特定规则（如比较节点值等）逐层向下搜索，以确定目标元素是否存在于树,根节点,树,20,60,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
邻接表是用链表存储图中顶点及与其邻接顶点信息的数据结构,链表,邻接表,5,0,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而进行排序的排序方法,排序,排序,28,25,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而进行排序的排序方法,排序,比较排序,28,0,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而进行排序的排序方法,排序,比较排序,25,0,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,28,0,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,28,15,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,15,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,遍历,38,44,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,前驱节点,38,19,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,后继节点,38,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,指针,38,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,双向链表,38,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,链表,38,46,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,遍历,前驱节点,44,19,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,遍历,后继节点,44,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,遍历,指针,44,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,遍历,双向链表,44,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,遍历,链表,44,46,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,前驱节点,后继节点,19,28,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,前驱节点,指针,19,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,前驱节点,双向链表,19,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,前驱节点,链表,19,46,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,后继节点,指针,28,12,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,后继节点,双向链表,28,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,后继节点,链表,28,46,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,双向链表,12,0,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,指针,链表,12,46,CON,CON
双向链表每个节点包含两个指针，一个指向前驱节点，一个指向后继节点，通过这两个指针可以双向遍历链表,双向链表,链表,0,46,CON,CON
稳定性是指在排序算法中，相等的元素在排序前后相对位置保持不变的特性,排序,稳定性,6,0,CON,CON
稳定性是指在排序算法中，相等的元素在排序前后相对位置保持不变的特性,排序,排序,6,18,CON,CON
稳定性是指在排序算法中，相等的元素在排序前后相对位置保持不变的特性,稳定性,排序,0,18,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示形式,存储结构,数据元素,0,6,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,双向链表,14,0,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,链表,14,17,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,双向链表,链表,0,17,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个,查找,顺序查找,25,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个,查找,遍历,25,46,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个,顺序查找,遍历,0,46,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,28,0,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,28,15,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,15,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
线性结构是一种数据结构，其核心特征为数据元素之间存在一对一的线性关系，有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有,数据元素,线性结构,18,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,广度优先搜索,访问,0,36,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,广度优先搜索,访问,0,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,广度优先搜索,访问,0,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,访问,访问,36,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,访问,访问,36,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,访问,访问,21,15,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,父节点,38,52,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,叶子节点,38,56,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,数据项,38,19,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,数据元素,38,12,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,树的节点,38,0,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,子节点,38,26,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,根节点,38,43,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,根节点,38,33,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,叶子节点,52,56,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,数据项,52,19,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,数据元素,52,12,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,树的节点,52,0,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,子节点,52,26,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,根节点,52,43,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,父节点,根节点,52,33,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,叶子节点,数据项,56,19,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,叶子节点,数据元素,56,12,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,叶子节点,树的节点,56,0,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,叶子节点,子节点,56,26,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,叶子节点,根节点,56,43,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,叶子节点,根节点,56,33,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据项,数据元素,19,12,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据项,树的节点,19,0,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据项,子节点,19,26,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据项,根节点,19,43,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据项,根节点,19,33,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据元素,树的节点,12,0,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据元素,子节点,12,26,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据元素,根节点,12,43,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,数据元素,根节点,12,33,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,树的节点,子节点,0,26,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,树的节点,根节点,0,43,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,树的节点,根节点,0,33,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,子节点,根节点,26,43,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,子节点,根节点,26,33,CON,CON
树的节点是树结构中的基本数据元素，包含数据项以及指向子节点的分支，根节点没有父节点，非根节点有且仅有一个父节点，叶子节点没有,根节点,根节点,43,33,CON,CON
回路是从一点出发经一系列节点后又回到该点的路径,回路,路径,0,21,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,递归,9,20,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,排序,9,22,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,数组,9,12,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,快速排序,9,0,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,递归,排序,20,22,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,递归,数组,20,12,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,递归,快速排序,20,0,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,数组,22,12,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,排序,快速排序,22,0,CON,CON
快速排序是通过一趟排序将数组分为两部分并递归排序,数组,快速排序,12,0,CON,CON
树的度是树内各结点的度的最大值其中结点的度是指结点拥有的子树的数目,子树,树的度,28,0,CON,CON
线性表是一种由有限个数据元素组成的序列，其中每个元素都有唯一前驱和后继（除第一个元素无前驱，最后一个元素无后继）,线性表,数据元素,0,10,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其存储结构采用顺序存储方式，即把逻辑上相邻的元素存储在物理位置上,数据元素,逻辑结构,17,12,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其存储结构采用顺序存储方式，即把逻辑上相邻的元素存储在物理位置上,数据元素,线性表,17,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其存储结构采用顺序存储方式，即把逻辑上相邻的元素存储在物理位置上,数据元素,存储结构,17,32,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其存储结构采用顺序存储方式，即把逻辑上相邻的元素存储在物理位置上,逻辑结构,线性表,12,6,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其存储结构采用顺序存储方式，即把逻辑上相邻的元素存储在物理位置上,逻辑结构,存储结构,12,32,CON,CON
顺序表是一种线性表，它的逻辑结构中数据元素之间是一对一的关系，其存储结构采用顺序存储方式，即把逻辑上相邻的元素存储在物理位置上,线性表,存储结构,6,32,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,叶子节点,树的深度,17,0,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,叶子节点,根节点,17,11,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,叶子节点,路径,17,26,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,树的深度,根节点,0,11,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,树的深度,路径,0,26,CON,CON
树的深度的核心性质是从根节点到最远叶子节点的最长简单路径上的节点数,根节点,路径,11,26,CON,CON
冒泡排序的核心性质是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序都会将未排序数据中最大（或最小）的元素“冒泡”到,排序,排序,42,36,CON,CON
冒泡排序的核心性质是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序都会将未排序数据中最大（或最小）的元素“冒泡”到,排序,冒泡排序,42,0,CON,CON
冒泡排序的核心性质是比较相邻元素大小，若顺序错误就把它们交换过来，每一趟排序都会将未排序数据中最大（或最小）的元素“冒泡”到,排序,冒泡排序,36,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,33,26,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,33,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,33,19,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,26,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,26,19,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,19,CON,CON
连通图是任意两个顶点之间都存在路径的图,连通图,路径,0,15,CON,CON
深度为k有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点一一对应时为完全,二叉树,满二叉树,10,31,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,头节点,指针,51,38,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,头节点,线性表,51,11,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,头节点,指针,51,34,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,头节点,单链表,51,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,头节点,链表,51,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,头节点,访问,51,55,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,线性表,38,11,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,指针,38,34,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,单链表,38,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,链表,38,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,访问,38,55,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,线性表,指针,11,34,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,线性表,链表,11,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,线性表,访问,11,55,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,单链表,34,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,链表,34,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,指针,访问,34,55,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,单链表,链表,0,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,单链表,访问,0,55,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可访问整个链表,链表,访问,59,55,CON,CON
比较排序是基于元素比较来确定元素相对位置的排序方式,排序,比较排序,21,0,CON,CON
快速排序的核心特征是通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后分别对这两部分,排序,快速排序,14,0,CON,CON
链表是一种通过指针将若干个节点按顺序连接起来的数据结构每个节点包含数据和指向下一节点的指针,指针,指针,43,7,CON,CON
链表是一种通过指针将若干个节点按顺序连接起来的数据结构每个节点包含数据和指向下一节点的指针,指针,链表,43,0,CON,CON
链表是一种通过指针将若干个节点按顺序连接起来的数据结构每个节点包含数据和指向下一节点的指针,指针,链表,7,0,CON,CON
树的节点是树结构中的基本组成单元包含数据元素及指向其子节点的分支,数据元素,树的节点,18,0,CON,CON
无向图是一种图结构，其中边没有方向，顶点之间的连接是双向的，任意两个顶点之间若存在边则可从其中一个顶点到达另一个顶点且反之,图,无向图,6,0,CON,CON
父节点是在树形结构中，有其他节点直接连接在其下方并以其为直接前驱的节点，这些连接在其下方的节点即为该父节点的子节点，,父节点,子节点,50,54,CON,CON
父节点是在树形结构中，有其他节点直接连接在其下方并以其为直接前驱的节点，这些连接在其下方的节点即为该父节点的子节点，,父节点,父节点,50,0,CON,CON
父节点是在树形结构中，有其他节点直接连接在其下方并以其为直接前驱的节点，这些连接在其下方的节点即为该父节点的子节点，,子节点,父节点,54,0,CON,CON
叶子节点是树中没有子节点的末端节点,子节点,叶子节点,9,0,CON,CON
根节点是树结构中的起始节点，没有父节点，是整个树的入口点，它与其他节点通过边相连并处于树的最顶层位置，是树状结构中,父节点,根节点,16,0,CON,CON
穷举法的核心特征是对问题所有可能的情况进行逐一列举和检验，通过遍历所有可能解来找到符合条件的答案,穷举法,遍历,0,31,CON,CON
堆排序是利用堆结构进行排序的算法,堆排序,堆,0,6,CON,CON
堆排序是利用堆结构进行排序的算法,堆排序,排序,0,11,CON,CON
堆排序是利用堆结构进行排序的算法,堆,排序,6,11,CON,CON
树是一种非线性的数据结构，它有一个根节点，并且每个节点可以有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中,子节点,根节点,35,40,CON,CON
树是一种非线性的数据结构，它有一个根节点，并且每个节点可以有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中,子节点,根节点,35,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，并且每个节点可以有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中,子节点,父节点,35,54,CON,CON
树是一种非线性的数据结构，它有一个根节点，并且每个节点可以有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中,根节点,根节点,40,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，并且每个节点可以有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中,根节点,父节点,40,54,CON,CON
树是一种非线性的数据结构，它有一个根节点，并且每个节点可以有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，树中,根节点,父节点,17,54,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,存储结构,0,37,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,存储结构,0,44,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,存储结构,0,51,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,存储结构,37,44,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,存储结构,37,51,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,数据元素,37,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,存储结构,44,51,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,数据元素,44,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括顺序存储结构、链式存储结构、索引存储结构和散列存储结构等不同形式,存储结构,数据元素,51,6,CON,CON
图中任意两点都存在路径可相互连通的图是连通图,连通图,路径,19,9,CON,CON
简单排序是对一组数据按特定规则进行排列，其核心特征是通过比较和交换数据元素的位置，将无序的数据序列逐步转换为有序序列，在排序过程中基于,简单排序,数据元素,0,33,CON,CON
简单排序是对一组数据按特定规则进行排列，其核心特征是通过比较和交换数据元素的位置，将无序的数据序列逐步转换为有序序列，在排序过程中基于,简单排序,排序,0,60,CON,CON
简单排序是对一组数据按特定规则进行排列，其核心特征是通过比较和交换数据元素的位置，将无序的数据序列逐步转换为有序序列，在排序过程中基于,数据元素,排序,33,60,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径，没有回路,子节点,路径,33,53,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径，没有回路,子节点,回路,33,58,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径，没有回路,子节点,根节点,33,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径，没有回路,路径,回路,53,58,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径，没有回路,路径,根节点,53,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点之间有且仅有一条路径，没有回路,回路,根节点,58,19,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
有向图是一种由顶点集合及顶点间的有向边构成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点,集合,有向图,9,0,CON,CON
有向图是一种图结构其中边具有方向即从一个顶点指向另一个顶点,图,有向图,6,0,CON,CON
完全二叉树的核心性质是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数,二叉树,完全二叉树,13,0,CON,CON
非线性结构中各数据元素之间的关系不再是一对一的，可能存在一对多、多对一或多对多的关系,非线性结构,数据元素,0,7,CON,CON
比较排序是基于元素之间的比较操作来确定元素的相对次序从而实现排序，其核心性质是决策树模型中叶子节点表示最终排序结果，内部节点为元素间的,比较排序,叶子节点,0,45,CON,CON
比较排序是基于元素之间的比较操作来确定元素的相对次序从而实现排序，其核心性质是决策树模型中叶子节点表示最终排序结果，内部节点为元素间的,比较排序,排序,0,30,CON,CON
比较排序是基于元素之间的比较操作来确定元素的相对次序从而实现排序，其核心性质是决策树模型中叶子节点表示最终排序结果，内部节点为元素间的,比较排序,排序,0,53,CON,CON
比较排序是基于元素之间的比较操作来确定元素的相对次序从而实现排序，其核心性质是决策树模型中叶子节点表示最终排序结果，内部节点为元素间的,叶子节点,排序,45,30,CON,CON
比较排序是基于元素之间的比较操作来确定元素的相对次序从而实现排序，其核心性质是决策树模型中叶子节点表示最终排序结果，内部节点为元素间的,叶子节点,排序,45,53,CON,CON
比较排序是基于元素之间的比较操作来确定元素的相对次序从而实现排序，其核心性质是决策树模型中叶子节点表示最终排序结果，内部节点为元素间的,排序,排序,30,53,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的边数,路径,叶子节点,27,17,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的边数,路径,树的深度,27,0,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的边数,路径,根节点,27,11,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的边数,叶子节点,树的深度,17,0,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的边数,叶子节点,根节点,17,11,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的边数,树的深度,根节点,0,11,CON,CON
邻接表是用链表存储图中顶点及与它相邻接顶点的一种数据结构,链表,邻接表,5,0,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,指针,线性表,47,11,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,指针,后继节点,47,37,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,指针,单链表,47,0,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,指针,数据元素,47,28,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,指针,链表,47,62,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,指针,指针,47,42,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,线性表,后继节点,11,37,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,线性表,数据元素,11,28,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,线性表,链表,11,62,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,线性表,指针,11,42,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,后继节点,单链表,37,0,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,后继节点,数据元素,37,28,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,后继节点,链表,37,62,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,后继节点,指针,37,42,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,单链表,数据元素,0,28,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,单链表,链表,0,62,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,单链表,指针,0,42,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,数据元素,链表,28,62,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,数据元素,指针,28,42,CON,CON
单链表是一种链式存储的线性表，其核心特征包括每个节点包含数据元素和一个指向后继节点的指针，通过指针将各个节点依次连接起来形成链表结构，第一个,链表,指针,62,42,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,二叉树,36,0,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,子树,36,45,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,子树,36,13,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,二叉树,36,41,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,二叉树,子树,0,45,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,二叉树,子树,0,13,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,二叉树,二叉树,0,41,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,子树,45,13,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,二叉树,45,41,CON,CON
二叉树是每个节点最多有两个子树的树结构，其核心性质包括每个节点至多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,二叉树,13,41,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，其右子树中的所有节点的值均大于该节点的值,右子树,左子树,43,22,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，其右子树中的所有节点的值均大于该节点的值,右子树,二叉搜索树,43,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，其右子树中的所有节点的值均大于该节点的值,左子树,二叉搜索树,22,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称从v到w是可达的,路径,路径,36,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,二叉树,子节点,0,32,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,二叉树,子节点,0,27,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,二叉树,子节点,0,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,32,27,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,32,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，分别称为左子节点和右子节点,子节点,子节点,27,18,CON,CON
邻接表是一种用于表示图的数据结构，它为图中的每个顶点建立一个单链表，链表中的每个节点表示与该顶点相邻接的顶点，通过这种方式来直观,单链表,链表,30,34,CON,CON
邻接表是一种用于表示图的数据结构，它为图中的每个顶点建立一个单链表，链表中的每个节点表示与该顶点相邻接的顶点，通过这种方式来直观,单链表,邻接表,30,0,CON,CON
邻接表是一种用于表示图的数据结构，它为图中的每个顶点建立一个单链表，链表中的每个节点表示与该顶点相邻接的顶点，通过这种方式来直观,链表,邻接表,34,0,CON,CON
图的顶点是图结构中用于表示数据元素的基本单元，是构成图的重要组成部分且在图的各种操作和关系中具有关键作用,图的顶点,数据元素,0,13,CON,CON
邻接矩阵是用一个二维数组来表示图中顶点之间的邻接关系，矩阵中元素的值表示对应顶点之间是否存在边或弧以及边或弧的相关信息，,邻接矩阵,数组,0,10,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,尾节点,遍历,22,58,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,尾节点,链表,22,48,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,尾节点,链表,22,10,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,尾节点,遍历,22,61,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,尾节点,头节点,22,31,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,尾节点,循环链表,22,0,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,尾节点,指针,22,26,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,链表,58,48,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,链表,58,10,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,遍历,58,61,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,头节点,58,31,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,循环链表,58,0,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,指针,58,26,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,链表,48,10,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,遍历,48,61,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,头节点,48,31,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,循环链表,48,0,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,指针,48,26,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,遍历,10,61,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,头节点,10,31,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,链表,指针,10,26,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,头节点,61,31,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,循环链表,61,0,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,遍历,指针,61,26,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,头节点,循环链表,31,0,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,头节点,指针,31,26,CON,CON
循环链表是一种特殊的链表，其特点的核心特征是尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历完尾,循环链表,指针,0,26,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,头节点,指针,28,24,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,头节点,链表,28,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,头节点,链表,28,65,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,头节点,遍历,28,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,头节点,循环链表,28,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,头节点,链表,28,46,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,指针,链表,24,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,指针,链表,24,65,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,指针,遍历,24,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,指针,循环链表,24,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,指针,链表,24,46,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,链表,链表,10,65,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,链表,遍历,10,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,链表,链表,10,46,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,链表,遍历,65,61,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,链表,循环链表,65,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,链表,链表,65,46,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,遍历,循环链表,61,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,遍历,链表,61,46,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,循环链表,链表,0,46,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以链表形式直观地表示图中,邻接表,链表,0,27,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以链表形式直观地表示图中,邻接表,链表,0,50,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以链表形式直观地表示图中,邻接表,单链表,0,23,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以链表形式直观地表示图中,链表,链表,27,50,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以链表形式直观地表示图中,链表,单链表,27,23,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点信息，从而以链表形式直观地表示图中,链表,单链表,50,23,CON,CON
根节点是树结构中没有父节点且处于树的最顶端具有特殊地位的节点,父节点,根节点,10,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,25,0,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,删除,插入,14,11,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,队列,19,29,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,队列,19,0,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,出队,19,52,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,出队,19,42,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,队列,29,0,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,出队,29,52,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,出队,29,42,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,出队,0,52,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,队列,出队,0,42,CON,CON
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,出队,出队,52,42,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据,指针,访问,0,30,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,47,36,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,47,23,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,47,30,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,47,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,47,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,47,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,数组,36,23,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,数组,36,30,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,数组,36,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,排序,36,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,归并排序,36,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,23,30,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,23,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,23,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,23,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,数组,30,16,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,30,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,30,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,排序,16,42,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,数组,归并排序,16,0,CON,CON
归并排序是一种分治算法，它将一个数组分成两个子数组，对每个子数组分别进行排序，然后将排序好的子数组合并成一个最终的有序,排序,归并排序,42,0,CON,CON
集合是由确定的、互不相同的对象所组成的整体这些对象具有明确的定义使得对于任何一个对象都能明确判断它是否属于该集合,集合,集合,0,54,CON,CON
指针是存储变量内存地址并通过该地址访问变量的变量,指针,访问,0,17,CON,CON
哈希表是通过哈希函数将键映射到特定位置存储数据的数据结构,映射,哈希函数,12,6,CON,CON
哈希表是通过哈希函数将键映射到特定位置存储数据的数据结构,映射,哈希表,12,0,CON,CON
哈希表是通过哈希函数将键映射到特定位置存储数据的数据结构,哈希函数,哈希表,6,0,CON,CON
比较排序是通过比较元素大小来确定其最终位置的排序方法,排序,比较排序,22,0,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,满二叉树,二叉树,0,24,CON,CON
堆是一种特殊的数据结构，父节点键值大于或小于子节点,父节点,子节点,12,22,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,二分查找,15,0,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,查找,15,24,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,二分查找,查找,0,24,CON,CON
选择排序的核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,排序,12,47,CON,CON
选择排序的核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,排序,12,30,CON,CON
选择排序的核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,选择排序,12,0,CON,CON
选择排序的核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,排序,47,30,CON,CON
选择排序的核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,选择排序,47,0,CON,CON
选择排序的核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,选择排序,30,0,CON,CON
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,22,0,CON,CON
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,22,45,CON,CON
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即数据元素之间的关系不再是一对一的线性关系,非线性结构,数据元素,0,45,CON,CON
深度优先搜索是一种在图或树等数据结构中进行遍历或搜索的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续,深度优先搜索,路径,0,48,CON,CON
深度优先搜索是一种在图或树等数据结构中进行遍历或搜索的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续,深度优先搜索,遍历,0,21,CON,CON
深度优先搜索是一种在图或树等数据结构中进行遍历或搜索的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续,路径,遍历,48,21,CON,CON
单链表是一种每个节点只含一个指针域的线性表,线性表,指针,18,14,CON,CON
单链表是一种每个节点只含一个指针域的线性表,线性表,单链表,18,0,CON,CON
单链表是一种每个节点只含一个指针域的线性表,指针,单链表,14,0,CON,CON
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性,集合,集合,41,0,CON,CON
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性,集合,集合,41,35,CON,CON
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性,集合,集合,0,35,CON,CON
顺序表是一种线性表，其核心特征是逻辑上相邻的元素在物理存储位置上也相邻，它用一组地址连续的存储单元依次存储线性表中的数据元素，,数据元素,线性表,58,53,CON,CON
顺序表是一种线性表，其核心特征是逻辑上相邻的元素在物理存储位置上也相邻，它用一组地址连续的存储单元依次存储线性表中的数据元素，,数据元素,线性表,58,6,CON,CON
顺序表是一种线性表，其核心特征是逻辑上相邻的元素在物理存储位置上也相邻，它用一组地址连续的存储单元依次存储线性表中的数据元素，,线性表,线性表,53,6,CON,CON
子节点是树结构中直接连接在某个父节点之下的节点，具有直接与父节点相连且处于父节点下一层级的特点,父节点,父节点,15,29,CON,CON
子节点是树结构中直接连接在某个父节点之下的节点，具有直接与父节点相连且处于父节点下一层级的特点,父节点,父节点,15,37,CON,CON
子节点是树结构中直接连接在某个父节点之下的节点，具有直接与父节点相连且处于父节点下一层级的特点,父节点,子节点,15,0,CON,CON
子节点是树结构中直接连接在某个父节点之下的节点，具有直接与父节点相连且处于父节点下一层级的特点,父节点,父节点,29,37,CON,CON
子节点是树结构中直接连接在某个父节点之下的节点，具有直接与父节点相连且处于父节点下一层级的特点,父节点,子节点,29,0,CON,CON
子节点是树结构中直接连接在某个父节点之下的节点，具有直接与父节点相连且处于父节点下一层级的特点,父节点,子节点,37,0,CON,CON
快速排序的核心性质是通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，然后对这两部分分别,排序,快速排序,14,0,CON,CON
二叉搜索树中每个节点左子树值小于该节点右子树值,左子树,二叉搜索树,10,0,CON,CON
二叉搜索树中每个节点左子树值小于该节点右子树值,左子树,右子树,10,19,CON,CON
二叉搜索树中每个节点左子树值小于该节点右子树值,二叉搜索树,右子树,0,19,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,指针,指针,25,38,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,指针,链表,25,48,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,指针,双向链表,25,0,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,指针,遍历,25,46,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,指针,链表,38,48,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,指针,双向链表,38,0,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,指针,遍历,38,46,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,链表,双向链表,48,0,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,链表,遍历,48,46,CON,CON
双向链表的核心性质是每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而可以双向遍历链表,双向链表,遍历,0,46,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,集合,访问,10,59,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,集合,数组,10,0,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,集合,数据类型,10,28,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,集合,数组,10,62,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,访问,数组,59,0,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,访问,数据类型,59,28,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,访问,数组,59,62,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,数组,数据类型,0,28,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,数组,数组,0,62,CON,CON
数组是一种有序的数据集合，其核心特征包括：元素具有相同的数据类型，通过连续的内存空间存储，每个元素可以通过下标进行唯一访问，数组的大小在创建时,数据类型,数组,28,62,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,遍历,查找,19,2,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,遍历,路径,19,33,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,遍历,查找,19,37,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,遍历,根节点,19,24,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,查找,路径,2,33,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,查找,查找,2,37,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,查找,根节点,2,24,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,路径,查找,33,37,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,路径,根节点,33,24,CON,CON
树的查找特点是基于树的结构特性通过特定遍历方式从根节点出发沿着分支路径逐步查找目标元素,查找,根节点,37,24,CON,CON
每次从未排序数据中选最小（大）值放已排序序列末尾,排序,排序,4,18,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,排序,插入,28,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,排序,排序,28,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,排序,排序,28,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,排序,插入排序,28,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置从而完成排序的一种算法,排序,插入排序,15,0,CON,CON
在树形结构中，根节点是没有前驱节点且位于树顶端的起始节点,根节点,前驱节点,7,13,CON,CON
存储结构的特点的核心特征是数据元素之间的逻辑关系在计算机中的存储表示，包括顺序存储结构中数据元素按逻辑顺序依次存放在一组连续存储单元里，链式,数据元素,存储结构,44,0,CON,CON
存储结构的特点的核心特征是数据元素之间的逻辑关系在计算机中的存储表示，包括顺序存储结构中数据元素按逻辑顺序依次存放在一组连续存储单元里，链式,数据元素,数据元素,44,13,CON,CON
存储结构的特点的核心特征是数据元素之间的逻辑关系在计算机中的存储表示，包括顺序存储结构中数据元素按逻辑顺序依次存放在一组连续存储单元里，链式,存储结构,数据元素,0,13,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把已排序的子序列合并成一个最终的有序序列，其核心特征是通过递归地将序列不断,排序,排序,27,21,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把已排序的子序列合并成一个最终的有序序列，其核心特征是通过递归地将序列不断,排序,归并排序,27,0,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把已排序的子序列合并成一个最终的有序序列，其核心特征是通过递归地将序列不断,排序,递归,27,54,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把已排序的子序列合并成一个最终的有序序列，其核心特征是通过递归地将序列不断,排序,归并排序,21,0,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把已排序的子序列合并成一个最终的有序序列，其核心特征是通过递归地将序列不断,排序,递归,21,54,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，再把已排序的子序列合并成一个最终的有序序列，其核心特征是通过递归地将序列不断,归并排序,递归,0,54,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,叶子节点,树的高度,17,0,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,叶子节点,根节点,17,11,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,叶子节点,路径,17,26,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,根节点,0,11,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,26,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上的边数,根节点,路径,11,26,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,二分查找,15,0,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,查找,15,24,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,二分查找,查找,0,24,CON,CON
堆的核心特征是对于堆中的每个节点，其值大于或等于其子节点的值（最大堆）或者小于或等于其子节点的值（最小堆），并且堆是一种完全,堆,堆,33,56,CON,CON
堆的核心特征是对于堆中的每个节点，其值大于或等于其子节点的值（最大堆）或者小于或等于其子节点的值（最小堆），并且堆是一种完全,堆,堆,33,51,CON,CON
堆的核心特征是对于堆中的每个节点，其值大于或等于其子节点的值（最大堆）或者小于或等于其子节点的值（最小堆），并且堆是一种完全,堆,堆,56,51,CON,CON
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直至找到目标节点或遍历完所有节点，它通过,广度优先搜索,访问,0,34,CON,CON
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直至找到目标节点或遍历完所有节点，它通过,广度优先搜索,遍历,0,57,CON,CON
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直至找到目标节点或遍历完所有节点，它通过,访问,遍历,34,57,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,数据元素,指针,12,7,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,数据元素,数据元素,12,31,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,数据元素,指针,12,50,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,数据元素,链表,12,0,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,指针,数据元素,7,31,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,指针,指针,7,50,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,指针,链表,7,0,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,数据元素,指针,31,50,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,数据元素,链表,31,0,CON,CON
链表是一种通过指针将一组数据元素按顺序链接起来的数据结构，每个数据元素包含数据部分和指向下一个元素的指针部分,指针,链表,50,0,CON,CON
算法效率是指算法执行所需要的计算机资源量，包括时间资源和空间资源，通常分别用时间复杂度和空间复杂度来衡量,空间复杂度,时间复杂度,44,38,CON,CON
算法效率的特点是指算法在执行过程中所表现出的与时间和空间相关的特性，包括时间复杂度反映算法执行时间随输入规模增长的变化趋势以及空间复杂度,空间复杂度,时间复杂度,63,36,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,链表,线性表,47,11,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,链表,数据元素,47,21,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,链表,指针,47,34,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,链表,单链表,47,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,链表,访问,47,45,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,链表,头节点,47,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,链表,后继节点,47,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,线性表,数据元素,11,21,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,线性表,指针,11,34,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,线性表,访问,11,45,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,线性表,头节点,11,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,线性表,后继节点,11,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,数据元素,指针,21,34,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,数据元素,单链表,21,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,数据元素,访问,21,45,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,数据元素,头节点,21,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,数据元素,后继节点,21,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,指针,单链表,34,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,指针,访问,34,45,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,指针,头节点,34,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,指针,后继节点,34,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,单链表,访问,0,45,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,单链表,头节点,0,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,单链表,后继节点,0,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,访问,头节点,45,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,访问,后继节点,45,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过头节点可顺序访问链表中的各个节点,头节点,后继节点,39,29,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,后继节点,47,40,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,数据元素,47,24,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,双向链表,47,0,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,指针,前驱节点,47,35,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,后继节点,数据元素,40,24,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,后继节点,双向链表,40,0,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,后继节点,前驱节点,40,35,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,数据元素,双向链表,24,0,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,数据元素,前驱节点,24,35,CON,CON
双向链表是一种线性数据结构，其中每个节点包含一个数据元素以及分别指向其前驱节点和后继节点的两个指针,双向链表,前驱节点,0,35,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值,满二叉树,二叉树,0,24,CON,CON
从根节点到最远叶子节点所经最长路径包含的节点数为树的深度,叶子节点,路径,7,15,CON,CON
从根节点到最远叶子节点所经最长路径包含的节点数为树的深度,叶子节点,根节点,7,1,CON,CON
从根节点到最远叶子节点所经最长路径包含的节点数为树的深度,叶子节点,树的深度,7,24,CON,CON
从根节点到最远叶子节点所经最长路径包含的节点数为树的深度,路径,根节点,15,1,CON,CON
从根节点到最远叶子节点所经最长路径包含的节点数为树的深度,路径,树的深度,15,24,CON,CON
从根节点到最远叶子节点所经最长路径包含的节点数为树的深度,根节点,树的深度,1,24,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,34,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,6,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,6,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,34,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,34,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,10,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,10,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,21,CON,CON
比较排序的核心性质是其排序过程仅通过元素间的比较来确定元素间的相对次序,比较排序,排序,0,11,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
完全二叉树是一种特殊的二叉树，其特点为：除最后一层外，每一层上的节点数均达到最大值,完全二叉树,二叉树,0,11,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,访问,24,48,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,遍历,24,10,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,图,24,9,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,访问,24,37,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,广度优先搜索,24,0,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,遍历,48,10,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,图,48,9,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,访问,48,37,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,广度优先搜索,48,0,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,遍历,图,10,9,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,遍历,访问,10,37,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,遍历,广度优先搜索,10,0,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,图,访问,9,37,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,图,广度优先搜索,9,0,CON,CON
广度优先搜索是一种图遍历算法，从起始顶点开始，先访问其所有邻接顶点，再依次访问这些邻接顶点的未被访问过的邻接顶点，按照,访问,广度优先搜索,37,0,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值,满二叉树,二叉树,0,24,CON,CON
回溯法基础的特点的核心特征是在搜索过程中通过深度优先策略逐步构建解空间树，在每一步决策时试探各种可能情况，若当前选择导致无法继续构建,回溯法,树,0,35,CON,CON
交换排序是一种通过比较元素并交换不满足顺序要求的元素位置来逐步将无序序列转变为有序序列的数据排序方法,交换排序,排序,0,46,CON,CON
叶子节点是数据结构中树状结构里没有子节点的节点,子节点,叶子节点,17,0,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,集合,16,36,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,根节点,16,11,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,树的节点,16,0,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,集合,16,41,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,树,16,54,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,集合,根节点,36,11,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,集合,树的节点,36,0,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,集合,集合,36,41,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,集合,树,36,54,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,树的节点,11,0,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,集合,11,41,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,根节点,树,11,54,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,树的节点,集合,0,41,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,树的节点,树,0,54,CON,CON
树的节点特点包括有一个根节点，除根节点外其余节点被分为若干互不相交的有限集合且这些集合中的节点又各自构成一棵树，每个节点有零个或,集合,树,41,54,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,查找,数组,43,10,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,查找,查找,43,51,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,查找,查找,43,64,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,查找,二分查找,43,0,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,数组,查找,10,51,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,数组,查找,10,64,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,数组,二分查找,10,0,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,查找,查找,51,64,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,查找,二分查找,51,0,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标值的算法其特点在于查找过程,查找,二分查找,64,0,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,访问,访问,31,41,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,访问,遍历,31,13,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,访问,广度优先搜索,31,0,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,访问,访问,31,25,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,访问,遍历,41,13,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,访问,广度优先搜索,41,0,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,访问,访问,41,25,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,遍历,广度优先搜索,13,0,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,遍历,访问,13,25,CON,CON
广度优先搜索是一种图或树的遍历算法，它按照层次依次访问节点，先访问起始节点，再依次访问其邻接节点，然后是这些邻接节点的邻,广度优先搜索,访问,0,25,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,映射,哈希表,20,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,映射,查找,20,52,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,映射,哈希函数,20,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,映射,删除,20,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,映射,插入,20,46,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,哈希表,查找,0,52,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,哈希表,哈希函数,0,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,哈希表,删除,0,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,哈希表,插入,0,46,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,查找,哈希函数,52,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,查找,删除,52,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,查找,插入,52,46,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,哈希函数,删除,14,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,哈希函数,插入,14,46,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到特定位置来存储和检索数据，具有平均情况下快速的插入、删除和查找操作，不同的键经过哈希,删除,插入,49,46,CON,CON
简单排序是对数据序列通过特定比较和交换等操作逐步将元素按序排列的排序方法,排序,简单排序,32,0,CON,CON
图的顶点是图结构中的基本数据元素，它可以用来表示各种实体或对象，并且通过边与其他顶点相连以构成图的结构,图的顶点,数据元素,0,12,CON,CON
递归基础是递归算法中存在的一种情况，即当问题规模减小到某一特定值时，可直接得出问题的解而无需再次递归调用,递归,递归,48,5,CON,CON
递归基础是递归算法中存在的一种情况，即当问题规模减小到某一特定值时，可直接得出问题的解而无需再次递归调用,递归,递归基础,48,0,CON,CON
递归基础是递归算法中存在的一种情况，即当问题规模减小到某一特定值时，可直接得出问题的解而无需再次递归调用,递归,递归基础,5,0,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,数据元素,表头,22,43,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,数据元素,表尾,22,46,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,数据元素,线性表,22,0,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,数据元素,表头,22,51,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,数据元素,数据类型,22,10,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表头,表尾,43,46,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表头,线性表,43,0,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表头,表头,43,51,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表头,数据类型,43,10,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表尾,线性表,46,0,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表尾,表头,46,51,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表尾,数据类型,46,10,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,线性表,表头,0,51,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,线性表,数据类型,0,10,CON,CON
线性表是一种具有相同数据类型的有限序列，其中数据元素之间存在一对一的线性关系，有唯一的表头和表尾，且除表头外每个元素有唯一前驱，,表头,数据类型,51,10,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,叶子节点,树的深度,12,36,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,叶子节点,路径,12,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,叶子节点,树的高度,12,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,叶子节点,根节点,12,6,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,树的深度,路径,36,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,树的深度,树的高度,36,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,树的深度,根节点,36,6,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,路径,树的高度,21,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,路径,根节点,21,6,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数或节点数所体现出的树的深度特征,树的高度,根节点,0,6,CON,CON
树的节点是包含数据以及指向其子节点的指针（若存在子节点）的基本数据结构单元,指针,树的节点,18,0,CON,CON
树的节点是包含数据以及指向其子节点的指针（若存在子节点）的基本数据结构单元,指针,子节点,18,24,CON,CON
树的节点是包含数据以及指向其子节点的指针（若存在子节点）的基本数据结构单元,树的节点,子节点,0,24,CON,CON
数据的物理结构的核心特征是数据元素在计算机中的存储方式以及数据元素之间的逻辑关系在计算机中的存储表示，包括数据元素的存储位置以及它们之间的连接关系,物理结构,数据元素,3,29,CON,CON
数据的物理结构的核心特征是数据元素在计算机中的存储方式以及数据元素之间的逻辑关系在计算机中的存储表示，包括数据元素的存储位置以及它们之间的连接关系,物理结构,数据元素,3,13,CON,CON
数据的物理结构的核心特征是数据元素在计算机中的存储方式以及数据元素之间的逻辑关系在计算机中的存储表示，包括数据元素的存储位置以及它们之间的连接关系,物理结构,数据元素,3,53,CON,CON
数据的物理结构的核心特征是数据元素在计算机中的存储方式以及数据元素之间的逻辑关系在计算机中的存储表示，包括数据元素的存储位置以及它们之间的连接关系,数据元素,数据元素,29,13,CON,CON
数据的物理结构的核心特征是数据元素在计算机中的存储方式以及数据元素之间的逻辑关系在计算机中的存储表示，包括数据元素的存储位置以及它们之间的连接关系,数据元素,数据元素,29,53,CON,CON
数据的物理结构的核心特征是数据元素在计算机中的存储方式以及数据元素之间的逻辑关系在计算机中的存储表示，包括数据元素的存储位置以及它们之间的连接关系,数据元素,数据元素,13,53,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其核心性质包括数据元素的表示以及数据元素间关系的表示，它决定了数据在计算机中的存储方式和,存储结构,数据元素,0,33,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其核心性质包括数据元素的表示以及数据元素间关系的表示，它决定了数据在计算机中的存储方式和,存储结构,数据元素,0,42,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其核心性质包括数据元素的表示以及数据元素间关系的表示，它决定了数据在计算机中的存储方式和,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其核心性质包括数据元素的表示以及数据元素间关系的表示，它决定了数据在计算机中的存储方式和,数据元素,数据元素,33,42,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其核心性质包括数据元素的表示以及数据元素间关系的表示，它决定了数据在计算机中的存储方式和,数据元素,数据元素,33,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其核心性质包括数据元素的表示以及数据元素间关系的表示，它决定了数据在计算机中的存储方式和,数据元素,数据元素,42,6,CON,CON
父节点是树结构中位于某个节点之上，与该节点存在直接连接关系且具有较高层级的节点，其具有能够直接衍生出子节点的特点，在树的层级,子节点,父节点,50,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,二叉树,47,22,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,遍历,47,3,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,根节点,47,52,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,47,58,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,47,38,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,47,20,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,47,50,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,二叉树,47,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,递归,47,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,左子树,47,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,遍历,22,3,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,根节点,22,52,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,访问,22,58,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,访问,22,38,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,访问,22,20,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,访问,22,50,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,二叉树,22,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,递归,22,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,左子树,22,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,根节点,3,52,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,3,58,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,3,38,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,3,20,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,访问,3,50,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,二叉树,3,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,递归,3,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,遍历,左子树,3,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,根节点,访问,52,58,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,根节点,访问,52,38,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,根节点,访问,52,20,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,根节点,访问,52,50,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,根节点,二叉树,52,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,根节点,递归,52,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,根节点,左子树,52,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,访问,58,38,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,访问,58,20,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,访问,58,50,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,二叉树,58,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,递归,58,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,左子树,58,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,访问,38,20,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,访问,38,50,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,二叉树,38,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,递归,38,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,左子树,38,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,访问,20,50,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,二叉树,20,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,递归,20,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,左子树,20,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,二叉树,50,0,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,递归,50,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,访问,左子树,50,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,递归,0,56,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,二叉树,左子树,0,60,CON,CON
二叉树遍历的定义的核心性质是按照特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，包括前序遍历先访问根节点再递归访问左子树,递归,左子树,56,60,CON,CON
引用是给已存在变量起的一个别名，对引用的操作实际上就是对其引用的变量的操作，引用必须在定义时初始化且初始化后不能再引用其他变量,初始化,初始化,46,50,CON,CON
连通图是图中任意两个顶点之间都存在路径的图,连通图,路径,0,17,CON,CON
栈是一种后进先出的数据结构，其核心性质为元素按照后进先出的顺序进行入栈和出栈操作,出栈,入栈,36,33,CON,CON
从根节点到最远叶节点所经最长路径上的节点数为树的深度,树的深度,根节点,22,1,CON,CON
从根节点到最远叶节点所经最长路径上的节点数为树的深度,树的深度,路径,22,14,CON,CON
从根节点到最远叶节点所经最长路径上的节点数为树的深度,根节点,路径,1,14,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,查找,24,54,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,遍历,24,45,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,查找,24,2,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,线性表,24,50,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,线性表,24,6,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,遍历,54,45,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,查找,54,2,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,线性表,54,50,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,线性表,54,6,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,遍历,查找,45,2,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,遍历,线性表,45,50,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,遍历,线性表,45,6,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,线性表,2,50,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,查找,线性表,2,6,CON,CON
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到该关键字或者遍历完整个线性表的查找方法,线性表,线性表,50,6,CON,CON
堆是一种特殊的数据结构，它满足父节点的值大于或小于其子节点的值（大顶堆或小顶堆），并且具有完全二叉树的结构,父节点,完全二叉树,15,45,CON,CON
数组是相同类型数据的有序集合通过下标访问,集合,数组,12,0,CON,CON
数组是相同类型数据的有序集合通过下标访问,集合,访问,12,18,CON,CON
数组是相同类型数据的有序集合通过下标访问,数组,访问,0,18,CON,CON
树的度是指树中所有结点的度的最大值其中结点的度是该结点拥有子树的数目,树的度,子树,0,29,CON,CON
树的查找是在树形结构中基于节点间层次关系与连接特性，通过特定规则从根节点或指定起始节点出发，沿着分支路径遍历节点以确定目标元素是否存在,根节点,遍历,33,52,CON,CON
树的查找是在树形结构中基于节点间层次关系与连接特性，通过特定规则从根节点或指定起始节点出发，沿着分支路径遍历节点以确定目标元素是否存在,根节点,查找,33,2,CON,CON
树的查找是在树形结构中基于节点间层次关系与连接特性，通过特定规则从根节点或指定起始节点出发，沿着分支路径遍历节点以确定目标元素是否存在,根节点,路径,33,50,CON,CON
树的查找是在树形结构中基于节点间层次关系与连接特性，通过特定规则从根节点或指定起始节点出发，沿着分支路径遍历节点以确定目标元素是否存在,遍历,查找,52,2,CON,CON
树的查找是在树形结构中基于节点间层次关系与连接特性，通过特定规则从根节点或指定起始节点出发，沿着分支路径遍历节点以确定目标元素是否存在,遍历,路径,52,50,CON,CON
树的查找是在树形结构中基于节点间层次关系与连接特性，通过特定规则从根节点或指定起始节点出发，沿着分支路径遍历节点以确定目标元素是否存在,查找,路径,2,50,CON,CON
叶子节点是数据结构中没有子节点的节点,子节点,叶子节点,12,0,CON,CON
"无向图是一种图结构其中任意两个顶点之间的边没有方向即顶点对(u,v)和顶点对(v,u)表示同一条边",图,无向图,6,0,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点,二叉树,二叉树,0,13,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点,二叉树,遍历,0,3,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点,二叉树,访问,0,11,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点,二叉树,遍历,13,3,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点,二叉树,访问,13,11,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点,遍历,访问,3,11,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机存储器中的存储方式包括顺序存储链式存储索引存储散列存储等体现数据元素之间的逻辑关系以及数据元素在,数据元素,物理结构,54,3,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机存储器中的存储方式包括顺序存储链式存储索引存储散列存储等体现数据元素之间的逻辑关系以及数据元素在,数据元素,数据元素,54,67,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机存储器中的存储方式包括顺序存储链式存储索引存储散列存储等体现数据元素之间的逻辑关系以及数据元素在,物理结构,数据元素,3,67,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,6,10,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,映射,6,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,6,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,6,33,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,映射,10,0,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,10,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,10,33,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,映射,集合,0,21,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,映射,集合,0,33,CON,CON
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,集合,集合,21,33,CON,CON
算法效率的特点包括时间复杂度反映算法执行时间随问题规模增长的变化趋势空间复杂度体现算法执行过程中所需存储空间随问题规模增长的变化情况最优情况、最坏情况和,时间复杂度,空间复杂度,9,34,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应这一核心性质,集合,映射,6,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应这一核心性质,集合,集合,6,18,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一的元素与之对应这一核心性质,映射,集合,0,18,CON,CON
邻接矩阵是表示图的一种方式，对于有\(n\)个顶点的图，其邻接矩阵是一个\(n\times n\)的矩阵，若顶点,邻接矩阵,邻接矩阵,0,29,CON,CON
连通图中任意两点之间都存在路径可相互连通,连通图,路径,0,13,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,二叉树,右子树,8,43,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,二叉树,左子树,8,22,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,二叉树,二叉搜索树,8,0,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,右子树,左子树,43,22,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,右子树,二叉搜索树,43,0,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,左子树,二叉搜索树,22,0,CON,CON
递归基础是递归算法中最简单情况，通常是无需递归调用即可直接得出结果的终止条件,递归,递归,21,5,CON,CON
递归基础是递归算法中最简单情况，通常是无需递归调用即可直接得出结果的终止条件,递归,递归基础,21,0,CON,CON
递归基础是递归算法中最简单情况，通常是无需递归调用即可直接得出结果的终止条件,递归,递归基础,5,0,CON,CON
线性表是数据元素按线性关系排列的有限序列,数据元素,线性表,4,0,CON,CON
堆是一种特殊的数据结构，其核心特征为：父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值，并且堆通常采用,父节点,堆,19,54,CON,CON
树是一种分层数据结构包含根节点及子节点,根节点,子节点,12,16,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来访问和修改元素，内存中存储紧凑且连续，在数据量较大时可方便地批量处理,集合,访问,9,33,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来访问和修改元素，内存中存储紧凑且连续，在数据量较大时可方便地批量处理,集合,数组,9,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来访问和修改元素，内存中存储紧凑且连续，在数据量较大时可方便地批量处理,集合,数据类型,9,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来访问和修改元素，内存中存储紧凑且连续，在数据量较大时可方便地批量处理,访问,数组,33,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来访问和修改元素，内存中存储紧凑且连续，在数据量较大时可方便地批量处理,访问,数据类型,33,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，通过下标来访问和修改元素，内存中存储紧凑且连续，在数据量较大时可方便地批量处理,数组,数据类型,0,23,CON,CON
非线性结构中至少存在一个数据元素有两个或两个以上直接前驱或直接后继即各数据元素之间的逻辑关系不再是线性的,非线性结构,数据元素,0,12,CON,CON
非线性结构中至少存在一个数据元素有两个或两个以上直接前驱或直接后继即各数据元素之间的逻辑关系不再是线性的,非线性结构,数据元素,0,35,CON,CON
非线性结构中至少存在一个数据元素有两个或两个以上直接前驱或直接后继即各数据元素之间的逻辑关系不再是线性的,数据元素,数据元素,12,35,CON,CON
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步转换为有序序列，其特点包括在排序过程中相邻元素不断比较大小，若顺序错误则进行,排序,交换排序,43,0,CON,CON
引用是给已存在的变量起一个别名，对引用的操作实际上就是对其所引用变量的操作，引用必须在定义时初始化且一旦初始化便不能再引用其他变量,初始化,初始化,46,52,CON,CON
二叉树的核心性质是在二叉树的第i层上至多有2的i-1次方个节点，深度为k的二叉树至多有2的k次方减1个,二叉树,二叉树,10,37,CON,CON
二叉树的核心性质是在二叉树的第i层上至多有2的i-1次方个节点，深度为k的二叉树至多有2的k次方减1个,二叉树,二叉树,10,0,CON,CON
二叉树的核心性质是在二叉树的第i层上至多有2的i-1次方个节点，深度为k的二叉树至多有2的k次方减1个,二叉树,二叉树,37,0,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,数组,排序,11,20,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,数组,数组,11,6,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,数组,排序,11,13,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,数组,归并排序,11,0,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,排序,数组,20,6,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,排序,排序,20,13,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,排序,归并排序,20,0,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,数组,排序,6,13,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,数组,归并排序,6,0,CON,CON
归并排序是将数组分成子数组排序后再合并的排序算法,排序,归并排序,13,0,CON,CON
数据类型是一组值的集合以及定义在这组值上的一组操作的总称,数据类型,集合,0,9,CON,CON
数据的物理结构是指数据在计算机中的存储方式包括数据元素的存储表示及其逻辑关系的表示,物理结构,数据元素,3,23,CON,CON
深度优先搜索是一种从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索算法,深度优先搜索,路径,0,56,CON,CON
深度优先搜索是一种从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索算法,深度优先搜索,路径,0,21,CON,CON
深度优先搜索是一种从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径的搜索算法,路径,路径,56,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
堆排序是利用堆结构特性进行排序的算法,排序,堆排序,13,0,CON,CON
堆排序是利用堆结构特性进行排序的算法,排序,堆,13,6,CON,CON
堆排序是利用堆结构特性进行排序的算法,堆排序,堆,0,6,CON,CON
递归基础是递归算法中满足特定条件的初始情况，通常是问题规模足够小以至于可以直接得出结果而无需进一步递归调用的情况,递归,递归,49,5,CON,CON
递归基础是递归算法中满足特定条件的初始情况，通常是问题规模足够小以至于可以直接得出结果而无需进一步递归调用的情况,递归,递归基础,49,0,CON,CON
递归基础是递归算法中满足特定条件的初始情况，通常是问题规模足够小以至于可以直接得出结果而无需进一步递归调用的情况,递归,递归基础,5,0,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,树的高度,根节点,50,26,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,树的高度,查找,50,45,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,树的高度,查找,50,2,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,树的高度,路径,50,35,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,树的高度,遍历,50,21,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,根节点,查找,26,45,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,根节点,查找,26,2,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,根节点,路径,26,35,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,根节点,遍历,26,21,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,查找,查找,45,2,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,查找,路径,45,35,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,查找,遍历,45,21,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,查找,路径,2,35,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,查找,遍历,2,21,CON,CON
树的查找特点是基于树的结构特性，通过特定的遍历方式从根节点开始沿着分支路径搜索目标元素，其查找效率受树的高度、节点分布等因素影响,路径,遍历,35,21,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机内存或存储设备中的实际存储方式，包括数据元素的存储位置以及它们之间的存储关系，它与数据的,物理结构,数据元素,3,42,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
链表的核心特征是通过指针将一系列节点连接起来，每个节点包含数据和指向下一个节点的指针，从而形成一个逻辑上连续的数据结构,指针,链表,40,0,CON,CON
链表的核心特征是通过指针将一系列节点连接起来，每个节点包含数据和指向下一个节点的指针，从而形成一个逻辑上连续的数据结构,指针,指针,40,10,CON,CON
链表的核心特征是通过指针将一系列节点连接起来，每个节点包含数据和指向下一个节点的指针，从而形成一个逻辑上连续的数据结构,链表,指针,0,10,CON,CON
递归基础是递归函数中无需再次递归调用的终止条件,递归,递归基础,14,0,CON,CON
比较排序是基于元素之间的比较来确定元素的相对顺序从而实现排序的排序算法其核心特征是通过比较元素大小来逐步构建有序序列,排序,排序,28,31,CON,CON
比较排序是基于元素之间的比较来确定元素的相对顺序从而实现排序的排序算法其核心特征是通过比较元素大小来逐步构建有序序列,排序,比较排序,28,0,CON,CON
比较排序是基于元素之间的比较来确定元素的相对顺序从而实现排序的排序算法其核心特征是通过比较元素大小来逐步构建有序序列,排序,比较排序,31,0,CON,CON
父节点是在树形结构中直接有子节点与之相连且处于较高层次或位置能对其下一层子节点起到统领、关联或作为其源头等作用的节点,子节点,子节点,36,13,CON,CON
父节点是在树形结构中直接有子节点与之相连且处于较高层次或位置能对其下一层子节点起到统领、关联或作为其源头等作用的节点,子节点,父节点,36,0,CON,CON
父节点是在树形结构中直接有子节点与之相连且处于较高层次或位置能对其下一层子节点起到统领、关联或作为其源头等作用的节点,子节点,父节点,13,0,CON,CON
堆是一种优先队列数据结构，其特点是父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值,父节点,队列,17,6,CON,CON
根节点是树结构中的起始节点，它没有父节点，是整个树结构的入口点，所有其他节点都直接或间接连接到根节点，它处于树的顶层位置,根节点,父节点,47,17,CON,CON
根节点是树结构中的起始节点，它没有父节点，是整个树结构的入口点，所有其他节点都直接或间接连接到根节点，它处于树的顶层位置,根节点,根节点,47,0,CON,CON
根节点是树结构中的起始节点，它没有父节点，是整个树结构的入口点，所有其他节点都直接或间接连接到根节点，它处于树的顶层位置,父节点,根节点,17,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入,20,16,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,12,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,33,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,20,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,12,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,33,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,插入排序,16,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,12,33,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,12,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,33,0,CON,CON
树的查找特点是基于树的结构特性通过特定的遍历或比较方式在树中定位特定元素以确定其是否存在或获取其相关信息,查找,遍历,2,20,CON,CON
在图论中回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点且路径中各边互不相同的路径（若允许边重复,路径,回路,39,4,CON,CON
在图论中回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点且路径中各边互不相同的路径（若允许边重复,路径,路径,39,49,CON,CON
在图论中回路是指在图中从一个顶点出发，沿着边经过一系列顶点后又回到该起始顶点且路径中各边互不相同的路径（若允许边重复,回路,路径,4,49,CON,CON
堆是一种特殊数据结构，父节点键值大于或小于子节点,子节点,父节点,21,11,CON,CON
栈是一种后进先出的数据结构，其核心性质为元素的插入和删除操作都在栈顶进行，新元素总是被添加到栈顶位置，而删除操作也总是,插入,删除,23,52,CON,CON
栈是一种后进先出的数据结构，其核心性质为元素的插入和删除操作都在栈顶进行，新元素总是被添加到栈顶位置，而删除操作也总是,插入,删除,23,26,CON,CON
栈是一种后进先出的数据结构，其核心性质为元素的插入和删除操作都在栈顶进行，新元素总是被添加到栈顶位置，而删除操作也总是,删除,删除,52,26,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,子节点,51,0,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,子节点,51,43,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,父节点,51,13,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,父节点,51,27,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,子节点,0,43,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,父节点,0,13,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,父节点,0,27,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,父节点,43,13,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,子节点,父节点,43,27,CON,CON
子节点是树结构中直接连接在父节点之下的节点，具有唯一的父节点，且其自身可以有零个或多个子节点，同时每个子节点都处于特定,父节点,父节点,13,27,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,线性表,38,11,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,指针,38,43,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,数据元素,38,24,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,后继节点,38,33,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,单链表,38,0,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,线性表,指针,11,43,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,线性表,数据元素,11,24,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,线性表,后继节点,11,33,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,数据元素,43,24,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,后继节点,43,33,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,指针,单链表,43,0,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,数据元素,后继节点,24,33,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,数据元素,单链表,24,0,CON,CON
单链表是一种链式存储的线性表，其每个节点包含一个数据元素和一个指向后继节点的指针，通过指针依次连接各个节点，具有逻辑上相邻但物理存储位置,后继节点,单链表,33,0,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边前进，最终能回到出发点且所经过的边互不重复（简单回路）或经过的边可以重复（,回路,回路,21,0,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边前进，最终能回到出发点且所经过的边互不重复（简单回路）或经过的边可以重复（,回路,回路,21,9,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边前进，最终能回到出发点且所经过的边互不重复（简单回路）或经过的边可以重复（,回路,回路,21,49,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边前进，最终能回到出发点且所经过的边互不重复（简单回路）或经过的边可以重复（,回路,回路,0,9,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边前进，最终能回到出发点且所经过的边互不重复（简单回路）或经过的边可以重复（,回路,回路,0,49,CON,CON
回路的核心性质是从回路中任意一点出发，沿着回路的边前进，最终能回到出发点且所经过的边互不重复（简单回路）或经过的边可以重复（,回路,回路,9,49,CON,CON
线性查找是从数据序列的起始位置开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法,遍历,查找,42,2,CON,CON
线性查找是从数据序列的起始位置开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法,遍历,查找,42,50,CON,CON
线性查找是从数据序列的起始位置开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法,查找,查找,2,50,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列仍未找到,查找,遍历,33,55,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列仍未找到,查找,顺序查找,33,0,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列仍未找到,遍历,顺序查找,55,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树的层次结构特性及节点分布的纵向跨度,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树的层次结构特性及节点分布的纵向跨度,根节点,路径,6,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树的层次结构特性及节点分布的纵向跨度,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树的层次结构特性及节点分布的纵向跨度,树的深度,路径,0,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树的层次结构特性及节点分布的纵向跨度,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树的层次结构特性及节点分布的纵向跨度,路径,叶子节点,22,12,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,头节点,59,19,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,尾节点,59,11,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,链表,59,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,遍历,59,57,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,链表,59,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,指针,59,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,循环链表,59,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,后继节点,遍历,59,64,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,头节点,尾节点,19,11,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,头节点,链表,19,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,头节点,遍历,19,57,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,头节点,链表,19,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,头节点,指针,19,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,头节点,循环链表,19,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,头节点,遍历,19,64,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,尾节点,链表,11,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,尾节点,遍历,11,57,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,尾节点,链表,11,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,尾节点,指针,11,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,尾节点,循环链表,11,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,尾节点,遍历,11,64,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,遍历,7,57,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,链表,7,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,指针,7,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,循环链表,7,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,遍历,7,64,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,遍历,链表,57,37,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,遍历,指针,57,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,遍历,循环链表,57,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,遍历,遍历,57,64,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,指针,37,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,循环链表,37,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,链表,遍历,37,64,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,指针,循环链表,15,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,指针,遍历,15,64,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点开始，都可以通过依次遍历后继节点而遍历整个,循环链表,遍历,0,64,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，对树中的结点按从上至下、从左到右的顺序进行编号，如果编号为i（1,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点，若设二叉树的,二叉树,完全二叉树,10,0,CON,CON
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点，若设二叉树的,二叉树,二叉树,10,55,CON,CON
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点，若设二叉树的,完全二叉树,二叉树,0,55,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,链表,指针,7,34,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,链表,指针,7,56,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,链表,遍历,7,66,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,指针,指针,34,56,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,指针,遍历,34,66,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,指针,双向链表,34,0,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,指针,遍历,56,66,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,指针,双向链表,56,0,CON,CON
双向链表是一种链表数据结构，其中每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历,遍历,双向链表,66,0,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而将输入序列转换为有序序列的排序算法,排序,比较排序,36,0,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,数组,查找,19,43,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,数组,数组,19,10,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,数组,数组,19,60,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,数组,二分查找,19,0,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,查找,数组,43,10,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,查找,数组,43,60,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,查找,二分查找,43,0,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,数组,数组,10,60,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,数组,二分查找,10,0,CON,CON
二分查找是在一个有序数组中，通过不断将数组中间元素与目标值比较，若中间元素等于目标值则查找成功，若中间元素大于目标值则在数组前,数组,二分查找,60,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即各数据元素之间的逻辑关系不再是线性的一对一关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即各数据元素之间的逻辑关系不再是线性的一对一关系,数据元素,数据元素,18,42,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，即各数据元素之间的逻辑关系不再是线性的一对一关系,非线性结构,数据元素,0,42,CON,CON
根节点是树结构中位于顶端没有父节点的节点,父节点,根节点,14,0,CON,CON
回溯法是通过尝试多条路径来求解问题并在不满足条件时回退的方法,回溯法,路径,0,10,CON,CON
二叉树遍历是按特定顺序访问其所有节点的操作,遍历,二叉树,3,0,CON,CON
二叉树遍历是按特定顺序访问其所有节点的操作,遍历,访问,3,11,CON,CON
二叉树遍历是按特定顺序访问其所有节点的操作,二叉树,访问,0,11,CON,CON
递归基础是递归算法中存在的一种简单情况，在此情况下递归函数可直接返回一个确定值而无需再次调用自身,递归,递归基础,5,0,CON,CON
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数,树的深度,叶子节点,0,23,CON,CON
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数,树的深度,根节点,0,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数,叶子节点,根节点,23,6,CON,CON
比较排序的核心性质是其排序过程仅通过元素间的比较操作来确定元素的相对次序,比较排序,排序,0,11,CON,CON
线性结构的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和一个直接,数据元素,线性结构,39,0,CON,CON
线性结构的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和一个直接,数据元素,数据元素,39,47,CON,CON
线性结构的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和一个直接,数据元素,数据元素,39,10,CON,CON
线性结构的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和一个直接,线性结构,数据元素,0,47,CON,CON
线性结构的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和一个直接,线性结构,数据元素,0,10,CON,CON
线性结构的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和一个直接,数据元素,数据元素,47,10,CON,CON
迭代法的核心特征是基于已有的初始值，按照固定的迭代公式不断重复计算，逐步逼近问题的解，每次迭代的结果都作为下一次迭代的输入，直到,迭代,迭代,45,56,CON,CON
迭代法的核心特征是基于已有的初始值，按照固定的迭代公式不断重复计算，逐步逼近问题的解，每次迭代的结果都作为下一次迭代的输入，直到,迭代,迭代,45,23,CON,CON
迭代法的核心特征是基于已有的初始值，按照固定的迭代公式不断重复计算，逐步逼近问题的解，每次迭代的结果都作为下一次迭代的输入，直到,迭代,迭代法,45,0,CON,CON
迭代法的核心特征是基于已有的初始值，按照固定的迭代公式不断重复计算，逐步逼近问题的解，每次迭代的结果都作为下一次迭代的输入，直到,迭代,迭代,56,23,CON,CON
迭代法的核心特征是基于已有的初始值，按照固定的迭代公式不断重复计算，逐步逼近问题的解，每次迭代的结果都作为下一次迭代的输入，直到,迭代,迭代法,56,0,CON,CON
迭代法的核心特征是基于已有的初始值，按照固定的迭代公式不断重复计算，逐步逼近问题的解，每次迭代的结果都作为下一次迭代的输入，直到,迭代,迭代法,23,0,CON,CON
树的高度是从根节点开始，沿着最长简单路径到最远叶节点所经过的边的数目,根节点,树的高度,6,0,CON,CON
树的高度是从根节点开始，沿着最长简单路径到最远叶节点所经过的边的数目,根节点,路径,6,18,CON,CON
树的高度是从根节点开始，沿着最长简单路径到最远叶节点所经过的边的数目,树的高度,路径,0,18,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,头节点,单链表,61,0,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,头节点,指针,61,45,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,头节点,数据元素,61,17,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,头节点,指针,61,33,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,单链表,指针,0,45,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,单链表,数据元素,0,17,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,单链表,指针,0,33,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,指针,数据元素,45,17,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,指针,指针,45,33,CON,CON
单链表的核心特征是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过这些节点之间的指针依次连接形成线性序列，且只有头节点没有前驱，,数据元素,指针,17,33,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,链表,68,58,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,指针,68,24,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,指针,68,34,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,访问,68,54,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,单链表,68,0,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,头节点,68,45,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,头节点,68,50,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,链表,指针,58,24,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,链表,指针,58,34,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,链表,访问,58,54,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,链表,单链表,58,0,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,链表,头节点,58,45,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,链表,头节点,58,50,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,指针,24,34,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,访问,24,54,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,单链表,24,0,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,头节点,24,45,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,头节点,24,50,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,访问,34,54,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,单链表,34,0,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,头节点,34,45,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,指针,头节点,34,50,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,单链表,54,0,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,头节点,54,45,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,访问,头节点,54,50,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,单链表,头节点,0,45,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,单链表,头节点,0,50,CON,CON
单链表由节点组成每个节点包含数据和指向下一节点的指针且最后一个节点的指针为空第一个节点称为头节点通过头节点可访问整个链表每个节点只能直接访问,头节点,头节点,45,50,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,后继节点,28,45,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,双向链表,28,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,指针,28,55,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,前驱节点,28,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,后继节点,双向链表,45,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,后继节点,指针,45,55,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,后继节点,前驱节点,45,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,指针,0,55,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,前驱节点,0,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,前驱节点,55,35,CON,CON
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数,树的深度,叶子节点,0,23,CON,CON
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数,树的深度,根节点,0,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加直到最远叶子节点所经过的层数,叶子节点,根节点,23,6,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,指针,线性表,47,11,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,指针,单链表,47,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,指针,数据元素,47,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,指针,尾节点,47,53,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,线性表,数据元素,11,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,线性表,尾节点,11,53,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,单链表,数据元素,0,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,单链表,尾节点,0,53,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，且除了尾节点外每个节点的,数据元素,尾节点,32,53,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表,表尾,插入,8,12,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表,表尾,线性表,8,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表,表尾,删除,8,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表,插入,线性表,12,20,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表,插入,删除,12,15,CON,CON
栈是一种限定仅在表尾进行插入和删除操作的线性表,线性表,删除,20,15,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,数组,堆排序,28,0,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,数组,堆,28,41,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,数组,排序,28,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,数组,堆,28,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,数组,堆,28,56,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆排序,堆,0,41,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆排序,排序,0,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆排序,堆,0,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆排序,堆,0,56,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆,排序,41,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆,堆,41,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆,堆,41,56,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,排序,堆,20,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,排序,堆,20,56,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它先将数组构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆，从而,堆,堆,7,56,CON,CON
有向图是一种由顶点集合及顶点间的有向边构成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点,集合,有向图,9,0,CON,CON
图的顶点是图结构中的基本数据元素，它可以代表各种实体或对象，并且与其他顶点通过边相互连接从而构成图的结构,图的顶点,数据元素,0,12,CON,CON
回溯法基础的特点的核心性质是在问题的解空间树中，按照深度优先策略，从根节点出发搜索解空间，通过判断当前节点是否满足约束条件和目标,回溯法,根节点,0,34,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,左子树,44,40,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,根节点,44,26,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,二叉树,44,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,右子树,44,35,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,子树,44,15,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,左子树,44,31,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,二叉树,44,50,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,左子树,根节点,40,26,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,左子树,二叉树,40,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,左子树,右子树,40,35,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,左子树,子树,40,15,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,左子树,左子树,40,31,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,左子树,二叉树,40,50,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,根节点,二叉树,26,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,根节点,右子树,26,35,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,根节点,子树,26,15,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,根节点,左子树,26,31,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,根节点,二叉树,26,50,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,二叉树,右子树,0,35,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,二叉树,子树,0,15,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,二叉树,左子树,0,31,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,二叉树,二叉树,0,50,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,子树,35,15,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,左子树,35,31,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,右子树,二叉树,35,50,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,子树,左子树,15,31,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,子树,二叉树,15,50,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构包括一个根节点以及左子树和右子树并且左子树和右子树也都是二叉树,左子树,二叉树,31,50,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
简单排序的核心特征是通过比较元素之间的大小关系，将无序序列逐步转换为有序序列，其排序过程相对直观和基础，通常基于相邻元素的比较与交换操作,排序,简单排序,40,0,CON,CON
二叉树每个节点最多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,二叉树,12,17,CON,CON
二叉树每个节点最多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,子树,12,21,CON,CON
二叉树每个节点最多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,二叉树,12,0,CON,CON
二叉树每个节点最多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,二叉树,子树,17,21,CON,CON
二叉树每个节点最多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,二叉树,二叉树,17,0,CON,CON
二叉树每个节点最多有两棵子树，并且二叉树的子树有左右之分，次序不能颠倒,子树,二叉树,21,0,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
在树形数据结构中父节点是其直接子节点的上一级节点且拥有指向这些子节点的引用或链接,子节点,子节点,31,15,CON,CON
在树形数据结构中父节点是其直接子节点的上一级节点且拥有指向这些子节点的引用或链接,子节点,父节点,31,8,CON,CON
在树形数据结构中父节点是其直接子节点的上一级节点且拥有指向这些子节点的引用或链接,子节点,父节点,15,8,CON,CON
数据逻辑结构特点是数据元素间抽象关系的体现,数据元素,逻辑结构,9,2,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值,满二叉树,二叉树,0,24,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,路径,叶子节点,27,15,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,路径,树的高度,27,0,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,路径,根节点,27,6,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,叶子节点,树的高度,15,0,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,叶子节点,根节点,15,6,CON,CON
树的高度是从根节点开始，到最远叶子节点所经过的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
在树形结构中，父节点是直接有子节点连接在其下方，且自身不是任何其他节点子节点的节点,子节点,父节点,35,7,CON,CON
在树形结构中，父节点是直接有子节点连接在其下方，且自身不是任何其他节点子节点的节点,子节点,子节点,35,14,CON,CON
在树形结构中，父节点是直接有子节点连接在其下方，且自身不是任何其他节点子节点的节点,父节点,子节点,7,14,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而将给定元素序列重新排列成有序序列的排序算法,排序,比较排序,40,0,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中数据元素之间存在一对一的线性关系,数据元素,数据类型,20,8,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中数据元素之间存在一对一的线性关系,数据元素,线性表,20,0,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中数据元素之间存在一对一的线性关系,数据元素,数据元素,20,32,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中数据元素之间存在一对一的线性关系,数据类型,线性表,8,0,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中数据元素之间存在一对一的线性关系,数据类型,数据元素,8,32,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中数据元素之间存在一对一的线性关系,线性表,数据元素,0,32,CON,CON
二分查找是在有序数组中通过不断将区间分成两半，每次比较中间元素与目标值，根据比较结果缩小查找区间，直到找到目标值或确定目标值不存在，其,数组,查找,8,44,CON,CON
二分查找是在有序数组中通过不断将区间分成两半，每次比较中间元素与目标值，根据比较结果缩小查找区间，直到找到目标值或确定目标值不存在，其,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将区间分成两半，每次比较中间元素与目标值，根据比较结果缩小查找区间，直到找到目标值或确定目标值不存在，其,查找,二分查找,44,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,子树,47,23,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,子树,47,41,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,树,23,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,平衡二叉树,23,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,排序,23,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,子树,23,41,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,树,子树,12,41,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,子树,0,41,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,排序,子树,10,41,CON,CON
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系集合以及对数据对象的基本操作集合所构成且仅通过这些基本操作来访问和处理数据对象,集合,集合,42,28,CON,CON
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系集合以及对数据对象的基本操作集合所构成且仅通过这些基本操作来访问和处理数据对象,集合,抽象数据类型,42,0,CON,CON
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系集合以及对数据对象的基本操作集合所构成且仅通过这些基本操作来访问和处理数据对象,集合,访问,42,58,CON,CON
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系集合以及对数据对象的基本操作集合所构成且仅通过这些基本操作来访问和处理数据对象,集合,抽象数据类型,28,0,CON,CON
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系集合以及对数据对象的基本操作集合所构成且仅通过这些基本操作来访问和处理数据对象,集合,访问,28,58,CON,CON
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系集合以及对数据对象的基本操作集合所构成且仅通过这些基本操作来访问和处理数据对象,抽象数据类型,访问,0,58,CON,CON
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，访问元素的时间复杂度为O,数组,时间复杂度,36,58,CON,CON
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，访问元素的时间复杂度为O,数组,访问,36,53,CON,CON
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，访问元素的时间复杂度为O,时间复杂度,访问,58,53,CON,CON
映射是一种元素对应关系一个集合到另一个集合的对应,集合,集合,19,13,CON,CON
映射是一种元素对应关系一个集合到另一个集合的对应,集合,映射,19,0,CON,CON
映射是一种元素对应关系一个集合到另一个集合的对应,集合,映射,13,0,CON,CON
递归基础是递归定义中确定的最简单情况，它直接给出问题在最小规模或最基本形式下的解，不依赖于递归调用，是递归过程能够开始并逐步展开,递归,递归,51,5,CON,CON
递归基础是递归定义中确定的最简单情况，它直接给出问题在最小规模或最基本形式下的解，不依赖于递归调用，是递归过程能够开始并逐步展开,递归,递归,51,45,CON,CON
递归基础是递归定义中确定的最简单情况，它直接给出问题在最小规模或最基本形式下的解，不依赖于递归调用，是递归过程能够开始并逐步展开,递归,递归基础,51,0,CON,CON
递归基础是递归定义中确定的最简单情况，它直接给出问题在最小规模或最基本形式下的解，不依赖于递归调用，是递归过程能够开始并逐步展开,递归,递归,5,45,CON,CON
递归基础是递归定义中确定的最简单情况，它直接给出问题在最小规模或最基本形式下的解，不依赖于递归调用，是递归过程能够开始并逐步展开,递归,递归基础,5,0,CON,CON
递归基础是递归定义中确定的最简单情况，它直接给出问题在最小规模或最基本形式下的解，不依赖于递归调用，是递归过程能够开始并逐步展开,递归,递归基础,45,0,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中节点存放与该顶点相邻接的顶点,链表,链表,43,40,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中节点存放与该顶点相邻接的顶点,链表,邻接表,43,0,CON,CON
邻接表是一种用于表示图的数据结构，它由顶点表和边表构成，顶点表中每个顶点对应一个链表，链表中节点存放与该顶点相邻接的顶点,链表,邻接表,40,0,CON,CON
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，或者说数据元素之间的关系不是一对一的线性关系,非线性结构,数据元素,0,47,CON,CON
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，或者说数据元素之间的关系不是一对一的线性关系,非线性结构,数据元素,0,22,CON,CON
非线性结构的核心特征是在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，或者说数据元素之间的关系不是一对一的线性关系,数据元素,数据元素,47,22,CON,CON
回路是在电路或系统中能形成电流循环的闭合路径,路径,回路,20,0,CON,CON
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素,集合,集合,0,35,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而形成双向链接关系，使得可以双向遍历,指针,遍历,31,67,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而形成双向链接关系，使得可以双向遍历,指针,双向链表,31,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而形成双向链接关系，使得可以双向遍历,遍历,双向链表,67,0,CON,CON
在树形结构中位于顶层、没有父节点的起始节点是根节点,根节点,父节点,22,13,CON,CON
堆是一种特殊的数据结构，它满足父节点的值大于或小于其子节点的值（大顶堆或小顶堆），并且具有完全二叉树的形态,父节点,完全二叉树,15,45,CON,CON
队列具有先进先出的特点，即先进入队列的元素先离开队列,队列,队列,16,0,CON,CON
队列具有先进先出的特点，即先进入队列的元素先离开队列,队列,队列,16,24,CON,CON
队列具有先进先出的特点，即先进入队列的元素先离开队列,队列,队列,0,24,CON,CON
比较排序是一种排序算法，其通过比较元素之间的大小关系来确定元素在排序序列中的最终位置,排序,排序,32,7,CON,CON
比较排序是一种排序算法，其通过比较元素之间的大小关系来确定元素在排序序列中的最终位置,排序,比较排序,32,0,CON,CON
比较排序是一种排序算法，其通过比较元素之间的大小关系来确定元素在排序序列中的最终位置,排序,比较排序,7,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,完全二叉树,满二叉树,0,39,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而形成双向链接关系,指针,链表,43,7,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而形成双向链接关系,指针,双向链表,43,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而形成双向链接关系,指针,指针,43,30,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而形成双向链接关系,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而形成双向链接关系,链表,指针,7,30,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针从而形成双向链接关系,双向链表,指针,0,30,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,插入,排序,11,60,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,插入,排序,11,32,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,插入,插入,11,64,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,排序,7,60,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,排序,7,32,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入,7,64,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,排序,60,32,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,排序,60,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入,60,64,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入排序,60,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,排序,32,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入,32,64,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入排序,32,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入,15,64,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种简单直观的排序算法其特点是比较操作主要在相邻元素间进行每次将一个待排序数据插入,插入,插入排序,64,0,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,根节点,父节点,9,28,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,根节点,根节点,9,14,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,根节点,树的节点,9,0,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,根节点,子节点,9,42,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,父节点,根节点,28,14,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,父节点,树的节点,28,0,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,父节点,子节点,28,42,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,根节点,树的节点,14,0,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,根节点,子节点,14,42,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点之间通过父子关系形成层次,树的节点,子节点,0,42,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,指针,头节点,27,32,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,指针,链表,27,17,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,指针,链表,27,50,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,指针,链表,27,10,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,指针,遍历,27,65,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,指针,循环链表,27,0,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,头节点,链表,32,17,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,头节点,链表,32,50,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,头节点,链表,32,10,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,头节点,遍历,32,65,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,头节点,循环链表,32,0,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,链表,17,50,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,链表,17,10,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,遍历,17,65,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,循环链表,17,0,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,链表,50,10,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,遍历,50,65,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,循环链表,50,0,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,遍历,10,65,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其特点是链表中最后一个节点的指针域指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历,遍历,循环链表,65,0,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,树的节点,46,0,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,父节点,46,33,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,树,46,62,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,数据元素,46,19,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,指针,46,37,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,指针,46,49,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,根节点,46,42,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树的节点,父节点,0,33,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树的节点,树,0,62,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树的节点,数据元素,0,19,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树的节点,指针,0,37,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树的节点,指针,0,49,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树的节点,根节点,0,42,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,树,33,62,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,数据元素,33,19,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,指针,33,37,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,指针,33,49,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,父节点,根节点,33,42,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树,数据元素,62,19,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树,指针,62,37,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树,指针,62,49,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,树,根节点,62,42,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,数据元素,指针,19,37,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,数据元素,指针,19,49,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,数据元素,根节点,19,42,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,指针,指针,37,49,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,指针,根节点,37,42,CON,CON
树的节点是树结构中的基本组成单元，具有数据元素以及指向其孩子节点和父节点的指针（对于根节点无父节点指针），通过这些节点构成了树,指针,根节点,49,42,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则遍历树的节点，通过比较节点的值来确定目标元素是否存在于树中，若存在则返回该节点,查找,树的节点,2,25,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则遍历树的节点，通过比较节点的值来确定目标元素是否存在于树中，若存在则返回该节点,查找,遍历,2,23,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则遍历树的节点，通过比较节点的值来确定目标元素是否存在于树中，若存在则返回该节点,查找,根节点,2,11,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则遍历树的节点，通过比较节点的值来确定目标元素是否存在于树中，若存在则返回该节点,树的节点,遍历,25,23,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则遍历树的节点，通过比较节点的值来确定目标元素是否存在于树中，若存在则返回该节点,树的节点,根节点,25,11,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则遍历树的节点，通过比较节点的值来确定目标元素是否存在于树中，若存在则返回该节点,遍历,根节点,23,11,CON,CON
图是一种由顶点集合及顶点间的关系集合组成的数据结构,集合,集合,16,7,CON,CON
数组是由相同类型的数据元素按一定顺序排列组成的有限序列,数组,数据元素,0,9,CON,CON
迭代法是一种不断用变量的旧值递推新值，通过重复执行特定计算步骤，从初始值出发逐步逼近问题解的方法,迭代法,递推,0,14,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,访问,遍历,19,3,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,访问,访问,19,38,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,访问,二叉树,19,21,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,访问,二叉树,19,0,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,遍历,访问,3,38,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,遍历,二叉树,3,21,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,遍历,二叉树,3,0,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,访问,二叉树,38,21,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,访问,二叉树,38,0,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每一个节点且每个节点仅被访问一次,二叉树,二叉树,21,0,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,路径,根节点,20,6,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,33,26,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,33,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,33,19,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,26,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,26,19,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,19,CON,CON
二叉树每个节点最多有两个子节点,子节点,二叉树,12,0,CON,CON
有向图是一种图结构，其边具有方向性，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，通过有向边,图,无向图,6,40,CON,CON
有向图是一种图结构，其边具有方向性，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，通过有向边,图,有向图,6,34,CON,CON
有向图是一种图结构，其边具有方向性，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，通过有向边,图,有向图,6,0,CON,CON
有向图是一种图结构，其边具有方向性，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，通过有向边,无向图,有向图,40,34,CON,CON
有向图是一种图结构，其边具有方向性，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，通过有向边,无向图,有向图,40,0,CON,CON
有向图是一种图结构，其边具有方向性，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，通过有向边,有向图,有向图,34,0,CON,CON
回溯法基础的核心性质是在问题求解过程中通过深度优先搜索尝试所有可能解，当发现当前部分解无法得到完整有效解时及时回溯到上一步重新选择，,回溯法,深度优先搜索,0,21,CON,CON
数据的物理结构的核心特征是数据元素在计算机存储空间中的存储方式，包括数据元素自身值的存储表示以及数据元素之间关系的存储表示,数据元素,物理结构,34,3,CON,CON
数据的物理结构的核心特征是数据元素在计算机存储空间中的存储方式，包括数据元素自身值的存储表示以及数据元素之间关系的存储表示,数据元素,数据元素,34,13,CON,CON
数据的物理结构的核心特征是数据元素在计算机存储空间中的存储方式，包括数据元素自身值的存储表示以及数据元素之间关系的存储表示,数据元素,数据元素,34,48,CON,CON
数据的物理结构的核心特征是数据元素在计算机存储空间中的存储方式，包括数据元素自身值的存储表示以及数据元素之间关系的存储表示,物理结构,数据元素,3,13,CON,CON
数据的物理结构的核心特征是数据元素在计算机存储空间中的存储方式，包括数据元素自身值的存储表示以及数据元素之间关系的存储表示,物理结构,数据元素,3,48,CON,CON
数据的物理结构的核心特征是数据元素在计算机存储空间中的存储方式，包括数据元素自身值的存储表示以及数据元素之间关系的存储表示,数据元素,数据元素,13,48,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,线性表,25,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,线性表,41,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,链表,37,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,37,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,37,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,线性表,0,50,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,线性表,存储结构,50,20,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,排序,32,7,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,排序,32,44,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,比较排序,32,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,排序,7,44,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,比较排序,7,0,CON,CON
比较排序是一种排序算法，它通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,排序,比较排序,44,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,指针,指针,31,54,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,指针,链表,31,66,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,指针,双向链表,31,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,指针,遍历,31,64,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,指针,链表,54,66,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,指针,双向链表,54,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,指针,遍历,54,64,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,链表,双向链表,66,0,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,链表,遍历,66,64,CON,CON
双向链表是一种数据结构，其中每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，通过这些指针可以在两个方向上遍历链表,双向链表,遍历,0,64,CON,CON
存储结构的核心特征是数据元素之间的逻辑关系在计算机中的存储表示以及数据元素在存储空间中的相对位置关系，它决定了数据在计算机中的存储方式和访问方式，,访问,存储结构,68,0,CON,CON
存储结构的核心特征是数据元素之间的逻辑关系在计算机中的存储表示以及数据元素在存储空间中的相对位置关系，它决定了数据在计算机中的存储方式和访问方式，,访问,数据元素,68,33,CON,CON
存储结构的核心特征是数据元素之间的逻辑关系在计算机中的存储表示以及数据元素在存储空间中的相对位置关系，它决定了数据在计算机中的存储方式和访问方式，,访问,数据元素,68,10,CON,CON
存储结构的核心特征是数据元素之间的逻辑关系在计算机中的存储表示以及数据元素在存储空间中的相对位置关系，它决定了数据在计算机中的存储方式和访问方式，,存储结构,数据元素,0,33,CON,CON
存储结构的核心特征是数据元素之间的逻辑关系在计算机中的存储表示以及数据元素在存储空间中的相对位置关系，它决定了数据在计算机中的存储方式和访问方式，,存储结构,数据元素,0,10,CON,CON
存储结构的核心特征是数据元素之间的逻辑关系在计算机中的存储表示以及数据元素在存储空间中的相对位置关系，它决定了数据在计算机中的存储方式和访问方式，,数据元素,数据元素,33,10,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,指针,单链表,36,0,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,指针,数据元素,36,15,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,指针,指针,36,65,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,指针,指针,36,29,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,单链表,数据元素,0,15,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,单链表,指针,0,65,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,单链表,指针,0,29,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,数据元素,指针,15,65,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,数据元素,指针,15,29,CON,CON
单链表的核心特征是每个节点包含数据元素以及指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，并且最后一个节点的指针指向空,指针,指针,65,29,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，若按层次序编号后其所有结点均与深度为k的满二叉树中编号从1至n,二叉树,满二叉树,17,41,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，若按层次序编号后其所有结点均与深度为k的满二叉树中编号从1至n,二叉树,完全二叉树,17,0,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，若按层次序编号后其所有结点均与深度为k的满二叉树中编号从1至n,满二叉树,完全二叉树,41,0,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
按顺序逐个查找数据直至找到目标或遍历完所有数据,遍历,查找,16,5,CON,CON
邻接表是用链表存储图中顶点及与其相邻顶点关系的数据结构,链表,邻接表,5,0,CON,CON
回路是在电路或系统中能形成电流循环的闭合路径,路径,回路,20,0,CON,CON
父节点是树状结构中位于某一节点之上，直接与该节点相连，具有指向其所有子节点的连接关系，且处于比子节点更高层级位置，能够对,子节点,子节点,47,34,CON,CON
父节点是树状结构中位于某一节点之上，直接与该节点相连，具有指向其所有子节点的连接关系，且处于比子节点更高层级位置，能够对,子节点,父节点,47,0,CON,CON
父节点是树状结构中位于某一节点之上，直接与该节点相连，具有指向其所有子节点的连接关系，且处于比子节点更高层级位置，能够对,子节点,父节点,34,0,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数据序列调整为有序序列的排序方法,排序,交换排序,36,0,CON,CON
邻接矩阵的核心性质是其元素表示图中顶点之间是否存在边，若顶点\(i\)与顶点\(j\)之间有边相连，则邻接矩阵,邻接矩阵,邻接矩阵,51,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,根节点,二叉树,51,19,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,根节点,二叉搜索树,51,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,根节点,左子树,51,36,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,根节点,左子树,51,29,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,二叉树,二叉搜索树,19,0,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,二叉树,左子树,19,36,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,二叉树,左子树,19,29,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,二叉搜索树,左子树,0,36,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,二叉搜索树,左子树,0,29,CON,CON
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,左子树,左子树,36,29,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，具有空间复杂度低、,链表,空间复杂度,32,58,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，具有空间复杂度低、,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，具有空间复杂度低、,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，具有空间复杂度低、,空间复杂度,链表,58,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，具有空间复杂度低、,空间复杂度,邻接表,58,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，具有空间复杂度低、,链表,邻接表,35,0,CON,CON
栈具有后进先出的特点，其核心性质是元素按照后进先出的顺序进行入栈和出栈操作,栈,出栈,0,33,CON,CON
栈具有后进先出的特点，其核心性质是元素按照后进先出的顺序进行入栈和出栈操作,栈,入栈,0,30,CON,CON
栈具有后进先出的特点，其核心性质是元素按照后进先出的顺序进行入栈和出栈操作,出栈,入栈,33,30,CON,CON
深度优先搜索是一种在图或树等数据结构中，从起始节点开始，沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索,深度优先搜索,路径,0,32,CON,CON
叶子节点是树结构中没有子节点的末端节点,叶子节点,子节点,0,11,CON,CON
二叉搜索树是一种二叉树，其每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,二叉树,右子树,8,35,CON,CON
二叉搜索树是一种二叉树，其每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,二叉树,左子树,8,22,CON,CON
二叉搜索树是一种二叉树，其每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,二叉树,二叉搜索树,8,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,右子树,左子树,35,22,CON,CON
二叉搜索树是一种二叉树，其每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,右子树,二叉搜索树,35,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,左子树,二叉搜索树,22,0,CON,CON
线性结构数据元素之间存在一对一的线性关系,数据元素,线性结构,4,0,CON,CON
穷举法的核心特征是对问题所有可能的解逐一进行尝试，通过检查每一个可能情况来找到符合条件的解，在面对问题时会遍历所有可能的取值,穷举法,遍历,0,53,CON,CON
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，且每个节点有零个或多个子节点，除根节点外,子节点,根节点,47,52,CON,CON
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，且每个节点有零个或多个子节点，除根节点外,子节点,根节点,47,32,CON,CON
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，且每个节点有零个或多个子节点，除根节点外,根节点,根节点,52,32,CON,CON
递归基础的核心特征是存在一个或多个明确的终止条件，当满足这些条件时递归过程不再继续调用自身而是直接返回一个确定的结果,递归,递归基础,33,0,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
指针是存储变量内存地址并可通过它间接访问变量的变量,指针,访问,0,18,CON,CON
线性表的核心特征是具有有限个数据元素，这些元素之间存在一对一的线性关系，即除第一个元素外每个元素有且仅有一个直接前驱，除最后一个元素外,数据元素,线性表,14,0,CON,CON
完全二叉树是除最后一层外每层节点数满且最后一层靠左对齐的二叉树,二叉树,完全二叉树,28,0,CON,CON
交换排序是一种通过比较和交换元素位置来将无序数组转变为有序数组的排序算法,排序,数组,32,22,CON,CON
交换排序是一种通过比较和交换元素位置来将无序数组转变为有序数组的排序算法,排序,数组,32,29,CON,CON
交换排序是一种通过比较和交换元素位置来将无序数组转变为有序数组的排序算法,排序,交换排序,32,0,CON,CON
交换排序是一种通过比较和交换元素位置来将无序数组转变为有序数组的排序算法,数组,数组,22,29,CON,CON
交换排序是一种通过比较和交换元素位置来将无序数组转变为有序数组的排序算法,数组,交换排序,22,0,CON,CON
交换排序是一种通过比较和交换元素位置来将无序数组转变为有序数组的排序算法,数组,交换排序,29,0,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序算法,数组,排序,31,34,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序算法,数组,交换排序,31,0,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序算法,数组,数组,31,24,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序算法,排序,交换排序,34,0,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序算法,排序,数组,34,24,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序算法,交换排序,数组,0,24,CON,CON
深度优先搜索是一种沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径重复该过程以遍历或搜索图或树等数据结构的搜索,深度优先搜索,路径,0,42,CON,CON
深度优先搜索是一种沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径重复该过程以遍历或搜索图或树等数据结构的搜索,深度优先搜索,路径,0,13,CON,CON
深度优先搜索是一种沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径重复该过程以遍历或搜索图或树等数据结构的搜索,深度优先搜索,遍历,0,50,CON,CON
深度优先搜索是一种沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径重复该过程以遍历或搜索图或树等数据结构的搜索,路径,路径,42,13,CON,CON
深度优先搜索是一种沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径重复该过程以遍历或搜索图或树等数据结构的搜索,路径,遍历,42,50,CON,CON
深度优先搜索是一种沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径重复该过程以遍历或搜索图或树等数据结构的搜索,路径,遍历,13,50,CON,CON
父节点具有在树形结构中处于上一层级且与子节点存在特定关联关系的特点，它是子节点的直接前驱，对其下一层级的子节点起到组织,子节点,子节点,36,52,CON,CON
父节点具有在树形结构中处于上一层级且与子节点存在特定关联关系的特点，它是子节点的直接前驱，对其下一层级的子节点起到组织,子节点,子节点,36,19,CON,CON
父节点具有在树形结构中处于上一层级且与子节点存在特定关联关系的特点，它是子节点的直接前驱，对其下一层级的子节点起到组织,子节点,父节点,36,0,CON,CON
父节点具有在树形结构中处于上一层级且与子节点存在特定关联关系的特点，它是子节点的直接前驱，对其下一层级的子节点起到组织,子节点,子节点,52,19,CON,CON
父节点具有在树形结构中处于上一层级且与子节点存在特定关联关系的特点，它是子节点的直接前驱，对其下一层级的子节点起到组织,子节点,父节点,52,0,CON,CON
父节点具有在树形结构中处于上一层级且与子节点存在特定关联关系的特点，它是子节点的直接前驱，对其下一层级的子节点起到组织,子节点,父节点,19,0,CON,CON
邻接表的核心性质是通过为图中每个顶点建立一个单链表，链表中每个节点包含与该顶点相邻的顶点信息，从而简洁高效地表示图的结构及,单链表,链表,22,26,CON,CON
邻接表的核心性质是通过为图中每个顶点建立一个单链表，链表中每个节点包含与该顶点相邻的顶点信息，从而简洁高效地表示图的结构及,单链表,邻接表,22,0,CON,CON
邻接表的核心性质是通过为图中每个顶点建立一个单链表，链表中每个节点包含与该顶点相邻的顶点信息，从而简洁高效地表示图的结构及,链表,邻接表,26,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,遍历,14,48,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,链表,14,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,链表,14,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,访问,14,62,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,头节点,指针,23,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,头节点,遍历,23,48,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,头节点,链表,23,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,头节点,链表,23,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,头节点,访问,23,62,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,指针,遍历,18,48,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,指针,链表,18,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,指针,链表,18,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,指针,访问,18,62,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,遍历,链表,48,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,遍历,链表,48,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,遍历,链表,48,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,遍历,访问,48,62,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,遍历,循环链表,48,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,链表,31,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,链表,31,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,访问,31,62,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,循环链表,31,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,链表,50,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,访问,50,62,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,循环链表,50,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,访问,10,62,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,链表,循环链表,10,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环形结构，从而可以依次遍历链表中的所有节点且能循环访问,访问,循环链表,62,0,CON,CON
按顺序依次查找数据序列中目标元素的查找方法,查找,查找,5,17,CON,CON
线性结构的特点的核心性质是数据元素之间存在一对一的线性关系，有且仅有一个开始和一个终端元素，除开始和终端元素外，每个元素有且仅有一个,线性结构,数据元素,0,13,CON,CON
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点指向另一个顶点的单向关系,图,有向图,18,0,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,35,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,0,29,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,树的高度,0,10,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,35,29,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,树的高度,35,10,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,子树,树的高度,29,10,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,排序,数组,19,6,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,排序,递归,19,17,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,排序,数组,19,60,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,排序,数组,19,13,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,排序,归并排序,19,0,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,数组,递归,6,17,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,数组,数组,6,60,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,数组,数组,6,13,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,数组,归并排序,6,0,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,递归,数组,17,60,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,递归,数组,17,13,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,递归,归并排序,17,0,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,数组,数组,60,13,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,数组,归并排序,60,0,CON,CON
归并排序是将数组分成两个子数组分别递归排序后再合并，其核心性质是通过分治策略将问题分解为较小子问题，利用合并操作将有序子数组,数组,归并排序,13,0,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机中的存储方式包括数据元素的存储及其关系的表示，它具体体现为顺序存储结构中数据元素按逻辑顺序,数据元素,物理结构,60,3,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机中的存储方式包括数据元素的存储及其关系的表示，它具体体现为顺序存储结构中数据元素按逻辑顺序,数据元素,数据元素,60,32,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机中的存储方式包括数据元素的存储及其关系的表示，它具体体现为顺序存储结构中数据元素按逻辑顺序,物理结构,数据元素,3,32,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,数组,堆排序,19,0,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,数组,堆,19,32,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,数组,时间复杂度,19,58,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,数组,排序,19,53,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,数组,堆,19,47,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,数组,选择排序,19,6,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆排序,堆,0,32,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆排序,时间复杂度,0,58,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆排序,排序,0,53,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆排序,堆,0,47,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆排序,选择排序,0,6,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆,时间复杂度,32,58,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆,排序,32,53,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆,堆,32,47,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆,选择排序,32,6,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,时间复杂度,排序,58,53,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,时间复杂度,堆,58,47,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,时间复杂度,选择排序,58,6,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,排序,堆,53,47,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,排序,选择排序,53,6,CON,CON
堆排序是一种选择排序，它的核心特征是将数组构建成一个最大堆或最小堆，通过不断取出堆顶元素并调整堆结构来实现排序，具有时间复杂度,堆,选择排序,47,6,CON,CON
数据的物理结构的特点的核心性质是描述数据在计算机存储器中的存储方式包括顺序存储链式存储索引存储散列存储等以及数据元素之间的逻辑关系如何在物理存储,数据元素,物理结构,54,3,CON,CON
比较排序的核心性质是其排序过程仅通过元素间的比较来确定元素间的相对次序,比较排序,排序,0,11,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,右子树,左子树,43,22,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,右子树,二叉搜索树,43,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值都小于该节点的值，其右子树中的所有节点的值都大于该节点的值,左子树,二叉搜索树,22,0,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的,深度优先搜索,路径,0,24,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的,深度优先搜索,访问,0,64,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他未访问的,路径,访问,24,64,CON,CON
连通图是指图中任意两个顶点之间都存在路径相连的图,连通图,路径,0,18,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,访问,时间复杂度,40,56,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,访问,插入,40,63,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,访问,哈希表,40,0,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,访问,删除,40,66,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,访问,映射,40,26,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,访问,哈希函数,40,20,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,时间复杂度,插入,56,63,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,时间复杂度,哈希表,56,0,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,时间复杂度,删除,56,66,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,时间复杂度,映射,56,26,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,时间复杂度,哈希函数,56,20,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,插入,哈希表,63,0,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,插入,删除,63,66,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,插入,映射,63,26,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,插入,哈希函数,63,20,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,哈希表,删除,0,66,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,哈希表,映射,0,26,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,哈希表,哈希函数,0,20,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,删除,映射,66,26,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,删除,哈希函数,66,20,CON,CON
哈希表是一种数据结构，其核心特征包括通过哈希函数将键映射到特定位置以实现快速数据访问，能在平均情况下以接近常数的时间复杂度进行插入、删除,映射,哈希函数,26,20,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,线性表,队列,8,27,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,线性表,队列,8,34,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,27,34,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,27,0,CON,CON
队列是一种特殊的线性表，其核心性质是先进先出，即先进入队列的元素先出队列,队列,队列,34,0,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
数据逻辑结构指数据元素间抽象的逻辑关系,数据元素,逻辑结构,7,2,CON,CON
堆是一种完全二叉树，父节点键值大于或小于子节点,父节点,子节点,10,20,CON,CON
堆是一种完全二叉树，父节点键值大于或小于子节点,父节点,完全二叉树,10,4,CON,CON
堆是一种完全二叉树，父节点键值大于或小于子节点,子节点,完全二叉树,20,4,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，关系集合中的元素为边，边是顶点的无序对或有序对用于表示,集合,集合,5,39,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，关系集合中的元素为边，边是顶点的无序对或有序对用于表示,集合,集合,5,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，关系集合中的元素为边，边是顶点的无序对或有序对用于表示,集合,集合,5,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，关系集合中的元素为边，边是顶点的无序对或有序对用于表示,集合,集合,39,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，关系集合中的元素为边，边是顶点的无序对或有序对用于表示,集合,集合,39,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，关系集合中的元素为边，边是顶点的无序对或有序对用于表示,集合,集合,14,26,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构,集合,集合,14,5,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,查找,47,27,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,遍历,47,53,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,47,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,47,58,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,47,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,顺序查找,47,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,遍历,27,53,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,27,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,27,58,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,线性表,27,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,查找,顺序查找,27,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,线性表,53,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,线性表,53,58,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,线性表,53,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,遍历,顺序查找,53,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,线性表,18,58,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,线性表,18,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,顺序查找,18,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,线性表,58,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,顺序查找,58,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与要查找的关键字进行比较，若找到相等的元素则查找成功，若遍历完整个线性表都,线性表,顺序查找,6,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,尾节点,头节点,11,21,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,尾节点,遍历,11,50,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,尾节点,链表,11,54,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,尾节点,指针,11,15,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,尾节点,链表,11,37,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,尾节点,循环链表,11,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,头节点,遍历,21,50,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,头节点,链表,21,54,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,头节点,指针,21,15,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,头节点,链表,21,37,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,头节点,循环链表,21,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,遍历,链表,50,54,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,遍历,指针,50,15,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,遍历,链表,50,37,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,遍历,循环链表,50,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,链表,指针,54,15,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,链表,链表,54,37,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,54,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,指针,链表,15,37,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,指针,循环链表,15,0,CON,CON
循环链表的核心性质是表尾节点的指针域指向表头节点从而形成一个环形结构使得从链表中的任意节点出发都可以遍历整个链表,链表,循环链表,37,0,CON,CON
比较排序是基于元素之间的比较来确定元素在有序序列中的相对位置从而实现排序的一种排序算法,排序,排序,39,34,CON,CON
比较排序是基于元素之间的比较来确定元素在有序序列中的相对位置从而实现排序的一种排序算法,排序,比较排序,39,0,CON,CON
比较排序是基于元素之间的比较来确定元素在有序序列中的相对位置从而实现排序的一种排序算法,排序,比较排序,34,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,插入,查找,47,44,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,插入,映射,47,11,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,插入,删除,47,50,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,插入,哈希表,47,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,插入,哈希函数,47,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,插入,时间复杂度,47,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,查找,映射,44,11,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,查找,删除,44,50,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,查找,哈希表,44,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,查找,哈希函数,44,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,查找,时间复杂度,44,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,映射,删除,11,50,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,映射,哈希表,11,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,映射,哈希函数,11,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,映射,时间复杂度,11,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,删除,哈希表,50,0,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,删除,哈希函数,50,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,删除,时间复杂度,50,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,哈希表,哈希函数,0,5,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,哈希表,时间复杂度,0,31,CON,CON
哈希表通过哈希函数将键映射到特定位置来存储和检索数据，具有平均时间复杂度为O(1)的高效查找、插入和删除操作，能快速定位数据，但,哈希函数,时间复杂度,5,31,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数,树的深度,路径,0,24,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数,树的深度,根节点,0,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数,路径,根节点,24,6,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数,路径,叶子节点,24,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数,根节点,叶子节点,6,12,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点间的关系集合描述了顶点之间的连接情况,集合,集合,32,14,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点间的关系集合描述了顶点之间的连接情况,集合,集合,32,5,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，其中顶点间的关系集合描述了顶点之间的连接情况,集合,集合,14,5,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,后继节点,链表,49,7,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,后继节点,前驱节点,49,39,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,后继节点,指针,49,59,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,后继节点,指针,49,32,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,后继节点,双向链表,49,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,链表,前驱节点,7,39,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,链表,指针,7,59,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,链表,指针,7,32,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,前驱节点,指针,39,59,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,前驱节点,指针,39,32,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,前驱节点,双向链表,39,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,指针,指针,59,32,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,指针,双向链表,59,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还包含两个指针，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个,指针,双向链表,32,0,CON,CON
回溯法基础的核心性质是在问题的解空间树中，按照深度优先策略从根节点出发搜索解空间，当搜索到某一节点时，先判断该节点是否,回溯法,根节点,0,30,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式,逻辑结构,存储结构,3,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式,逻辑结构,数据元素,3,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式,数据元素,存储结构,9,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式,数据元素,数据元素,9,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式,存储结构,数据元素,28,36,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置没有分支延伸，在数据处理和遍历等操作中作为最终的访问对象，代表了,叶子节点,访问,0,55,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置没有分支延伸，在数据处理和遍历等操作中作为最终的访问对象，代表了,叶子节点,遍历,0,44,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置没有分支延伸，在数据处理和遍历等操作中作为最终的访问对象，代表了,叶子节点,子节点,0,11,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置没有分支延伸，在数据处理和遍历等操作中作为最终的访问对象，代表了,访问,遍历,55,44,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置没有分支延伸，在数据处理和遍历等操作中作为最终的访问对象，代表了,访问,子节点,55,11,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的末端位置没有分支延伸，在数据处理和遍历等操作中作为最终的访问对象，代表了,遍历,子节点,44,11,CON,CON
回路是在图中从一个顶点出发，沿着边连续移动，最终回到起始顶点且经过的边不重复的路径,路径,回路,39,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的边数，体现了树在垂直方向上的层次数量，反映了树的结构复杂程度，不同,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的边数，体现了树在垂直方向上的层次数量，反映了树的结构复杂程度，不同,根节点,路径,6,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的边数，体现了树在垂直方向上的层次数量，反映了树的结构复杂程度，不同,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的边数，体现了树在垂直方向上的层次数量，反映了树的结构复杂程度，不同,树的深度,路径,0,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的边数，体现了树在垂直方向上的层次数量，反映了树的结构复杂程度，不同,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的边数，体现了树在垂直方向上的层次数量，反映了树的结构复杂程度，不同,路径,叶子节点,21,12,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆排序,排序,0,58,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆排序,排序,0,24,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆排序,堆,0,14,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆排序,堆,0,37,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆排序,堆,0,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆排序,数组,0,26,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,排序,58,24,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,堆,58,14,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,堆,58,37,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,堆,58,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,数组,58,26,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,堆,24,14,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,堆,24,37,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,堆,24,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,排序,数组,24,26,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆,堆,14,37,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆,堆,14,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆,数组,14,26,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆,堆,37,54,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆,数组,37,26,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序数组构建成最大堆或最小堆，然后通过不断取出堆顶元素并调整堆来实现排序，,堆,数组,54,26,CON,CON
满二叉树是除叶节点外每个节点都有两个子节点的二叉树,子节点,二叉树,18,22,CON,CON
满二叉树是除叶节点外每个节点都有两个子节点的二叉树,子节点,满二叉树,18,0,CON,CON
满二叉树是除叶节点外每个节点都有两个子节点的二叉树,二叉树,满二叉树,22,0,CON,CON
递归基础具有明确的终止条件，是递归过程能够结束的关键，其核心性质是为递归提供了一个不需要再次递归调用的初始状态或边界情况,递归,递归,34,15,CON,CON
递归基础具有明确的终止条件，是递归过程能够结束的关键，其核心性质是为递归提供了一个不需要再次递归调用的初始状态或边界情况,递归,递归基础,34,0,CON,CON
递归基础具有明确的终止条件，是递归过程能够结束的关键，其核心性质是为递归提供了一个不需要再次递归调用的初始状态或边界情况,递归,递归,34,46,CON,CON
递归基础具有明确的终止条件，是递归过程能够结束的关键，其核心性质是为递归提供了一个不需要再次递归调用的初始状态或边界情况,递归,递归基础,15,0,CON,CON
递归基础具有明确的终止条件，是递归过程能够结束的关键，其核心性质是为递归提供了一个不需要再次递归调用的初始状态或边界情况,递归,递归,15,46,CON,CON
递归基础具有明确的终止条件，是递归过程能够结束的关键，其核心性质是为递归提供了一个不需要再次递归调用的初始状态或边界情况,递归基础,递归,0,46,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归,43,61,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归,43,5,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归,43,21,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归基础,43,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归,61,5,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归,61,21,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归基础,61,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归,5,21,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归基础,5,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，即不需要通过递归调用就能直接得出结果的情况，这是递归定义得以成立,递归,递归基础,21,0,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的一个元素与之对应,集合,映射,28,0,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的一个元素与之对应,集合,集合,28,15,CON,CON
映射是一种特殊的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的一个元素与之对应,映射,集合,0,15,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,38,60,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,线性表,38,8,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,38,52,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,38,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,38,46,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,线性表,60,8,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,60,52,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,60,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,60,46,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,线性表,队列,8,52,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,线性表,队列,8,46,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,52,0,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,52,46,CON,CON
队列是一种特殊的线性表，其核心特征是元素按照先进先出的原则进行排列，即先进入队列的元素先离开队列，后进入队列的元素后离开队列,队列,队列,0,46,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是以深度为导向进行搜索，从起始节点开始，沿着一条路径尽可能深地探索，直到,路径,深度优先搜索,54,0,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是以深度为导向进行搜索，从起始节点开始，沿着一条路径尽可能深地探索，直到,路径,遍历,54,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是以深度为导向进行搜索，从起始节点开始，沿着一条路径尽可能深地探索，直到,深度优先搜索,遍历,0,11,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,线性表,指针,11,48,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,线性表,数据元素,11,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,线性表,指针,11,55,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,指针,数据元素,48,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,指针,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,指针,指针,48,55,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,数据元素,单链表,33,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,数据元素,指针,33,55,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来,单链表,指针,0,55,CON,CON
树的查找特点是基于树的结构特性通过特定的遍历或比较方式在树中定位特定元素以获取所需信息,查找,遍历,2,20,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,线性表,插入,8,26,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,线性表,删除,8,38,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,插入,队列,26,0,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,插入,删除,26,38,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,队列,删除,0,38,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,数组,20,27,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,排序,20,30,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,交换排序,20,0,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,排序,27,30,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,数组,交换排序,27,0,CON,CON
交换排序是通过比较和交换元素位置，将无序数组转换为有序数组的排序方法,排序,交换排序,30,0,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,路径,查找,38,36,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,路径,查找,38,58,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,路径,查找,38,2,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,路径,树,38,7,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,路径,树,38,60,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,路径,树,38,53,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,查找,36,58,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,查找,36,2,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,36,7,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,36,60,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,36,53,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,查找,58,2,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,58,7,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,58,60,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,58,53,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,2,7,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,2,60,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,查找,树,2,53,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,树,树,7,60,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,树,树,7,53,CON,CON
树的查找是基于树这种数据结构，通过特定规则在其中寻找特定元素，其特点包括查找路径沿树的分支进行且在不同类型树（如二叉查找树等,树,树,60,53,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,集合,映射,10,0,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,集合,集合,10,37,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,集合,集合,10,21,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,集合,集合,10,55,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,映射,集合,0,37,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,映射,集合,0,21,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,映射,集合,0,55,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,集合,集合,37,21,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,集合,集合,37,55,CON,CON
映射的核心特征包括在集合A中的每一个元素在集合B中都有唯一的元素与之对应，集合A中的元素不能有剩余未被对应，且集合B中的元素,集合,集合,21,55,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,40,22,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,40,46,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,40,0,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,40,18,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,右子树,平衡二叉树,22,46,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,右子树,平衡二叉树,22,0,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,右子树,左子树,22,18,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,46,0,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,左子树,46,18,CON,CON
平衡二叉树的核心特征是树上任一结点的左子树和右子树的高度差不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,左子树,0,18,CON,CON
有向图是一种由顶点集合及顶点间的有向边组成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点,集合,有向图,9,0,CON,CON
交换排序是一种排序算法，其核心特征是通过比较元素并交换位置，逐步将无序序列转换为有序序列，在排序过程中不断地对相邻或不相邻的元素,排序,交换排序,7,0,CON,CON
交换排序是一种排序算法，其核心特征是通过比较元素并交换位置，逐步将无序序列转换为有序序列，在排序过程中不断地对相邻或不相邻的元素,排序,排序,7,46,CON,CON
交换排序是一种排序算法，其核心特征是通过比较元素并交换位置，逐步将无序序列转换为有序序列，在排序过程中不断地对相邻或不相邻的元素,交换排序,排序,0,46,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上边的数目,路径,根节点,20,6,CON,CON
邻接表的核心特征是对于图中的每个顶点，用一个单链表来存储其所有邻接顶点，通过这种方式可以直观地反映出图中顶点之间的邻接,单链表,邻接表,22,0,CON,CON
完全二叉树的核心特征是其叶子节点只能出现在最下层和次下层，并且最下层的叶子节点集中在树的左部，若设二叉树的深度为h,完全二叉树,叶子节点,0,35,CON,CON
完全二叉树的核心特征是其叶子节点只能出现在最下层和次下层，并且最下层的叶子节点集中在树的左部，若设二叉树的深度为h,完全二叉树,叶子节点,0,12,CON,CON
完全二叉树的核心特征是其叶子节点只能出现在最下层和次下层，并且最下层的叶子节点集中在树的左部，若设二叉树的深度为h,完全二叉树,二叉树,0,49,CON,CON
完全二叉树的核心特征是其叶子节点只能出现在最下层和次下层，并且最下层的叶子节点集中在树的左部，若设二叉树的深度为h,叶子节点,叶子节点,35,12,CON,CON
完全二叉树的核心特征是其叶子节点只能出现在最下层和次下层，并且最下层的叶子节点集中在树的左部，若设二叉树的深度为h,叶子节点,二叉树,35,49,CON,CON
完全二叉树的核心特征是其叶子节点只能出现在最下层和次下层，并且最下层的叶子节点集中在树的左部，若设二叉树的深度为h,叶子节点,二叉树,12,49,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆排序,排序,0,27,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆排序,堆,0,55,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆排序,堆,0,40,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆排序,排序,0,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,排序,堆,27,55,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,排序,堆,27,40,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,排序,排序,27,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,排序,堆,27,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆,堆,55,40,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆,排序,55,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆,堆,55,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆,排序,40,17,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,堆,堆,40,8,CON,CON
堆排序是一种基于堆这种数据结构进行排序的算法，它先将待排序序列构建成最大堆或最小堆，然后依次取出堆顶元素并调整堆，直到整个,排序,堆,17,8,CON,CON
数据的物理结构是数据在计算机中的存储表示形式，其核心性质包括数据元素的存储方式以及数据元素之间关系的表示方法,物理结构,数据元素,3,30,CON,CON
数据的物理结构是数据在计算机中的存储表示形式，其核心性质包括数据元素的存储方式以及数据元素之间关系的表示方法,物理结构,数据元素,3,41,CON,CON
数据的物理结构是数据在计算机中的存储表示形式，其核心性质包括数据元素的存储方式以及数据元素之间关系的表示方法,数据元素,数据元素,30,41,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,映射,6,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,集合,6,18,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,映射,集合,0,18,CON,CON
树的查找的特点的核心特征是基于树的层次结构从根节点开始按照特定规则逐层或分支遍历节点以确定目标元素是否存在于树中,查找,根节点,2,22,CON,CON
树的查找的特点的核心特征是基于树的层次结构从根节点开始按照特定规则逐层或分支遍历节点以确定目标元素是否存在于树中,查找,遍历,2,38,CON,CON
树的查找的特点的核心特征是基于树的层次结构从根节点开始按照特定规则逐层或分支遍历节点以确定目标元素是否存在于树中,根节点,遍历,22,38,CON,CON
深度优先搜索是一种在搜索过程中优先沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到上一层继续探索其他路径的搜索策略,深度优先搜索,路径,0,56,CON,CON
深度优先搜索是一种在搜索过程中优先沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到上一层继续探索其他路径的搜索策略,深度优先搜索,路径,0,21,CON,CON
深度优先搜索是一种在搜索过程中优先沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到上一层继续探索其他路径的搜索策略,路径,路径,56,21,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,24,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,48,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,排序,28,34,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,排序,28,51,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,28,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,28,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,24,48,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,排序,24,34,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,排序,24,51,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,24,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,24,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,24,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,24,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,排序,48,34,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,排序,48,51,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,48,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,48,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,48,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,48,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,排序,34,51,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,34,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,34,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,34,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,34,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,51,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,51,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,数组,51,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,51,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,8,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,8,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,8,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,数组,15,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,15,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,39,0,CON,CON
连通图是一个无向图，若其中任意两个顶点之间都存在路径相连则为连通图,连通图,连通图,0,30,CON,CON
连通图是一个无向图，若其中任意两个顶点之间都存在路径相连则为连通图,连通图,路径,0,24,CON,CON
连通图是一个无向图，若其中任意两个顶点之间都存在路径相连则为连通图,连通图,无向图,0,6,CON,CON
连通图是一个无向图，若其中任意两个顶点之间都存在路径相连则为连通图,连通图,路径,30,24,CON,CON
连通图是一个无向图，若其中任意两个顶点之间都存在路径相连则为连通图,连通图,无向图,30,6,CON,CON
连通图是一个无向图，若其中任意两个顶点之间都存在路径相连则为连通图,路径,无向图,24,6,CON,CON
树的查找是在给定的树结构中，从根节点开始，按照特定规则遍历节点，以确定是否存在特定值的节点或获取满足特定条件的节点的操作过程,根节点,查找,15,2,CON,CON
树的查找是在给定的树结构中，从根节点开始，按照特定规则遍历节点，以确定是否存在特定值的节点或获取满足特定条件的节点的操作过程,根节点,遍历,15,27,CON,CON
树的查找是在给定的树结构中，从根节点开始，按照特定规则遍历节点，以确定是否存在特定值的节点或获取满足特定条件的节点的操作过程,查找,遍历,2,27,CON,CON
二叉搜索树是一棵空树或者是具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,20,CON,CON
二叉搜索树是一棵空树或者是具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,左子树,0,34,CON,CON
二叉搜索树是一棵空树或者是具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,左子树,0,27,CON,CON
二叉搜索树是一棵空树或者是具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,20,34,CON,CON
二叉搜索树是一棵空树或者是具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,20,27,CON,CON
二叉搜索树是一棵空树或者是具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,34,27,CON,CON
数组是相同类型数据元素的有序集合,数组,集合,0,14,CON,CON
数组是相同类型数据元素的有序集合,数组,数据元素,0,7,CON,CON
数组是相同类型数据元素的有序集合,集合,数据元素,14,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,27,50,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,27,57,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,插入,排序,11,50,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,插入,排序,11,57,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,7,50,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,7,57,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,50,57,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,50,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,插入排序,50,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,排序,57,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,插入排序,57,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法，其核心特征是通过构建有序序列，对于未排序数据，在已排序序列中从,排序,插入排序,15,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,路径,6,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,路径,0,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,路径,叶子节点,22,12,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问所指向的变量，从而实现对内存中数据的灵活操作和管理,指针,访问,0,30,CON,CON
堆排序是利用堆结构进行排序的算法，先建堆再调整,堆排序,堆,0,6,CON,CON
堆排序是利用堆结构进行排序的算法，先建堆再调整,堆排序,排序,0,11,CON,CON
堆排序是利用堆结构进行排序的算法，先建堆再调整,堆,排序,6,11,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构，其中边是没有方向的，即若顶点v和顶点w之间存在边，则从v到,集合,集合,19,9,CON,CON
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构，其中边是没有方向的，即若顶点v和顶点w之间存在边，则从v到,集合,无向图,19,0,CON,CON
无向图是一种由顶点集合以及顶点之间的边集合组成的图结构，其中边是没有方向的，即若顶点v和顶点w之间存在边，则从v到,集合,无向图,9,0,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,查找,线性表,40,22,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,查找,遍历,40,61,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,查找,线性表,40,5,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,查找,顺序查找,40,0,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,线性表,遍历,22,61,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,线性表,线性表,22,5,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,线性表,顺序查找,22,0,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,遍历,线性表,61,5,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,遍历,顺序查找,61,0,CON,CON
顺序查找对线性表中元素的存储方式没有要求，从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到相等的元素或遍历完,线性表,顺序查找,5,0,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻的特点，其内存空间是连续分配的，支持随机访问，可通过下标直接定位到元素，插入和,访问,插入,44,60,CON,CON
树的节点是树结构中的基本单元，包含数据以及指向子节点的指针或引用从而构成树形层次关系,树的节点,指针,0,27,CON,CON
树的节点是树结构中的基本单元，包含数据以及指向子节点的指针或引用从而构成树形层次关系,树的节点,子节点,0,23,CON,CON
树的节点是树结构中的基本单元，包含数据以及指向子节点的指针或引用从而构成树形层次关系,指针,子节点,27,23,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法其特点在于利用前一步或前几步的计算结果,迭代法,迭代,0,24,CON,CON
快速排序的核心特征是选择一个基准元素，将数组分为两部分，小于基准的元素放在左边，大于基准的元素放在右边，然后对左右两部分分别递归进行同样,数组,递归,20,62,CON,CON
快速排序的核心特征是选择一个基准元素，将数组分为两部分，小于基准的元素放在左边，大于基准的元素放在右边，然后对左右两部分分别递归进行同样,数组,快速排序,20,0,CON,CON
快速排序的核心特征是选择一个基准元素，将数组分为两部分，小于基准的元素放在左边，大于基准的元素放在右边，然后对左右两部分分别递归进行同样,递归,快速排序,62,0,CON,CON
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素,集合,集合,0,35,CON,CON
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法,排序,数据元素,34,6,CON,CON
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法,排序,简单排序,34,0,CON,CON
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法,数据元素,简单排序,6,0,CON,CON
树的查找的特点的核心性质是若树中存在关键字值等于给定值的结点，则一定可以通过从根结点开始的一条路径找到该结点，若不存在则查找失败,查找,路径,2,47,CON,CON
树的查找的特点的核心性质是若树中存在关键字值等于给定值的结点，则一定可以通过从根结点开始的一条路径找到该结点，若不存在则查找失败,查找,查找,2,60,CON,CON
树的查找的特点的核心性质是若树中存在关键字值等于给定值的结点，则一定可以通过从根结点开始的一条路径找到该结点，若不存在则查找失败,路径,查找,47,60,CON,CON
有向图是一种由顶点集合及顶点间的有向边构成的图，其中每条有向边都有明确的方向，从一个顶点指向另一个顶点,集合,有向图,9,0,CON,CON
比较排序是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置从而实现排序的一种排序算法,排序,排序,43,38,CON,CON
比较排序是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置从而实现排序的一种排序算法,排序,比较排序,43,0,CON,CON
比较排序是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置从而实现排序的一种排序算法,排序,排序,43,24,CON,CON
比较排序是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置从而实现排序的一种排序算法,排序,比较排序,38,0,CON,CON
比较排序是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置从而实现排序的一种排序算法,排序,排序,38,24,CON,CON
比较排序是通过比较元素之间的大小关系来确定元素在排序结果中的相对位置从而实现排序的一种排序算法,比较排序,排序,0,24,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,36,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,40,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,19,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,19,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,19,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,36,40,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,36,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,36,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,36,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,36,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,40,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,40,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,40,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,40,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,58,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,58,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,58,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,线性表,表头,11,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,表头,单链表,17,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,遍历,循环链表,36,0,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,遍历,链表,36,38,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,遍历,尾节点,36,11,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,遍历,指针,36,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,遍历,头节点,36,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,遍历,访问,36,55,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,遍历,链表,36,26,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,循环链表,链表,0,38,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,循环链表,尾节点,0,11,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,循环链表,指针,0,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,循环链表,头节点,0,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,循环链表,访问,0,55,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,循环链表,链表,0,26,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,链表,尾节点,38,11,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,链表,指针,38,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,链表,头节点,38,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,链表,访问,38,55,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,链表,链表,38,26,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,尾节点,指针,11,15,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,尾节点,头节点,11,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,尾节点,访问,11,55,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,尾节点,链表,11,26,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,指针,头节点,15,20,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,指针,访问,15,55,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,指针,链表,15,26,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,头节点,访问,20,55,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,头节点,链表,20,26,CON,CON
循环链表的核心特征是其尾节点的指针域指向头节点，使得链表形成一个环，从而遍历链表时可以从任意节点出发沿着环依次访问各个节点直至回到起始,访问,链表,55,26,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,数据元素,线性结构,18,57,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,数据元素,存储结构,18,37,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,数据元素,数据元素,18,44,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,数据元素,逻辑结构,18,3,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,数据元素,数据元素,18,63,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,线性结构,存储结构,57,37,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,线性结构,数据元素,57,44,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,线性结构,逻辑结构,57,3,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,线性结构,数据元素,57,63,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,存储结构,数据元素,37,44,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,存储结构,逻辑结构,37,3,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,存储结构,数据元素,37,63,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,数据元素,逻辑结构,44,3,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,数据元素,数据元素,44,63,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式，如线性结构体现数据元素,逻辑结构,数据元素,3,63,CON,CON
邻接矩阵是表示图的一种方式，其特点的核心特征包括：是一个二维数组，行数和列数等于图中顶点的个数,邻接矩阵,数组,0,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,叶子节点,22,38,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,满二叉树,22,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,二叉树,22,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,子节点,22,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,满二叉树,38,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,二叉树,38,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,子节点,38,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,二叉树,0,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,子节点,0,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,二叉树,子节点,7,30,CON,CON
递归基础是递归算法中当问题规模达到最小时可直接得出结果而无需再次递归调用的特定情况,递归,递归,32,5,CON,CON
递归基础是递归算法中当问题规模达到最小时可直接得出结果而无需再次递归调用的特定情况,递归,递归基础,32,0,CON,CON
递归基础是递归算法中当问题规模达到最小时可直接得出结果而无需再次递归调用的特定情况,递归,递归基础,5,0,CON,CON
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值，即第i层有2^(i,满二叉树,二叉树,0,22,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
树的查找的核心特征是从树的根节点开始，按照某种特定规则（如二叉排序树的比较大小规则等）沿着树的分支逐步向下查找目标元素，通过,查找,排序,2,31,CON,CON
树的查找的核心特征是从树的根节点开始，按照某种特定规则（如二叉排序树的比较大小规则等）沿着树的分支逐步向下查找目标元素，通过,查找,根节点,2,13,CON,CON
树的查找的核心特征是从树的根节点开始，按照某种特定规则（如二叉排序树的比较大小规则等）沿着树的分支逐步向下查找目标元素，通过,查找,查找,2,53,CON,CON
树的查找的核心特征是从树的根节点开始，按照某种特定规则（如二叉排序树的比较大小规则等）沿着树的分支逐步向下查找目标元素，通过,排序,根节点,31,13,CON,CON
树的查找的核心特征是从树的根节点开始，按照某种特定规则（如二叉排序树的比较大小规则等）沿着树的分支逐步向下查找目标元素，通过,排序,查找,31,53,CON,CON
树的查找的核心特征是从树的根节点开始，按照某种特定规则（如二叉排序树的比较大小规则等）沿着树的分支逐步向下查找目标元素，通过,根节点,查找,13,53,CON,CON
指针的核心性质是其存储的是变量的内存地址，通过该地址能够直接访问和操作所指向变量的值,指针,访问,0,30,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据,指针,访问,0,30,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，它具有依赖于父节点的层级关系并可能有自己的子节点从而形成树形结构,父节点,子节点,33,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，它具有依赖于父节点的层级关系并可能有自己的子节点从而形成树形结构,父节点,子节点,33,48,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，它具有依赖于父节点的层级关系并可能有自己的子节点从而形成树形结构,父节点,父节点,33,9,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，它具有依赖于父节点的层级关系并可能有自己的子节点从而形成树形结构,子节点,子节点,0,48,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，它具有依赖于父节点的层级关系并可能有自己的子节点从而形成树形结构,子节点,父节点,0,9,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，它具有依赖于父节点的层级关系并可能有自己的子节点从而形成树形结构,子节点,父节点,48,9,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括数据元素的表示和关系的表示,存储结构,数据元素,0,28,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括数据元素的表示和关系的表示,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，包括数据元素的表示和关系的表示,数据元素,数据元素,28,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的节点数,树的深度,叶子节点,0,23,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的节点数,树的深度,根节点,0,6,CON,CON
树的深度是从根节点开始自顶向下逐层累加，到最远叶子节点所经过的节点数,叶子节点,根节点,23,6,CON,CON
根节点是树结构中处于顶层无父节点的起始节点,父节点,根节点,13,0,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆排序,堆,0,56,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆排序,堆,0,30,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆,堆,56,30,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆,排序,56,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆,堆,56,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆,排序,30,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,堆,堆,30,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后调整剩余元素形成新堆，重复此,排序,堆,14,8,CON,CON
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树,子节点,完全二叉树,12,22,CON,CON
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树,子节点,父节点,12,6,CON,CON
堆是一种满足父节点键值与子节点键值特定关系的完全二叉树,完全二叉树,父节点,22,6,CON,CON
映射的核心特征是对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,映射,23,0,CON,CON
映射的核心特征是对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,集合,集合,23,10,CON,CON
映射的核心特征是对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,映射,集合,0,10,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,头节点,47,52,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,线性表,47,11,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,链表,47,63,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,单链表,47,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,访问,47,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,数据元素,47,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,指针,指针,47,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,头节点,线性表,52,11,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,头节点,链表,52,63,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,头节点,单链表,52,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,头节点,访问,52,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,头节点,数据元素,52,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,头节点,指针,52,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,链表,11,63,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,访问,11,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,数据元素,11,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,线性表,指针,11,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,链表,单链表,63,0,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,链表,访问,63,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,链表,数据元素,63,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,链表,指针,63,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,单链表,访问,0,59,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,单链表,数据元素,0,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,单链表,指针,0,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,访问,数据元素,59,32,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,访问,指针,59,56,CON,CON
单链表是一种链式存储的线性表，它由多个节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过头节点的指针来访问整个链表,数据元素,指针,32,56,CON,CON
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向连接,图,有向图,18,0,CON,CON
稳定性是指在数据结构中，对于相等的元素，在排序前后它们的相对顺序保持不变的特性,排序,稳定性,21,0,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的元素在物理位置上也相邻的数据结构,线性表,数据元素,20,25,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
简单排序是对数据序列通过比较和交换等操作逐步将元素按特定顺序排列的排序方法,排序,简单排序,33,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,映射,6,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,集合,6,18,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,映射,集合,0,18,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示方式，它具有能体现数据元素间逻辑关系、规定数据的存储方式及相关操作等特点,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示方式，它具有能体现数据元素间逻辑关系、规定数据的存储方式及相关操作等特点,存储结构,数据元素,0,34,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示方式，它具有能体现数据元素间逻辑关系、规定数据的存储方式及相关操作等特点,数据元素,数据元素,6,34,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较相邻元素，如果顺序错误就把它们交换过来，重复此步骤,排序,插入排序,25,0,CON,CON
图的边是连接图中两个顶点的线或弧其表示顶点之间的某种关系并且在有向图中边具有方向无向图中边无方向且边可能具有,有向图,无向图,31,40,CON,CON
图的边是连接图中两个顶点的线或弧其表示顶点之间的某种关系并且在有向图中边具有方向无向图中边无方向且边可能具有,有向图,图的边,31,0,CON,CON
图的边是连接图中两个顶点的线或弧其表示顶点之间的某种关系并且在有向图中边具有方向无向图中边无方向且边可能具有,无向图,图的边,40,0,CON,CON
数据类型的完整定义是对数据的取值范围、数据元素之间的逻辑关系以及在这些数据上所允许进行的操作的明确规定,数据类型,数据元素,0,19,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点为数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素,线性结构,数据元素,0,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点为数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素,线性结构,数据元素,0,32,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其特点为数据元素按顺序排列，有唯一的开始元素和结束元素，除开始和结束元素外每个元素,数据元素,数据元素,7,32,CON,CON
数据逻辑结构核心概念是数据元素间逻辑关系,数据元素,逻辑结构,11,2,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,满二叉树,二叉树,0,24,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
有向图是由顶点集和有向边集组成的一种图结构其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向连接,图,有向图,18,0,CON,CON
线性表的核心特征是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个元素外，集合中的每个数据,数据元素,数据元素,25,47,CON,CON
线性表的核心特征是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个元素外，集合中的每个数据,数据元素,线性表,25,0,CON,CON
线性表的核心特征是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个元素外，集合中的每个数据,数据元素,集合,25,60,CON,CON
线性表的核心特征是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个元素外，集合中的每个数据,数据元素,线性表,47,0,CON,CON
线性表的核心特征是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个元素外，集合中的每个数据,数据元素,集合,47,60,CON,CON
线性表的核心特征是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个元素外，集合中的每个数据,线性表,集合,0,60,CON,CON
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值称为树的度,树的度,子树,32,7,CON,CON
抽象数据类型具有数据对象、数据关系和基本操作这三个核心性质，数据对象是所操作数据的集合，数据关系定义了数据对象间的关系，基本操作是对,集合,抽象数据类型,41,0,CON,CON
无向图是一种图结构，其中边没有方向，任意两个顶点之间的边是双向的，即若存在连接顶点u和顶点v的边，则从u到v和,图,无向图,6,0,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,树的节点,16,0,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,父节点,16,8,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,子节点,16,29,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,父节点,16,41,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,子节点,16,45,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,根节点,16,12,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,树的节点,父节点,0,8,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,树的节点,子节点,0,29,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,树的节点,父节点,0,41,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,树的节点,子节点,0,45,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,树的节点,根节点,0,12,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,子节点,8,29,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,父节点,8,41,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,子节点,8,45,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,根节点,8,12,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,子节点,父节点,29,41,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,子节点,子节点,29,45,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,子节点,根节点,29,12,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,子节点,41,45,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,父节点,根节点,41,12,CON,CON
树的节点具有一个父节点（根节点无父节点），可以有零个或多个子节点，每个节点通过边与父节点和子节点相连，且节点之间具有,子节点,根节点,45,12,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的顶点，从而直观地反映图中各,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的顶点，从而直观地反映图中各,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的顶点，从而直观地反映图中各,链表,邻接表,35,0,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径长度,路径,根节点,20,6,CON,CON
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法,排序,数据元素,34,6,CON,CON
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法,排序,简单排序,34,0,CON,CON
简单排序是对数据元素序列通过比较和交换等操作逐步将其排列成有序序列的排序方法,数据元素,简单排序,6,0,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性可通过下标直接定位元素且存储空间连续紧凑,访问,线性表,39,6,CON,CON
深度优先搜索是按路径延伸到最深层再回溯的搜索方法,路径,深度优先搜索,8,0,CON,CON
选择排序的核心性质是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,排序,12,47,CON,CON
选择排序的核心性质是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,排序,12,30,CON,CON
选择排序的核心性质是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,选择排序,12,0,CON,CON
选择排序的核心性质是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,排序,47,30,CON,CON
选择排序的核心性质是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,选择排序,47,0,CON,CON
选择排序的核心性质是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小（大）,排序,选择排序,30,0,CON,CON
二叉树每个节点最多有两个子节点且有特定层次结构,子节点,二叉树,12,0,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,遍历,19,3,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,二叉树,19,21,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,遍历,19,50,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,二叉树,19,0,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,左子树,19,57,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,访问,19,37,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,遍历,19,42,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,根节点,19,53,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,二叉树,3,21,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,遍历,3,50,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,二叉树,3,0,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,左子树,3,57,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,访问,3,37,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,遍历,3,42,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,根节点,3,53,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,遍历,21,50,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,二叉树,21,0,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,左子树,21,57,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,访问,21,37,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,遍历,21,42,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,根节点,21,53,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,二叉树,50,0,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,左子树,50,57,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,访问,50,37,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,遍历,50,42,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,根节点,50,53,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,左子树,0,57,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,访问,0,37,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,遍历,0,42,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,二叉树,根节点,0,53,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,左子树,访问,57,37,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,左子树,遍历,57,42,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,左子树,根节点,57,53,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,遍历,37,42,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,访问,根节点,37,53,CON,CON
二叉树遍历的核心特征是按照某种特定顺序访问二叉树中的每个节点且每个节点仅被访问一次，遍历顺序包括前序遍历（根节点、左子树、右,遍历,根节点,42,53,CON,CON
平衡二叉树的核心特征是其每个节点的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树的高度,42,22,CON,CON
平衡二叉树的核心特征是其每个节点的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,42,0,CON,CON
平衡二叉树的核心特征是其每个节点的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,42,48,CON,CON
平衡二叉树的核心特征是其每个节点的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树的高度,平衡二叉树,22,0,CON,CON
平衡二叉树的核心特征是其每个节点的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树的高度,平衡二叉树,22,48,CON,CON
平衡二叉树的核心特征是其每个节点的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,48,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,数组,11,6,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,排序,11,13,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,数组,11,21,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,归并排序,11,0,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,排序,6,13,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,数组,6,21,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,归并排序,6,0,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,排序,数组,13,21,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,排序,归并排序,13,0,CON,CON
归并排序是将数组分成子数组排序后合并成有序数组的算法,数组,归并排序,21,0,CON,CON
叶子节点是指在树状结构中没有子节点的节点,叶子节点,子节点,0,14,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,图,集合,6,17,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,图,无向图,6,0,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,图,边的方向,6,46,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,图,集合,6,13,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,集合,无向图,17,0,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,集合,边的方向,17,46,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,集合,集合,17,13,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,无向图,边的方向,0,46,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,无向图,集合,0,13,CON,CON
无向图是一种图结构，由顶点集合和边集合组成，其中边是顶点的无序对，顶点之间通过边相连且不区分边的方向,边的方向,集合,46,13,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,路径,6,19,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,树的深度,路径,0,19,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点的最长路径长度,路径,叶子节点,19,12,CON,CON
指针是存储变量内存地址并通过该地址访问变量的变量,指针,访问,0,17,CON,CON
顺序查找是按顺序逐个检查数据元素以确定目标元素,顺序查找,数据元素,0,12,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，任意一条边都连接图中的两个顶点，且顶点的个数可以是有限个也,集合,集合,13,4,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,映射,6,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,集合,集合,6,18,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一核心性质,映射,集合,0,18,CON,CON
交换排序是通过元素交换位置实现排序的方法,排序,交换排序,15,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,27,58,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,数据元素,27,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,27,48,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,顺序查找,27,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,数据元素,58,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,58,48,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,顺序查找,58,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,数据元素,遍历,21,48,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,数据元素,顺序查找,21,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,遍历,顺序查找,48,0,CON,CON
连通图是图中任意两点都存在路径可相互到达的图,连通图,路径,0,13,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,插入,11,42,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,插入,11,56,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,插入,7,42,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,插入,7,56,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,插入,15,42,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,插入,15,56,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,插入,42,56,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,排序,42,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,插入排序,42,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,排序,56,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,插入,插入排序,56,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法，其特点的核心性质是比较和插入操作，通过不断将一个数据插入到前面已排,排序,插入排序,25,0,CON,CON
线性表是一种具有零个或多个数据元素的有限序列，其特点包括有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有一个直接,数据元素,线性表,13,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,路径,6,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,路径,0,22,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点所经过的最长路径上的节点数,路径,叶子节点,22,12,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,叶子节点,22,38,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,满二叉树,22,0,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,二叉树,22,7,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,子节点,22,30,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,满二叉树,38,0,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,二叉树,38,7,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,子节点,38,30,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,二叉树,0,7,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,子节点,0,30,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,二叉树,子节点,7,30,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是比较次数与数据规模相关且平均,查找,遍历,2,38,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是比较次数与数据规模相关且平均,查找,查找,2,46,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是比较次数与数据规模相关且平均,遍历,查找,38,46,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希函数,哈希表,5,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希函数,映射,5,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希表,映射,0,11,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机的存储结构,逻辑结构,存储结构,3,38,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机的存储结构,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机的存储结构,存储结构,数据元素,38,9,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,查找,数组,43,10,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,查找,查找,43,51,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,查找,查找,43,65,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,查找,二分查找,43,0,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,数组,查找,10,51,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,数组,查找,10,65,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,数组,二分查找,10,0,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,查找,查找,51,65,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,查找,二分查找,51,0,CON,CON
二分查找是一种在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间从而高效查找目标元素的算法其特点在于查找效率,查找,二分查找,65,0,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点间有且仅有一条路径相连，除根节点外,子节点,根节点,33,58,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点间有且仅有一条路径相连，除根节点外,子节点,根节点,33,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点间有且仅有一条路径相连，除根节点外,子节点,路径,33,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点间有且仅有一条路径相连，除根节点外,根节点,根节点,58,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点间有且仅有一条路径相连，除根节点外,根节点,路径,58,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，并且任意两个节点间有且仅有一条路径相连，除根节点外,根节点,路径,19,52,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，来快速定位目标元素的查找算法,查找,查找,41,19,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，来快速定位目标元素的查找算法,查找,二分查找,41,0,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，来快速定位目标元素的查找算法,查找,数组,41,10,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，来快速定位目标元素的查找算法,查找,二分查找,19,0,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，来快速定位目标元素的查找算法,查找,数组,19,10,CON,CON
二分查找是在一个有序数组中，通过每次将查找区间缩小一半的方式，来快速定位目标元素的查找算法,二分查找,数组,0,10,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆排序,排序,0,27,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆排序,堆,0,43,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆排序,堆,0,60,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,排序,堆,27,43,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,排序,排序,27,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,排序,堆,27,60,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,排序,堆,27,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆,排序,43,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆,堆,43,60,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆,堆,43,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,排序,堆,14,60,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,排序,堆,14,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征是将待排序的数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并重新调整堆结构,堆,堆,60,8,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,递归,二叉树,36,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,递归,子树,36,45,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,递归,子节点,36,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,递归,二叉树,36,31,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,递归,二叉树,36,50,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,二叉树,子树,0,45,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,二叉树,子节点,0,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,二叉树,二叉树,0,31,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,二叉树,二叉树,0,50,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,子树,子节点,45,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,子树,二叉树,45,31,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,子树,二叉树,45,50,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,子节点,二叉树,18,31,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,子节点,二叉树,18,50,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即度最大为2，并且二叉树具有递归的结构，其左右子树也均为二叉树,二叉树,二叉树,31,50,CON,CON
树中一个节点的子树数目称为该节点的度，树中节点的最大度数称为树的度,树的度,子树,30,7,CON,CON
归并排序是将数组分治后合并以达有序的排序算法,数组,归并排序,6,0,CON,CON
归并排序是将数组分治后合并以达有序的排序算法,数组,排序,6,18,CON,CON
归并排序是将数组分治后合并以达有序的排序算法,归并排序,排序,0,18,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,路径,6,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,路径,叶子节点,21,12,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,遍历,16,3,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,访问,16,48,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,右子树,16,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,二叉树,16,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,根节点,16,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,遍历,16,35,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,访问,16,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,访问,16,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,左子树,16,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,递归,16,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,访问,3,48,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,右子树,3,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,根节点,3,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,遍历,3,35,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,访问,3,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,访问,3,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,左子树,3,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,递归,3,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,右子树,48,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,二叉树,48,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,根节点,48,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,遍历,48,35,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,访问,48,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,访问,48,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,左子树,48,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,递归,48,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,右子树,二叉树,54,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,右子树,根节点,54,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,右子树,遍历,54,35,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,右子树,访问,54,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,右子树,访问,54,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,右子树,左子树,54,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,右子树,递归,54,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,根节点,0,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,遍历,0,35,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,访问,0,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,访问,0,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,左子树,0,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,二叉树,递归,0,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,根节点,遍历,41,35,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,根节点,访问,41,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,根节点,访问,41,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,根节点,左子树,41,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,根节点,递归,41,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,访问,35,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,访问,35,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,左子树,35,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,遍历,递归,35,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,访问,39,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,左子树,39,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,递归,39,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,左子树,14,50,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,访问,递归,14,46,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,左子树,递归,50,46,CON,CON
父节点是在树形结构中，其直接有子节点与之相连，且对于子节点来说该节点处于上一级的节点，它在层级关系中具有高于其子节点的位置,子节点,子节点,15,26,CON,CON
父节点是在树形结构中，其直接有子节点与之相连，且对于子节点来说该节点处于上一级的节点，它在层级关系中具有高于其子节点的位置,子节点,父节点,15,0,CON,CON
父节点是在树形结构中，其直接有子节点与之相连，且对于子节点来说该节点处于上一级的节点，它在层级关系中具有高于其子节点的位置,子节点,父节点,26,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而进行排序的算法,排序,比较排序,25,0,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,根节点,根节点,21,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,根节点,父节点,21,53,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,子节点,根节点,32,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,子节点,父节点,32,53,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,根节点,根节点,17,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,根节点,父节点,17,53,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，除根节点外的每个节点都有且仅有一个父节点，并且,根节点,父节点,37,53,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大节点数,满二叉树,二叉树,0,24,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循后进先出原则,删除,插入,14,11,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,查找,查找,54,2,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,查找,遍历,54,35,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,查找,子节点,54,41,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,查找,根节点,54,27,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,查找,遍历,2,35,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,查找,子节点,2,41,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,查找,根节点,2,27,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,遍历,子节点,35,41,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,遍历,根节点,35,27,CON,CON
树的查找是在给定的树结构中，根据特定的条件或关键字，从根节点开始，通过遍历节点及其子节点，以确定是否存在满足查找条件的节点的,子节点,根节点,41,27,CON,CON
叶子节点是树中没有子节点的末端节点,子节点,叶子节点,9,0,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列,遍历,查找,52,30,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列,遍历,顺序查找,52,0,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个数据序列,查找,顺序查找,30,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,33,26,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,33,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,33,19,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉搜索树,26,0,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,二叉树,26,19,CON,CON
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,19,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,28,39,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,二叉树,28,16,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,遍历,28,3,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,28,31,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,递归,28,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,遍历,28,51,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,根节点,28,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,二叉树,28,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,递归,28,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,左子树,28,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,右子树,28,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,28,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,28,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,二叉树,39,16,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,39,3,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,39,31,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,递归,39,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,39,51,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,根节点,39,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,二叉树,39,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,递归,39,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,左子树,39,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,右子树,39,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,39,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,39,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,遍历,16,3,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,16,31,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,递归,16,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,遍历,16,51,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,根节点,16,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,二叉树,16,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,递归,16,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,左子树,16,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,右子树,16,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,16,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,16,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,3,31,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,递归,3,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,遍历,3,51,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,根节点,3,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,二叉树,3,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,递归,3,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,左子树,3,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,右子树,3,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,3,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,3,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,递归,31,54,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,遍历,31,51,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,根节点,31,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,二叉树,31,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,递归,31,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,左子树,31,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,右子树,31,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,31,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,31,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,遍历,54,51,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,根节点,54,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,二叉树,54,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,递归,54,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,左子树,54,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,右子树,54,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,54,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,54,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,根节点,51,33,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,二叉树,51,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,递归,51,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,左子树,51,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,右子树,51,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,51,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,遍历,访问,51,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,二叉树,33,0,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,递归,33,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,左子树,33,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,右子树,33,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,访问,33,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,根节点,访问,33,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,递归,0,37,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,左子树,0,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,右子树,0,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,0,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,二叉树,访问,0,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,左子树,37,41,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,右子树,37,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,37,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,递归,访问,37,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,左子树,右子树,41,45,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,左子树,访问,41,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,左子树,访问,41,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,访问,45,56,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,右子树,访问,45,14,CON,CON
二叉树遍历是按照某种特定顺序访问二叉树中的每个节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左,访问,访问,56,14,CON,CON
图的核心性质是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点之间通过边进行连接，边可以具有权重等属性，图可分为有向图和,集合,集合,10,20,CON,CON
图的核心性质是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点之间通过边进行连接，边可以具有权重等属性，图可分为有向图和,集合,有向图,10,58,CON,CON
图的核心性质是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点之间通过边进行连接，边可以具有权重等属性，图可分为有向图和,集合,图,10,54,CON,CON
图的核心性质是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点之间通过边进行连接，边可以具有权重等属性，图可分为有向图和,集合,有向图,20,58,CON,CON
图的核心性质是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点之间通过边进行连接，边可以具有权重等属性，图可分为有向图和,集合,图,20,54,CON,CON
图的核心性质是由顶点集合以及顶点之间的边集合所构成的数据结构，顶点之间通过边进行连接，边可以具有权重等属性，图可分为有向图和,有向图,图,58,54,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复,路径,深度优先搜索,63,0,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复,路径,路径,63,24,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复,深度优先搜索,路径,0,24,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法,数组,排序,51,56,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法,数组,数组,51,37,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法,数组,冒泡排序,51,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法,排序,数组,56,37,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法,排序,冒泡排序,56,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法,数组,冒泡排序,37,0,CON,CON
递归基础是递归算法中满足特定条件的初始情况，在此情况下递归函数直接返回一个已知结果而不再进行递归调用,递归,递归基础,5,0,CON,CON
递归基础是递归算法中满足特定条件的初始情况，在此情况下递归函数直接返回一个已知结果而不再进行递归调用,递归,递归,5,46,CON,CON
递归基础是递归算法中满足特定条件的初始情况，在此情况下递归函数直接返回一个已知结果而不再进行递归调用,递归基础,递归,0,46,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,遍历,28,4,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,二叉树,28,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,二叉树,28,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,访问,访问,28,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,遍历,二叉树,4,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,遍历,二叉树,4,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,遍历,访问,4,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,二叉树,二叉树,0,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,二叉树,访问,0,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每个节点且仅访问一次的操作,二叉树,访问,17,15,CON,CON
算法效率是指算法执行所需要的计算机资源量，包括时间资源和空间资源，通常用时间复杂度和空间复杂度来衡量,空间复杂度,时间复杂度,42,36,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复,路径,深度优先搜索,63,0,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复,路径,路径,63,24,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，重复,深度优先搜索,路径,0,24,CON,CON
顺序查找的核心性质是从数据序列的第一个元素开始，依次将每个元素与目标元素进行比较，直到找到目标元素或遍历完整个序列,遍历,顺序查找,50,0,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序方法其特点在于相邻或不相邻元素间的两两比较并适时交换以逐步实现,数组,排序,31,34,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序方法其特点在于相邻或不相邻元素间的两两比较并适时交换以逐步实现,数组,交换排序,31,0,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序方法其特点在于相邻或不相邻元素间的两两比较并适时交换以逐步实现,数组,数组,31,24,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序方法其特点在于相邻或不相邻元素间的两两比较并适时交换以逐步实现,排序,交换排序,34,0,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序方法其特点在于相邻或不相邻元素间的两两比较并适时交换以逐步实现,排序,数组,34,24,CON,CON
交换排序是一种通过不断比较和交换元素位置来将无序数组转变为有序数组的排序方法其特点在于相邻或不相邻元素间的两两比较并适时交换以逐步实现,交换排序,数组,0,24,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
邻接矩阵是表示顶点之间相邻关系的矩阵，若图中有n个顶点，则邻接矩阵是一个n×n的矩阵，矩阵中元素的值表示对应顶点之间是否有,邻接矩阵,邻接矩阵,0,29,CON,CON
父节点是在树形结构中位于上一层可连接子节点的节点,子节点,父节点,18,0,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点值都小于该节点值，其右子树中的所有节点值都大于该节点值,左子树,二叉搜索树,22,0,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点值都小于该节点值，其右子树中的所有节点值都大于该节点值,左子树,右子树,22,41,CON,CON
二叉搜索树的核心性质是对于树中的每个节点，其左子树中的所有节点值都小于该节点值，其右子树中的所有节点值都大于该节点值,二叉搜索树,右子树,0,41,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，图中顶点的位置和边的形状不影响图的逻辑结构，图可分为,集合,逻辑结构,13,48,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，图中顶点的位置和边的形状不影响图的逻辑结构，图可分为,集合,集合,13,4,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，图中顶点的位置和边的形状不影响图的逻辑结构，图可分为,集合,图,13,53,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，图中顶点的位置和边的形状不影响图的逻辑结构，图可分为,逻辑结构,集合,48,4,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，图中顶点的位置和边的形状不影响图的逻辑结构，图可分为,逻辑结构,图,48,53,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点间的关系通过边来表示，图中顶点的位置和边的形状不影响图的逻辑结构，图可分为,集合,图,4,53,CON,CON
线性结构的特点的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和,线性结构,数据元素,0,13,CON,CON
线性结构的特点的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和,线性结构,数据元素,0,50,CON,CON
线性结构的特点的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和,线性结构,数据元素,0,42,CON,CON
线性结构的特点的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和,数据元素,数据元素,13,50,CON,CON
线性结构的特点的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和,数据元素,数据元素,13,42,CON,CON
线性结构的特点的核心特征是数据元素之间存在着一对一的线性关系，即除了第一个和最后一个数据元素外，每个数据元素都有且仅有一个直接前驱和,数据元素,数据元素,50,42,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,30,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,深度优先搜索,路径,0,65,CON,CON
深度优先搜索是一种在图或树等数据结构中从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标，然后回溯到前一步继续探索其他路径,路径,路径,30,65,CON,CON
交换排序是指通过比较和交换元素位置，将无序序列逐步转换为有序序列的排序方法,排序,交换排序,33,0,CON,CON
邻接矩阵是用于表示图的一种矩阵，其中若图中存在从顶点i到顶点j的边，则邻接矩阵中第i行第j列的元素值为1,邻接矩阵,邻接矩阵,0,35,CON,CON
广度优先搜索按层次依次扩展节点以遍历图或树结构,广度优先搜索,遍历,0,16,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等各种与边相关的度量，图由顶点集合,图,集合,6,61,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等各种与边相关的度量，图由顶点集合,图,加权图,6,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等各种与边相关的度量，图由顶点集合,集合,加权图,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
回溯法是一种通过系统地尝试所有可能解，以深度优先搜索方式遍历解空间树，在搜索过程中通过剪枝函数避免无效搜索，从而找出问题所有解或,遍历,树,28,33,CON,CON
回溯法是一种通过系统地尝试所有可能解，以深度优先搜索方式遍历解空间树，在搜索过程中通过剪枝函数避免无效搜索，从而找出问题所有解或,遍历,回溯法,28,0,CON,CON
回溯法是一种通过系统地尝试所有可能解，以深度优先搜索方式遍历解空间树，在搜索过程中通过剪枝函数避免无效搜索，从而找出问题所有解或,遍历,深度优先搜索,28,20,CON,CON
回溯法是一种通过系统地尝试所有可能解，以深度优先搜索方式遍历解空间树，在搜索过程中通过剪枝函数避免无效搜索，从而找出问题所有解或,树,回溯法,33,0,CON,CON
回溯法是一种通过系统地尝试所有可能解，以深度优先搜索方式遍历解空间树，在搜索过程中通过剪枝函数避免无效搜索，从而找出问题所有解或,树,深度优先搜索,33,20,CON,CON
回溯法是一种通过系统地尝试所有可能解，以深度优先搜索方式遍历解空间树，在搜索过程中通过剪枝函数避免无效搜索，从而找出问题所有解或,回溯法,深度优先搜索,0,20,CON,CON
数组是由相同类型的数据元素按一定顺序排列而成的有限序列，这些元素存储在连续的内存空间中，通过数组名和下标来唯一标识每个元素,数组,数据元素,0,9,CON,CON
数组是由相同类型的数据元素按一定顺序排列而成的有限序列，这些元素存储在连续的内存空间中，通过数组名和下标来唯一标识每个元素,数组,数组,0,46,CON,CON
数组是由相同类型的数据元素按一定顺序排列而成的有限序列，这些元素存储在连续的内存空间中，通过数组名和下标来唯一标识每个元素,数据元素,数组,9,46,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，以此来直观反映图中,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，以此来直观反映图中,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，以此来直观反映图中,链表,邻接表,35,0,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,删除,插入,47,44,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,删除,时间复杂度,47,56,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,删除,哈希表,47,0,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,删除,哈希函数,47,19,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,删除,查找,47,42,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,删除,映射,47,25,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,插入,时间复杂度,44,56,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,插入,哈希表,44,0,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,插入,哈希函数,44,19,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,插入,查找,44,42,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,插入,映射,44,25,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,时间复杂度,哈希表,56,0,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,时间复杂度,哈希函数,56,19,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,时间复杂度,查找,56,42,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,时间复杂度,映射,56,25,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,哈希表,哈希函数,0,19,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,哈希表,查找,0,42,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,哈希表,映射,0,25,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,哈希函数,查找,19,42,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,哈希函数,映射,19,25,CON,CON
哈希表是一种数据结构，其核心特征是通过哈希函数将键映射到特定位置，从而实现快速的数据查找插入和删除操作，具有平均时间复杂度接近常数的高效性,查找,映射,42,25,CON,CON
叶子节点是树结构中没有子节点的节点其核心性质为没有子节点,叶子节点,子节点,0,25,CON,CON
叶子节点是树结构中没有子节点的节点其核心性质为没有子节点,叶子节点,子节点,0,11,CON,CON
叶子节点是树结构中没有子节点的节点其核心性质为没有子节点,子节点,子节点,25,11,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归,27,5,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归,27,62,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归,27,42,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归基础,27,0,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归,5,62,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归,5,42,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归基础,5,0,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归,62,42,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归基础,62,0,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义而不依赖递归步骤的部分，其核心性质是为递归定义提供初始值或最简形式的规定，使得递归过程能够,递归,递归基础,42,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一特点,集合,映射,6,0,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一特点,集合,集合,6,18,CON,CON
映射具有对于集合A中的任意一个元素在集合B中都有唯一确定的元素与之对应这一特点,映射,集合,0,18,CON,CON
数据的逻辑结构的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的相互关系以及数据的组织方式，而不涉及数据在计算机中的存储方式,逻辑结构,数据元素,3,29,CON,CON
数据的逻辑结构的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的相互关系以及数据的组织方式，而不涉及数据在计算机中的存储方式,逻辑结构,数据元素,3,13,CON,CON
数据的逻辑结构的核心特征是数据元素之间的逻辑关系，它描述了数据元素之间的相互关系以及数据的组织方式，而不涉及数据在计算机中的存储方式,数据元素,数据元素,29,13,CON,CON
回路是图中一条起点和终点相同的路径且除起点和终点外其余顶点均不重复,路径,回路,15,0,CON,CON
在树形结构中，对于某一节点而言，直接位于其上方且与该节点通过特定关系相连的节点就是该节点的父节点，父节点拥有比子节点更高的,子节点,父节点,55,45,CON,CON
在树形结构中，对于某一节点而言，直接位于其上方且与该节点通过特定关系相连的节点就是该节点的父节点，父节点拥有比子节点更高的,子节点,父节点,55,49,CON,CON
在树形结构中，对于某一节点而言，直接位于其上方且与该节点通过特定关系相连的节点就是该节点的父节点，父节点拥有比子节点更高的,父节点,父节点,45,49,CON,CON
加权图是一种图结构，其中图的每条边都被赋予一个数值作为权值，这些权值可表示诸如距离、成本、容量等与边相关的某种度量,图,加权图,6,0,CON,CON
根节点是树结构中处于顶层无父节点的起始节点,父节点,根节点,13,0,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,排序,堆排序,28,0,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,排序,数组,28,30,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,排序,排序,28,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,排序,堆,28,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,排序,堆,28,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,堆排序,数组,0,30,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,堆排序,排序,0,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,堆排序,堆,0,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,堆排序,堆,0,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,数组,排序,30,20,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,数组,堆,30,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,数组,堆,30,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,排序,堆,20,37,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,排序,堆,20,7,CON,CON
堆排序是指利用堆这种数据结构所设计的一种排序算法，它将待排序数组构建成一个堆，将堆顶元素与堆的最后一个元素交换，然后将,堆,堆,37,7,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,树,40,12,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,平衡二叉树,40,46,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,平衡二叉树,40,0,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,排序,40,10,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,子树,子树,40,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,树,平衡二叉树,12,46,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,树,子树,12,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,46,0,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,排序,46,10,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,子树,46,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,平衡二叉树,子树,0,22,CON,CON
平衡二叉树是一种二叉排序树，其每个结点的左右子树高度差的绝对值不超过1，并且左右子树都是一棵平衡二叉树,排序,子树,10,22,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,排序,24,43,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,数组,24,48,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,数组,24,17,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,排序,24,37,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,数组,24,33,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,归并排序,24,0,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,排序,数组,43,48,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,排序,数组,43,17,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,排序,排序,43,37,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,排序,数组,43,33,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,排序,归并排序,43,0,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,数组,48,17,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,排序,48,37,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,数组,48,33,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,归并排序,48,0,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,排序,17,37,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,数组,17,33,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,归并排序,17,0,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,排序,数组,37,33,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,排序,归并排序,37,0,CON,CON
归并排序是一种分治算法，其特点是将数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的,数组,归并排序,33,0,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,子节点,根节点,16,50,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,子节点,左子树,16,54,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,子节点,二叉树,16,0,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,子节点,根节点,16,34,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,根节点,左子树,50,54,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,根节点,二叉树,50,0,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,根节点,根节点,50,34,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,左子树,二叉树,54,0,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,左子树,根节点,54,34,CON,CON
二叉树的特点是每个节点最多有两个子节点，并且它可以为空树，或者由一个根节点和两棵互不相交的、分别称为根节点的左子树和右,二叉树,根节点,0,34,CON,CON
数据逻辑结构特点指数据元素间抽象关系及组织方式,数据元素,逻辑结构,9,2,CON,CON
选择基准分区递归排序以达快速有序效果,排序,递归,8,6,CON,CON
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到,二叉树,二叉树,10,16,CON,CON
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到,二叉树,完全二叉树,10,0,CON,CON
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到,二叉树,完全二叉树,16,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,查找,27,44,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,线性表,27,55,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,遍历,27,50,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,线性表,27,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,线性表,27,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,顺序查找,27,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,线性表,44,55,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,遍历,44,50,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,线性表,44,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,线性表,44,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,查找,顺序查找,44,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,线性表,遍历,55,50,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,线性表,线性表,55,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,线性表,线性表,55,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,线性表,顺序查找,55,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,遍历,线性表,50,18,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,遍历,线性表,50,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,遍历,顺序查找,50,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,线性表,线性表,18,6,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,线性表,顺序查找,18,0,CON,CON
顺序查找是从线性表的一端开始，依次将线性表中的元素与被查找元素进行比较，若找到相同元素则查找成功，若遍历完整个线性表都未找到,线性表,顺序查找,6,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,链表,22,30,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,链表,22,43,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,链表,22,7,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,链表,22,57,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,遍历,22,54,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,指针,22,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,尾节点,22,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,头节点,循环链表,22,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,链表,30,43,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,链表,30,7,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,链表,30,57,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,遍历,30,54,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,指针,30,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,尾节点,30,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,循环链表,30,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,链表,43,7,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,链表,43,57,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,遍历,43,54,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,指针,43,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,尾节点,43,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,循环链表,43,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,链表,7,57,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,遍历,7,54,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,指针,7,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,尾节点,7,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,循环链表,7,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,遍历,57,54,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,指针,57,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,尾节点,57,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,链表,循环链表,57,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,遍历,指针,54,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,遍历,尾节点,54,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,遍历,循环链表,54,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,指针,尾节点,17,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,指针,循环链表,17,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，使得整个链表形成一个环，从而实现从链表中任意节点出发都能遍历到链表中的所有节点,尾节点,循环链表,13,0,CON,CON
满二叉树是一棵深度为k且有2^k-1个节点的二叉树其每一层上的节点数都达到最大值即第i层有2^(i-1,满二叉树,二叉树,0,22,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,18,41,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,41,0,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示,物理结构,数据元素,3,24,CON,CON
堆是一种优先队列的数据结构，它通常分为最大堆和最小堆，最大堆中父节点的值大于或等于其子节点的值，最小堆中父节点的值小于或等于其子,父节点,队列,31,6,CON,CON
堆是一种优先队列的数据结构，它通常分为最大堆和最小堆，最大堆中父节点的值大于或等于其子节点的值，最小堆中父节点的值小于或等于其子,父节点,堆,31,25,CON,CON
堆是一种优先队列的数据结构，它通常分为最大堆和最小堆，最大堆中父节点的值大于或等于其子节点的值，最小堆中父节点的值小于或等于其子,父节点,父节点,31,52,CON,CON
堆是一种优先队列的数据结构，它通常分为最大堆和最小堆，最大堆中父节点的值大于或等于其子节点的值，最小堆中父节点的值小于或等于其子,队列,堆,6,25,CON,CON
堆是一种优先队列的数据结构，它通常分为最大堆和最小堆，最大堆中父节点的值大于或等于其子节点的值，最小堆中父节点的值小于或等于其子,队列,父节点,6,52,CON,CON
堆是一种优先队列的数据结构，它通常分为最大堆和最小堆，最大堆中父节点的值大于或等于其子节点的值，最小堆中父节点的值小于或等于其子,堆,父节点,25,52,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，在树形结构等数据结构中，子节点是直接连接在父节点之下的节点，具有从属于父,子节点,父节点,36,11,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，在树形结构等数据结构中，子节点是直接连接在父节点之下的节点，具有从属于父,子节点,父节点,36,45,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，在树形结构等数据结构中，子节点是直接连接在父节点之下的节点，具有从属于父,子节点,子节点,36,0,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，在树形结构等数据结构中，子节点是直接连接在父节点之下的节点，具有从属于父,父节点,父节点,11,45,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，在树形结构等数据结构中，子节点是直接连接在父节点之下的节点，具有从属于父,父节点,子节点,11,0,CON,CON
子节点的核心特征是其与父节点存在特定的关联关系，在树形结构等数据结构中，子节点是直接连接在父节点之下的节点，具有从属于父,父节点,子节点,45,0,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,排序,堆排序,16,0,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,排序,堆,16,6,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,排序,排序,16,11,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,堆排序,堆,0,6,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,堆排序,排序,0,11,CON,CON
堆排序是利用堆结构进行排序的一种排序算法,堆,排序,6,11,CON,CON
加权图的核心特征是图中的边被赋予了一个数值作为权重，该权重用来表示边的某种属性或代价，不同边的权重值可以不同，基于这些权重可,边的权重,加权图,45,0,CON,CON
循环链表是尾节点指向头节点形成环形结构的链表,头节点,链表,10,20,CON,CON
循环链表是尾节点指向头节点形成环形结构的链表,头节点,尾节点,10,5,CON,CON
循环链表是尾节点指向头节点形成环形结构的链表,头节点,循环链表,10,0,CON,CON
循环链表是尾节点指向头节点形成环形结构的链表,链表,尾节点,20,5,CON,CON
循环链表是尾节点指向头节点形成环形结构的链表,链表,循环链表,20,0,CON,CON
循环链表是尾节点指向头节点形成环形结构的链表,尾节点,循环链表,5,0,CON,CON
线性结构中数据元素之间存在一对一的线性关系,线性结构,数据元素,0,5,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,映射,查找,20,57,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,映射,删除,20,54,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,映射,插入,20,51,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,映射,哈希表,20,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,映射,时间复杂度,20,45,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,映射,哈希函数,20,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,查找,删除,57,54,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,查找,插入,57,51,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,查找,哈希表,57,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,查找,时间复杂度,57,45,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,查找,哈希函数,57,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,删除,插入,54,51,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,删除,哈希表,54,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,删除,时间复杂度,54,45,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,删除,哈希函数,54,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,插入,哈希表,51,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,插入,时间复杂度,51,45,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,插入,哈希函数,51,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,哈希表,时间复杂度,0,45,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,哈希表,哈希函数,0,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个特定的索引位置来存储和检索数据，具有常数时间复杂度的插入、删除和查找操作，能够高效,时间复杂度,哈希函数,45,14,CON,CON
快速排序是对数组进行划分，选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行,数组,数组,22,6,CON,CON
快速排序是对数组进行划分，选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行,数组,递归,22,61,CON,CON
快速排序是对数组进行划分，选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行,数组,快速排序,22,0,CON,CON
快速排序是对数组进行划分，选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行,数组,递归,6,61,CON,CON
快速排序是对数组进行划分，选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行,数组,快速排序,6,0,CON,CON
快速排序是对数组进行划分，选择一个基准值，将数组分为两部分，小于基准值的放在左边大于基准值的放在右边，然后对左右两部分分别递归进行,递归,快速排序,61,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以遍历回该顶点且经过的边不重复,回路,回路,0,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以遍历回该顶点且经过的边不重复,回路,遍历,0,26,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以遍历回该顶点且经过的边不重复,回路,回路,0,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以遍历回该顶点且经过的边不重复,回路,遍历,20,26,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以遍历回该顶点且经过的边不重复,回路,回路,20,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以遍历回该顶点且经过的边不重复,遍历,回路,26,9,CON,CON
树结构中没有子节点的节点就是叶子节点,叶子节点,子节点,14,6,CON,CON
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，并且最后一层上要么是全有节点，要么是从左至右,二叉树,完全二叉树,10,0,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质为逐个元素顺序比较以,遍历,查找,43,2,CON,CON
快速排序以基准值分区，递归分治实现高效排序,排序,快速排序,19,0,CON,CON
快速排序以基准值分区，递归分治实现高效排序,排序,递归,19,11,CON,CON
快速排序以基准值分区，递归分治实现高效排序,快速排序,递归,0,11,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,访问,图,27,9,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,访问,广度优先搜索,27,0,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,访问,遍历,27,49,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,访问,访问,27,33,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,图,广度优先搜索,9,0,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,图,遍历,9,49,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,图,访问,9,33,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,广度优先搜索,遍历,0,49,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,广度优先搜索,访问,0,33,CON,CON
广度优先搜索是一种图搜索算法，其核心性质是按照层次依次访问节点，先访问距离起始节点较近的节点，直到遍历完所有可达节点,遍历,访问,49,33,CON,CON
图的顶点是图这种数据结构中组成图的基本元素之一，是图中用于表示某个对象或实体的节点，在有向图或无向图中具有标识作用,有向图,无向图,43,47,CON,CON
图的顶点是图这种数据结构中组成图的基本元素之一，是图中用于表示某个对象或实体的节点，在有向图或无向图中具有标识作用,有向图,图的顶点,43,0,CON,CON
图的顶点是图这种数据结构中组成图的基本元素之一，是图中用于表示某个对象或实体的节点，在有向图或无向图中具有标识作用,无向图,图的顶点,47,0,CON,CON
指针是内存中存储变量地址并可通过它访问变量的变量,指针,访问,0,17,CON,CON
数据的物理结构的特点的核心特征是描述数据在计算机内存或存储设备中的实际存储方式包括存储位置存储顺序以及数据元素间的物理关系等,物理结构,数据元素,3,51,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，它可以为空树，若不为空树则包括一个根节点以及两棵互不相交的、分别称为左子树和,根节点,子节点,39,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，它可以为空树，若不为空树则包括一个根节点以及两棵互不相交的、分别称为左子树和,根节点,二叉树,39,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，它可以为空树，若不为空树则包括一个根节点以及两棵互不相交的、分别称为左子树和,根节点,左子树,39,56,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，它可以为空树，若不为空树则包括一个根节点以及两棵互不相交的、分别称为左子树和,子节点,二叉树,18,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，它可以为空树，若不为空树则包括一个根节点以及两棵互不相交的、分别称为左子树和,子节点,左子树,18,56,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，它可以为空树，若不为空树则包括一个根节点以及两棵互不相交的、分别称为左子树和,二叉树,左子树,0,56,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,31,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,52,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,52,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,31,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,31,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,31,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,52,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,52,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,52,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,52,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,22,46,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,排序,22,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,22,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,排序,46,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,堆,堆,46,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,排序,堆,14,8,CON,CON
算法效率的特点包括时间复杂度和空间复杂度等方面，时间复杂度衡量算法执行时间随输入规模增长的变化，空间复杂度衡量算法执行过程中所需存储空间随输入规模增长的,空间复杂度,时间复杂度,15,24,CON,CON
算法效率的特点包括时间复杂度和空间复杂度等方面，时间复杂度衡量算法执行时间随输入规模增长的变化，空间复杂度衡量算法执行过程中所需存储空间随输入规模增长的,空间复杂度,空间复杂度,15,48,CON,CON
算法效率的特点包括时间复杂度和空间复杂度等方面，时间复杂度衡量算法执行时间随输入规模增长的变化，空间复杂度衡量算法执行过程中所需存储空间随输入规模增长的,空间复杂度,时间复杂度,15,9,CON,CON
算法效率的特点包括时间复杂度和空间复杂度等方面，时间复杂度衡量算法执行时间随输入规模增长的变化，空间复杂度衡量算法执行过程中所需存储空间随输入规模增长的,时间复杂度,空间复杂度,24,48,CON,CON
算法效率的特点包括时间复杂度和空间复杂度等方面，时间复杂度衡量算法执行时间随输入规模增长的变化，空间复杂度衡量算法执行过程中所需存储空间随输入规模增长的,时间复杂度,时间复杂度,24,9,CON,CON
算法效率的特点包括时间复杂度和空间复杂度等方面，时间复杂度衡量算法执行时间随输入规模增长的变化，空间复杂度衡量算法执行过程中所需存储空间随输入规模增长的,空间复杂度,时间复杂度,48,9,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,左子树,0,6,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,根节点,0,14,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,右子树,0,19,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,左子树,根节点,6,14,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,左子树,右子树,6,19,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,根节点,右子树,14,19,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,路径,深度优先搜索,37,0,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,路径,遍历,37,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到,深度优先搜索,遍历,0,11,CON,CON
二叉树遍历按特定顺序访问节点以全面了解结构,遍历,二叉树,3,0,CON,CON
二叉树遍历按特定顺序访问节点以全面了解结构,遍历,访问,3,10,CON,CON
二叉树遍历按特定顺序访问节点以全面了解结构,二叉树,访问,0,10,CON,CON
线性表是零个或多个数据元素的有限序列,数据元素,线性表,9,0,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征是描述数据在计算机内存或存储设备中的,物理结构,数据元素,3,24,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征是描述数据在计算机内存或存储设备中的,物理结构,数据元素,3,35,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征是描述数据在计算机内存或存储设备中的,数据元素,数据元素,24,35,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，若其中每一个结点都与深度为k的满二叉树中编号从1至n的结点一一对应,完全二叉树,二叉树,0,18,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，若其中每一个结点都与深度为k的满二叉树中编号从1至n的结点一一对应,完全二叉树,满二叉树,0,37,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，若其中每一个结点都与深度为k的满二叉树中编号从1至n的结点一一对应,二叉树,满二叉树,18,37,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，依次对每一对相邻元素进行此操作，直到整个数组都被排序的排序算法,数组,冒泡排序,50,0,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，依次对每一对相邻元素进行此操作，直到整个数组都被排序的排序算法,数组,排序,50,57,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，依次对每一对相邻元素进行此操作，直到整个数组都被排序的排序算法,数组,排序,50,54,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，依次对每一对相邻元素进行此操作，直到整个数组都被排序的排序算法,冒泡排序,排序,0,57,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，依次对每一对相邻元素进行此操作，直到整个数组都被排序的排序算法,冒泡排序,排序,0,54,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，依次对每一对相邻元素进行此操作，直到整个数组都被排序的排序算法,排序,排序,57,54,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,根节点,父节点,46,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,根节点,根节点,46,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,父节点,根节点,19,0,CON,CON
连通图是任意两点间都存在路径可相互到达的图,连通图,路径,0,12,CON,CON
图由顶点集合及顶点间边的集合组成的一种数据结构,集合,集合,12,4,CON,CON
父节点是指在树形结构中，直接位于某个节点之上的节点，其核心性质包括拥有子节点且在树的层级关系中处于比子节点更高一级的位置,子节点,子节点,35,50,CON,CON
父节点是指在树形结构中，直接位于某个节点之上的节点，其核心性质包括拥有子节点且在树的层级关系中处于比子节点更高一级的位置,子节点,父节点,35,0,CON,CON
父节点是指在树形结构中，直接位于某个节点之上的节点，其核心性质包括拥有子节点且在树的层级关系中处于比子节点更高一级的位置,子节点,父节点,50,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,遍历,二叉树,4,0,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,遍历,二叉树,4,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,遍历,访问,4,29,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,遍历,访问,4,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,二叉树,0,17,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,访问,0,29,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,访问,0,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,访问,17,29,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,二叉树,访问,17,15,CON,CON
二叉树的遍历是按照某种特定顺序访问二叉树中的每一个节点且仅访问一次的操作过程,访问,访问,29,15,CON,CON
从数据序列开头依次逐个查找目标元素的查找方法,查找,查找,11,18,CON,CON
树是一种非线性数据结构有根节点及子树关系,根节点,子树,12,16,CON,CON
单链表是由节点组成，每个节点含数据及指向下一节点的指针,指针,单链表,25,0,CON,CON
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值就是树的度，树的度的核心特征是反映树中节点拥有子树,树的度,子树,32,7,CON,CON
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值就是树的度，树的度的核心特征是反映树中节点拥有子树,树的度,树的度,32,36,CON,CON
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值就是树的度，树的度的核心特征是反映树中节点拥有子树,树的度,子树,32,53,CON,CON
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值就是树的度，树的度的核心特征是反映树中节点拥有子树,子树,树的度,7,36,CON,CON
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值就是树的度，树的度的核心特征是反映树中节点拥有子树,子树,子树,7,53,CON,CON
树中一个节点的子树个数称为该节点的度，树中所有节点度的最大值就是树的度，树的度的核心特征是反映树中节点拥有子树,树的度,子树,36,53,CON,CON
链表由节点组成各节点通过指针相连数据存储不连续,指针,链表,12,0,CON,CON
堆是一种特殊的数据结构，它是一个完全二叉树，并且每个节点的值都大于或等于其子节点的值（最大堆），或者每个节点的值都小于或等于其子节点,完全二叉树,堆,16,45,CON,CON
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步转换为有序序列，在排序过程中，相邻元素或不相邻元素不断进行比较和交换操作以,排序,交换排序,38,0,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,根节点,路径,6,18,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,树的深度,路径,0,18,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数据元素,数组,25,58,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数据元素,数据元素,25,38,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数据元素,线性表,25,20,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数据元素,访问,25,64,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数组,数据元素,58,38,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数组,线性表,58,20,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数组,访问,58,64,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数据元素,线性表,38,20,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,数据元素,访问,38,64,CON,CON
顺序表是用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理位置上也相邻，从而可以通过数组下标直接访问元素,线性表,访问,20,64,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,51,15,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,51,61,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,51,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,51,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,51,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,15,61,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,数据元素,15,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,15,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,选择排序,15,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,数据元素,61,54,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,排序,61,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,61,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,排序,54,12,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,数据元素,选择排序,54,0,CON,CON
选择排序是一种每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的排序算法,排序,选择排序,12,0,CON,CON
树的节点是树结构中的基本组成单元包含数据项以及指向其子节点的指针,数据项,树的节点,18,0,CON,CON
树的节点是树结构中的基本组成单元包含数据项以及指向其子节点的指针,数据项,指针,18,30,CON,CON
树的节点是树结构中的基本组成单元包含数据项以及指向其子节点的指针,树的节点,指针,0,30,CON,CON
比较排序通过比较元素大小来确定其最终排序位置,比较排序,排序,0,18,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上边的数目,叶子节点,树的高度,17,0,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上边的数目,叶子节点,根节点,17,11,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上边的数目,叶子节点,路径,17,26,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上边的数目,树的高度,根节点,0,11,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上边的数目,树的高度,路径,0,26,CON,CON
树的高度的核心性质是从根节点到最远叶子节点的最长简单路径上边的数目,根节点,路径,11,26,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,映射,删除,19,47,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,映射,查找,19,44,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,映射,插入,19,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,映射,时间复杂度,19,64,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,映射,数据元素,19,32,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,删除,查找,47,44,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,删除,哈希表,47,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,删除,插入,47,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,删除,时间复杂度,47,64,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,删除,数据元素,47,32,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,删除,哈希函数,47,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,查找,哈希表,44,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,查找,插入,44,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,查找,时间复杂度,44,64,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,查找,数据元素,44,32,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,查找,哈希函数,44,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,哈希表,插入,0,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,哈希表,时间复杂度,0,64,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,哈希表,数据元素,0,32,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,哈希表,哈希函数,0,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,插入,时间复杂度,41,64,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,插入,数据元素,41,32,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,插入,哈希函数,41,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,时间复杂度,数据元素,64,32,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,时间复杂度,哈希函数,64,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据元素使得数据的插入、查找和删除操作在平均情况下具有接近常数的时间复杂度,数据元素,哈希函数,32,13,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,查找,遍历,56,45,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,查找,查找,56,39,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,查找,线性表,56,6,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,查找,顺序查找,56,0,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,遍历,查找,45,39,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,遍历,线性表,45,6,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,遍历,顺序查找,45,0,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,查找,线性表,39,6,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,查找,顺序查找,39,0,CON,CON
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到相等元素则查找成功，若遍历完整个表仍未找到则查找失败,线性表,顺序查找,6,0,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,循环链表,59,0,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,遍历,59,48,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,链表,59,10,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,尾节点,59,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,指针,59,62,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,指针,59,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,链表,59,42,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,链表,59,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,头节点,59,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,遍历,0,48,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,链表,0,10,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,尾节点,0,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,指针,0,62,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,指针,0,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,链表,0,42,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,链表,0,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,循环链表,头节点,0,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,遍历,链表,48,10,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,遍历,尾节点,48,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,遍历,指针,48,62,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,遍历,指针,48,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,遍历,链表,48,42,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,遍历,链表,48,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,遍历,头节点,48,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,尾节点,10,17,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,指针,10,62,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,指针,10,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,链表,10,42,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,链表,10,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,头节点,10,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,指针,17,62,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,指针,17,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,链表,17,42,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,链表,17,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,尾节点,头节点,17,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,指针,指针,62,21,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,指针,链表,62,42,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,指针,链表,62,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,指针,头节点,62,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,指针,链表,21,42,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,指针,链表,21,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,指针,头节点,21,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,链表,42,56,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,头节点,42,25,CON,CON
循环链表是一种特殊的链表，其特点是尾节点的指针指向头节点，从而形成一个环形结构，使得链表可以循环遍历，不存在常规链表中尾节点指针为空的,链表,头节点,56,25,CON,CON
对于给定的某个排序算法，若存在两个相等的元素，在排序前后它们的相对位置保持不变，则该排序算法具有稳定性,排序,排序,42,7,CON,CON
对于给定的某个排序算法，若存在两个相等的元素，在排序前后它们的相对位置保持不变，则该排序算法具有稳定性,排序,稳定性,42,48,CON,CON
对于给定的某个排序算法，若存在两个相等的元素，在排序前后它们的相对位置保持不变，则该排序算法具有稳定性,排序,排序,42,24,CON,CON
对于给定的某个排序算法，若存在两个相等的元素，在排序前后它们的相对位置保持不变，则该排序算法具有稳定性,排序,稳定性,7,48,CON,CON
对于给定的某个排序算法，若存在两个相等的元素，在排序前后它们的相对位置保持不变，则该排序算法具有稳定性,排序,排序,7,24,CON,CON
对于给定的某个排序算法，若存在两个相等的元素，在排序前后它们的相对位置保持不变，则该排序算法具有稳定性,稳定性,排序,48,24,CON,CON
父节点的核心特征是在树形结构中，处于较高层级且与其他节点存在特定关联关系，能够直接衍生出子节点，对整个树形结构的层次和关系起到关键,子节点,父节点,44,0,CON,CON
连通图的核心性质是图中任意两个顶点之间都存在路径相连,连通图,路径,0,22,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,遍历,38,24,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,38,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,38,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,38,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,38,49,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,遍历,回路,24,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,遍历,回路,24,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,遍历,回路,24,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,遍历,回路,24,49,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,9,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,9,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,9,49,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,0,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,0,49,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点，且回路中各边不重复，同时回路的长度大于等于 3,回路,回路,20,49,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,树的节点,根节点,0,36,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,树的节点,根节点,0,31,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,树的节点,子节点,0,20,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,树的节点,父节点,0,50,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,根节点,根节点,36,31,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,根节点,子节点,36,20,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,根节点,父节点,36,50,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,根节点,子节点,31,20,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,根节点,父节点,31,50,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点，且有一个特定的根节点，除根节点外每个节点有且仅有一个父节点,子节点,父节点,20,50,CON,CON
邻接表是用链表存储图中顶点及与其相邻顶点关系的数据结构,链表,邻接表,5,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，从而支持双向遍历,链表,指针,7,31,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，从而支持双向遍历,链表,遍历,7,55,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，从而支持双向遍历,链表,双向链表,7,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，从而支持双向遍历,指针,遍历,31,55,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，从而支持双向遍历,指针,双向链表,31,0,CON,CON
双向链表是一种链表结构，其每个节点除了包含数据域外，还包含两个指针分别指向前一个节点和后一个节点，从而支持双向遍历,遍历,双向链表,55,0,CON,CON
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直到找到目标节点或遍历完所有节点的搜索算法,遍历,广度优先搜索,51,0,CON,CON
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直到找到目标节点或遍历完所有节点的搜索算法,遍历,访问,51,23,CON,CON
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直到找到目标节点或遍历完所有节点的搜索算法,遍历,访问,51,29,CON,CON
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直到找到目标节点或遍历完所有节点的搜索算法,广度优先搜索,访问,0,23,CON,CON
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直到找到目标节点或遍历完所有节点的搜索算法,广度优先搜索,访问,0,29,CON,CON
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直到找到目标节点或遍历完所有节点的搜索算法,访问,访问,23,29,CON,CON
顺序查找是从数据序列开头依次逐个查找目标元素,查找,顺序查找,16,0,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯,路径,深度优先搜索,38,0,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯,路径,遍历,38,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯,深度优先搜索,遍历,0,11,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，从而直观地反映图,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，从而直观地反映图,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，从而直观地反映图,链表,图,32,63,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，从而直观地反映图,邻接表,链表,0,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，从而直观地反映图,邻接表,图,0,63,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点创建一个链表，链表中的每个节点表示与该顶点相邻接的顶点，从而直观地反映图,链表,图,35,63,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、时间等信息，图中顶点之间通过带权重的边,图,加权图,6,0,CON,CON
子节点是树结构中相对于父节点而言，直接连接在父节点之下的节点，具有与父节点存在直接层级关联且处于较低层级这一核心特征,父节点,父节点,22,34,CON,CON
子节点是树结构中相对于父节点而言，直接连接在父节点之下的节点，具有与父节点存在直接层级关联且处于较低层级这一核心特征,父节点,父节点,22,11,CON,CON
子节点是树结构中相对于父节点而言，直接连接在父节点之下的节点，具有与父节点存在直接层级关联且处于较低层级这一核心特征,父节点,子节点,22,0,CON,CON
子节点是树结构中相对于父节点而言，直接连接在父节点之下的节点，具有与父节点存在直接层级关联且处于较低层级这一核心特征,父节点,父节点,34,11,CON,CON
子节点是树结构中相对于父节点而言，直接连接在父节点之下的节点，具有与父节点存在直接层级关联且处于较低层级这一核心特征,父节点,子节点,34,0,CON,CON
子节点是树结构中相对于父节点而言，直接连接在父节点之下的节点，具有与父节点存在直接层级关联且处于较低层级这一核心特征,父节点,子节点,11,0,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
在图论中，回路是指从图中某一顶点出发，沿着边连续移动，经过若干个不同顶点后又回到起始顶点的路径,回路,路径,5,45,CON,CON
哈希表通过哈希函数将键映射到地址以快速存取数据,哈希函数,哈希表,5,0,CON,CON
哈希表通过哈希函数将键映射到地址以快速存取数据,哈希函数,映射,5,11,CON,CON
哈希表通过哈希函数将键映射到地址以快速存取数据,哈希表,映射,0,11,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称v和w是连通的，且路径长度是路径,路径,路径,36,55,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称v和w是连通的，且路径长度是路径,路径,路径,36,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称v和w是连通的，且路径长度是路径,路径,路径,36,50,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称v和w是连通的，且路径长度是路径,路径,路径,55,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称v和w是连通的，且路径长度是路径,路径,路径,55,50,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列，若存在从顶点v到顶点w的一条路径，则称v和w是连通的，且路径长度是路径,路径,路径,0,50,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归,44,65,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归,44,5,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归,44,33,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归基础,44,0,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归,65,5,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归,65,33,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归基础,65,0,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归,5,33,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归基础,5,0,CON,CON
递归基础是递归定义中的初始情况，明确规定了最简单或最基本的实例，是递归定义得以开始和后续递归展开的基础，具有明确的初始值或条件作为递归,递归,递归基础,33,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点,链表,邻接表,35,0,CON,CON
数据的物理结构是数据在计算机中的存储表示，包括数据元素的存储方式以及数据元素之间关系的存储方式,物理结构,数据元素,3,23,CON,CON
数据的物理结构是数据在计算机中的存储表示，包括数据元素的存储方式以及数据元素之间关系的存储方式,物理结构,数据元素,3,34,CON,CON
数据的物理结构是数据在计算机中的存储表示，包括数据元素的存储方式以及数据元素之间关系的存储方式,数据元素,数据元素,23,34,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心特征为数据元素之间有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且,线性结构,数据元素,0,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心特征为数据元素之间有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且,线性结构,数据元素,0,34,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其核心特征为数据元素之间有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且,数据元素,数据元素,7,34,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,集合,访问,19,44,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,集合,数组,19,0,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,集合,数据元素,19,14,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,集合,数据类型,19,7,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,访问,数组,44,0,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,访问,数据元素,44,14,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,访问,数据类型,44,7,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,数组,数据元素,0,14,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,数组,数据类型,0,7,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标唯一地访问每个元素,数据元素,数据类型,14,7,CON,CON
比较排序是基于元素间比较来确定元素之间的相对次序从而将给定序列重新排列成有序序列的排序算法,排序,比较排序,41,0,CON,CON
栈是一种后进先出的数据结构，其核心性质为元素按照后进先出的顺序进行入栈和出栈操作,出栈,入栈,36,33,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是算法简单但平均查找长度较大时间,查找,查找,2,61,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是算法简单但平均查找长度较大时间,查找,遍历,2,38,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是算法简单但平均查找长度较大时间,查找,查找,2,46,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是算法简单但平均查找长度较大时间,查找,遍历,61,38,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是算法简单但平均查找长度较大时间,查找,查找,61,46,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方法其特点是算法简单但平均查找长度较大时间,遍历,查找,38,46,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,哈希函数,映射,11,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,哈希函数,插入,11,50,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,哈希函数,查找,11,53,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,哈希函数,哈希表,11,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,哈希函数,删除,11,56,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,映射,插入,17,50,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,映射,查找,17,53,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,映射,哈希表,17,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,映射,删除,17,56,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,插入,查找,50,53,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,插入,哈希表,50,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,插入,删除,50,56,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,查找,哈希表,53,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,查找,删除,53,56,CON,CON
哈希表的核心特征是通过哈希函数将键映射为哈希值，并依据该哈希值来确定数据在表中的存储位置，使得数据的插入、查找和删除操作能在,哈希表,删除,0,56,CON,CON
递归基础是递归算法中最简单情况的定义，通常是当问题规模减小到一定程度时可直接得出答案无需进一步递归调用的情况,递归,递归,47,5,CON,CON
递归基础是递归算法中最简单情况的定义，通常是当问题规模减小到一定程度时可直接得出答案无需进一步递归调用的情况,递归,递归基础,47,0,CON,CON
递归基础是递归算法中最简单情况的定义，通常是当问题规模减小到一定程度时可直接得出答案无需进一步递归调用的情况,递归,递归基础,5,0,CON,CON
指针是存储变量内存地址并能通过它访问变量的变量,访问,指针,16,0,CON,CON
树的查找的核心特征是基于树的结构特性，通过特定的遍历方式从根节点开始沿着树枝逐步搜索目标节点，利用节点之间的层次关系和连接信息以提高,查找,根节点,2,29,CON,CON
树的查找的核心特征是基于树的结构特性，通过特定的遍历方式从根节点开始沿着树枝逐步搜索目标节点，利用节点之间的层次关系和连接信息以提高,查找,遍历,2,24,CON,CON
树的查找的核心特征是基于树的结构特性，通过特定的遍历方式从根节点开始沿着树枝逐步搜索目标节点，利用节点之间的层次关系和连接信息以提高,根节点,遍历,29,24,CON,CON
操作效率是指在数据结构的各种操作（如插入、删除、查找等）中，完成这些操作所需要的时间、空间等资源的消耗情况以及与问题规模之间,插入,操作效率,18,0,CON,CON
操作效率是指在数据结构的各种操作（如插入、删除、查找等）中，完成这些操作所需要的时间、空间等资源的消耗情况以及与问题规模之间,插入,删除,18,21,CON,CON
操作效率是指在数据结构的各种操作（如插入、删除、查找等）中，完成这些操作所需要的时间、空间等资源的消耗情况以及与问题规模之间,插入,查找,18,24,CON,CON
操作效率是指在数据结构的各种操作（如插入、删除、查找等）中，完成这些操作所需要的时间、空间等资源的消耗情况以及与问题规模之间,操作效率,删除,0,21,CON,CON
操作效率是指在数据结构的各种操作（如插入、删除、查找等）中，完成这些操作所需要的时间、空间等资源的消耗情况以及与问题规模之间,操作效率,查找,0,24,CON,CON
操作效率是指在数据结构的各种操作（如插入、删除、查找等）中，完成这些操作所需要的时间、空间等资源的消耗情况以及与问题规模之间,删除,查找,21,24,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,根节点,路径,6,18,CON,CON
树的高度是从根节点到最远叶节点的最长路径长度,树的高度,路径,0,18,CON,CON
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树,二叉树,子节点,35,13,CON,CON
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树,二叉树,满二叉树,35,0,CON,CON
满二叉树是除最后一层无任何子节点外，每一层上的所有结点都有两个子结点的二叉树,子节点,满二叉树,13,0,CON,CON
稳定性是指在数据结构中，对于相等的元素，在排序前后它们的相对位置保持不变的性质,排序,稳定性,21,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,查找,数组,34,10,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,查找,查找,34,56,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,查找,查找,34,25,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,查找,二分查找,34,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,数组,查找,10,56,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,数组,查找,10,25,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,数组,二分查找,10,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,查找,查找,56,25,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,查找,二分查找,56,0,CON,CON
二分查找是一种在有序数组中通过不断将区间缩小一半来查找特定元素，具有查找效率较高、每次比较能排除一半元素等特点的查找算法,查找,二分查找,25,0,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,满二叉树,二叉树,0,24,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入,20,16,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,12,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,33,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,20,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,12,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,33,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,插入排序,16,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,12,33,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,12,0,CON,CON
插入排序的核心特征是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,33,0,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,双向链表,27,0,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,后继节点,27,45,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,指针,27,55,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,前驱节点,27,35,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,后继节点,0,45,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,指针,0,55,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,双向链表,前驱节点,0,35,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,后继节点,指针,45,55,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,后继节点,前驱节点,45,35,CON,CON
双向链表的核心性质是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，另一个指向后继节点，通过这两个指针可以在两个方向上,指针,前驱节点,55,35,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,双向链表,14,0,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,链表,14,17,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,双向链表,链表,0,17,CON,CON
顺序表是一种线性表，其核心性质为用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻,线性表,数据元素,32,37,CON,CON
顺序表是一种线性表，其核心性质为用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻,线性表,数据元素,32,50,CON,CON
顺序表是一种线性表，其核心性质为用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻,线性表,线性表,32,6,CON,CON
顺序表是一种线性表，其核心性质为用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻,数据元素,数据元素,37,50,CON,CON
顺序表是一种线性表，其核心性质为用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻,数据元素,线性表,37,6,CON,CON
顺序表是一种线性表，其核心性质为用一组地址连续的存储单元依次存储线性表中的数据元素，使得逻辑上相邻的数据元素在物理存储位置上也相邻,数据元素,线性表,50,6,CON,CON
堆是一种特殊的数据结构，它满足父节点的键值大于或小于其子节点的键值（大顶堆或小顶堆），且具有完全二叉树的性质,父节点,完全二叉树,15,46,CON,CON
深度为k有n个结点的二叉树，若与同层满二叉树对应结点位置相同,二叉树,满二叉树,10,18,CON,CON
递归基础是递归函数中最简单无需再递归的终止条件,递归,递归基础,16,0,CON,CON
交换排序是通过元素交换位置来实现排序的方法,排序,交换排序,16,0,CON,CON
加权图是一种图结构，其中图的每条边都被赋予一个数值作为权重，这些权重可以表示诸如距离、成本、容量等具有实际意义的量,图,加权图,6,0,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,集合,访问,19,43,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,集合,数组,19,0,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,集合,数据元素,19,14,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,集合,数据类型,19,7,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,访问,数组,43,0,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,访问,数据元素,43,14,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,访问,数据类型,43,7,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,数组,数据元素,0,14,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,数组,数据类型,0,7,CON,CON
数组是具有相同数据类型的一组数据元素的集合，这些元素在内存中按顺序存储，可通过下标进行访问,数据元素,数据类型,14,7,CON,CON
存储结构的特点的核心性质包括数据元素在计算机内存中的存储方式以及它们之间的逻辑关系如何通过物理存储来体现 数据元素的存储位置反映其逻辑关系 且,数据元素,存储结构,14,0,CON,CON
存储结构的特点的核心性质包括数据元素在计算机内存中的存储方式以及它们之间的逻辑关系如何通过物理存储来体现 数据元素的存储位置反映其逻辑关系 且,数据元素,数据元素,14,53,CON,CON
存储结构的特点的核心性质包括数据元素在计算机内存中的存储方式以及它们之间的逻辑关系如何通过物理存储来体现 数据元素的存储位置反映其逻辑关系 且,存储结构,数据元素,0,53,CON,CON
回溯法基础特点是按条件深度优先搜索并适时回溯,回溯法,深度优先搜索,0,11,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,线性表,访问,11,48,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,线性表,链表,11,50,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,线性表,指针,11,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,线性表,头节点,11,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,线性表,指针,11,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,访问,链表,48,50,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,访问,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,访问,指针,48,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,访问,头节点,48,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,访问,指针,48,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,链表,单链表,50,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,链表,指针,50,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,链表,头节点,50,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,链表,指针,50,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,单链表,指针,0,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,单链表,头节点,0,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,单链表,指针,0,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,指针,头节点,29,42,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,指针,指针,29,25,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据域和指针域，指针域指向下一个节点，通过头节点可依次访问链表中的各个节点，其特点是,头节点,指针,42,25,CON,CON
叶子节点是树结构中没有子节点的末端节点,叶子节点,子节点,0,11,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
二叉搜索树的特点是每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,右子树,左子树,31,18,CON,CON
二叉搜索树的特点是每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,右子树,二叉搜索树,31,0,CON,CON
二叉搜索树的特点是每个节点的值大于其左子树所有节点的值且小于其右子树所有节点的值,左子树,二叉搜索树,18,0,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个序列都未找到匹配,查找,遍历,33,55,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个序列都未找到匹配,查找,顺序查找,33,0,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个将元素与要查找的关键字进行比较，直到找到匹配的元素或者遍历完整个序列都未找到匹配,遍历,顺序查找,55,0,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循先进后出原则,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循先进后出原则,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，遵循先进后出原则,删除,插入,14,11,CON,CON
树的查找是在给定的树结构中，按照特定规则从根节点开始，通过比较节点值等方式确定是否存在特定目标元素以及其所在位置的操作过程,根节点,查找,21,2,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构,线性结构,数据元素,0,7,CON,CON
叶子节点没有子节点,叶子节点,子节点,0,6,CON,CON
单链表的核心特征是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，且除了最后一个节点,指针,数据元素,32,17,CON,CON
单链表的核心特征是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，且除了最后一个节点,指针,指针,32,39,CON,CON
单链表的核心特征是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，且除了最后一个节点,指针,单链表,32,0,CON,CON
单链表的核心特征是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，且除了最后一个节点,数据元素,指针,17,39,CON,CON
单链表的核心特征是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，且除了最后一个节点,数据元素,单链表,17,0,CON,CON
单链表的核心特征是每个节点包含一个数据元素和一个指向下一个节点的指针，通过这些指针将各个节点依次连接起来形成线性序列，且除了最后一个节点,指针,单链表,39,0,CON,CON
指针的核心性质是其存储的是变量的内存地址，通过该地址可以直接访问和操作对应变量所存储的数据,指针,访问,0,30,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括从起始节点开始，每次选择一个,深度优先搜索,路径,0,46,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括从起始节点开始，每次选择一个,深度优先搜索,路径,0,10,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括从起始节点开始，每次选择一个,路径,路径,46,10,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的数值计算方法,迭代法,迭代,0,24,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点，从而以一种链表形式直观地表示图中,邻接表,链表,0,27,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点，从而以一种链表形式直观地表示图中,邻接表,链表,0,50,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点，从而以一种链表形式直观地表示图中,邻接表,单链表,0,23,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点，从而以一种链表形式直观地表示图中,链表,链表,27,50,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点，从而以一种链表形式直观地表示图中,链表,单链表,27,23,CON,CON
邻接表的核心特征是通过为图中的每个顶点建立一个单链表，链表中存储与该顶点相邻接的其他顶点，从而以一种链表形式直观地表示图中,链表,单链表,50,23,CON,CON
堆是一种特殊的数据结构，其核心特征为：它是一个完全二叉树，并且每个节点的值都大于或等于其子节点的值（最大堆），或者每个节点的值都,完全二叉树,堆,23,52,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,二叉树,平衡二叉树,23,0,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,二叉树,平衡二叉树,23,38,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,二叉树,右子树,23,33,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,二叉树,左子树,23,29,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,二叉树,左子树,23,45,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,二叉树,右子树,23,49,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,平衡二叉树,0,38,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,右子树,0,33,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,左子树,0,29,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,左子树,0,45,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,右子树,0,49,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,右子树,38,33,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,左子树,38,29,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,左子树,38,45,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,平衡二叉树,右子树,38,49,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,右子树,左子树,33,29,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,右子树,左子树,33,45,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,右子树,右子树,33,49,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,左子树,左子树,29,45,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,左子树,右子树,29,49,CON,CON
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,左子树,右子树,45,49,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,线性表,数据元素,11,21,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,线性表,指针,11,34,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,线性表,指针,11,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,线性表,后继节点,11,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,数据元素,指针,21,34,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,数据元素,单链表,21,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,数据元素,指针,21,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,数据元素,后继节点,21,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,指针,单链表,34,0,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,指针,指针,34,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,指针,后继节点,34,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,单链表,指针,0,39,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,单链表,后继节点,0,29,CON,CON
单链表是一种链式存储的线性表，每个节点包含数据元素以及指向后继节点的指针，通过指针将各个节点依次连接起来，其特点是逻辑上相邻的元素在,指针,后继节点,39,29,CON,CON
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式逐步逼近问题精确解的方法，其核心性质是利用前一步的计算结果来生成下一步的近似解,迭代法,迭代,0,23,CON,CON
存储结构的特点的核心性质包括数据元素在计算机内存中的存储方式以及它们之间的逻辑关系的表示方法 ，并且涉及到如何通过特定的存储布局来高效地进行,数据元素,存储结构,14,0,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心特征是选择一个基准值，将数组分为两部分，小于基准值的元素在左边，大于基准值的元素,数组,排序,8,12,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心特征是选择一个基准值，将数组分为两部分，小于基准值的元素在左边，大于基准值的元素,数组,数组,8,35,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心特征是选择一个基准值，将数组分为两部分，小于基准值的元素在左边，大于基准值的元素,数组,快速排序,8,0,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心特征是选择一个基准值，将数组分为两部分，小于基准值的元素在左边，大于基准值的元素,排序,数组,12,35,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心特征是选择一个基准值，将数组分为两部分，小于基准值的元素在左边，大于基准值的元素,排序,快速排序,12,0,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心特征是选择一个基准值，将数组分为两部分，小于基准值的元素在左边，大于基准值的元素,数组,快速排序,35,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该内存地址所存储的数据,指针,访问,0,30,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，且右子树中的所有节点的值均大于该节点的值,二叉树,右子树,8,39,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，且右子树中的所有节点的值均大于该节点的值,二叉树,二叉搜索树,8,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，且右子树中的所有节点的值均大于该节点的值,二叉树,左子树,8,18,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，且右子树中的所有节点的值均大于该节点的值,右子树,二叉搜索树,39,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，且右子树中的所有节点的值均大于该节点的值,右子树,左子树,39,18,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，且右子树中的所有节点的值均大于该节点的值,二叉搜索树,左子树,0,18,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,访问,访问,38,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,访问,广度优先搜索,38,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,访问,队列,38,49,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,访问,访问,38,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,访问,广度优先搜索,15,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,访问,队列,15,49,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,访问,访问,15,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,广度优先搜索,队列,0,49,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,广度优先搜索,访问,0,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再逐渐访问距离更远节点，通过队列来辅助实现，能保证找到从起始节点,队列,访问,49,21,CON,CON
树的节点是包含数据及指向子节点的指针的基本数据结构单元,子节点,指针,12,16,CON,CON
树的节点是包含数据及指向子节点的指针的基本数据结构单元,子节点,树的节点,12,0,CON,CON
树的节点是包含数据及指向子节点的指针的基本数据结构单元,指针,树的节点,16,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，且左右,二叉树,右子树,8,38,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，且左右,二叉树,左子树,8,18,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，且左右,二叉树,二叉搜索树,8,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，且左右,右子树,左子树,38,18,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，且左右,右子树,二叉搜索树,38,0,CON,CON
二叉搜索树是一种二叉树，其每个节点的左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，且左右,左子树,二叉搜索树,18,0,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，搜索至解空间树的任一,树,回溯法,47,0,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，搜索至解空间树的任一,树,根节点,47,37,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，搜索至解空间树的任一,树,深度优先搜索,47,27,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，搜索至解空间树的任一,回溯法,根节点,0,37,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，搜索至解空间树的任一,回溯法,深度优先搜索,0,27,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，搜索至解空间树的任一,根节点,深度优先搜索,37,27,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，不断,路径,深度优先搜索,63,0,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，不断,路径,路径,63,24,CON,CON
深度优先搜索的核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯到前一步，继续探索其他路径，不断,深度优先搜索,路径,0,24,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆排序,堆,0,26,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆排序,排序,0,59,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆排序,堆,0,46,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆,排序,26,59,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆,堆,26,46,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆,堆,26,8,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,排序,堆,59,46,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,排序,堆,59,8,CON,CON
堆排序是一种基于堆这种数据结构，通过构建最大堆或最小堆，不断将堆顶元素与堆末尾元素交换并调整堆，从而实现对数据序列进行排序的,堆,堆,46,8,CON,CON
递归基础是递归算法中当问题规模小到一定程度时可直接得出结果无需再进行递归调用的初始条件或终止情况,递归,递归,34,5,CON,CON
递归基础是递归算法中当问题规模小到一定程度时可直接得出结果无需再进行递归调用的初始条件或终止情况,递归,递归基础,34,0,CON,CON
递归基础是递归算法中当问题规模小到一定程度时可直接得出结果无需再进行递归调用的初始条件或终止情况,递归,递归基础,5,0,CON,CON
树的节点是包含数据及指向子节点的指针等相关信息的结构单元,子节点,指针,12,16,CON,CON
树的节点是包含数据及指向子节点的指针等相关信息的结构单元,子节点,树的节点,12,0,CON,CON
树的节点是包含数据及指向子节点的指针等相关信息的结构单元,指针,树的节点,16,0,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,指针,头节点,38,67,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,指针,单链表,38,0,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,指针,数据元素,38,17,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,指针,指针,38,33,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,头节点,单链表,67,0,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,头节点,数据元素,67,17,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,头节点,指针,67,33,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,单链表,数据元素,0,17,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,单链表,指针,0,33,CON,CON
单链表的核心性质是每个节点包含一个数据元素以及一个指向下一个节点的指针，通过指针依次连接各个节点形成线性序列，其中第一个节点无前驱称为头节点，,数据元素,指针,17,33,CON,CON
回路的核心特征是从图中某一顶点出发，沿着边依次访问若干顶点后又回到该起始顶点，所经过的路径中除起始顶点可重复外其余顶点均,访问,回路,23,0,CON,CON
回路的核心特征是从图中某一顶点出发，沿着边依次访问若干顶点后又回到该起始顶点，所经过的路径中除起始顶点可重复外其余顶点均,访问,路径,23,43,CON,CON
回路的核心特征是从图中某一顶点出发，沿着边依次访问若干顶点后又回到该起始顶点，所经过的路径中除起始顶点可重复外其余顶点均,回路,路径,0,43,CON,CON
完全二叉树是这样一种二叉树，除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点,二叉树,完全二叉树,10,0,CON,CON
根节点是树结构中位于顶端无父节点的起始节点,父节点,根节点,13,0,CON,CON
引用是一个已定义变量的别名，对引用的操作等同于对其引用的变量的操作，其核心性质包括：引用必须在定义时初始化且初始化后不能再引用其他,初始化,初始化,50,54,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示这条边的某种代价、成本、距离或其他相关度量，可用于在图的,图,加权图,6,0,CON,CON
堆排序是利用堆结构特性进行排序的算法,排序,堆排序,13,0,CON,CON
堆排序是利用堆结构特性进行排序的算法,排序,堆,13,6,CON,CON
堆排序是利用堆结构特性进行排序的算法,堆排序,堆,0,6,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,叶子节点,22,38,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,满二叉树,22,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,二叉树,22,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,子节点,22,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,满二叉树,38,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,二叉树,38,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,子节点,38,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,二叉树,0,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,子节点,0,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,二叉树,子节点,7,30,CON,CON
回溯法是按选优条件深度优先搜索解空间树找可行解,回溯法,深度优先搜索,0,9,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,集合,树,47,55,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,集合,根节点,47,21,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,集合,集合,47,59,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,集合,集合,47,42,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,树,根节点,55,21,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,树,集合,55,59,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,树,集合,55,42,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,根节点,集合,21,59,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,根节点,集合,21,42,CON,CON
树的核心特征是有且仅有一个特定的节点被称为根节点，其余节点被分成若干个互不相交的有限集合，每个集合本身又是一棵树，这些集合被称为该,集合,集合,59,42,CON,CON
确定性是指对于一个给定的集合，任何一个对象是否属于这个集合是明确的,集合,集合,12,27,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重用于表示边的某种属性或代价等，边和其对应的权重共同构成加权图的,图,加权图,6,59,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重用于表示边的某种属性或代价等，边和其对应的权重共同构成加权图的,图,加权图,6,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个数值作为权重，这些权重用于表示边的某种属性或代价等，边和其对应的权重共同构成加权图的,加权图,加权图,59,0,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,删除,插入,14,11,CON,CON
交换排序通过比较交换元素位置来实现排序,排序,交换排序,17,0,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，并且可以通过下标来访问和操作这些元素,数组,数据类型,0,23,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，并且可以通过下标来访问和操作这些元素,数组,访问,0,37,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，并且可以通过下标来访问和操作这些元素,数组,集合,0,10,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，并且可以通过下标来访问和操作这些元素,数据类型,访问,23,37,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，并且可以通过下标来访问和操作这些元素,数据类型,集合,23,10,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，并且可以通过下标来访问和操作这些元素,访问,集合,37,10,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,27,58,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,数据元素,27,21,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,27,48,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,27,2,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,数据元素,58,21,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,58,48,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,58,2,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,数据元素,遍历,21,48,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,数据元素,查找,21,2,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,遍历,查找,48,2,CON,CON
比较排序的核心特征是通过元素之间的比较来确定元素的相对顺序从而实现排序，其时间复杂度下限为O(n log n)，这意味着在最坏情况下，任何基于,时间复杂度,排序,37,33,CON,CON
比较排序的核心特征是通过元素之间的比较来确定元素的相对顺序从而实现排序，其时间复杂度下限为O(n log n)，这意味着在最坏情况下，任何基于,时间复杂度,比较排序,37,0,CON,CON
比较排序的核心特征是通过元素之间的比较来确定元素的相对顺序从而实现排序，其时间复杂度下限为O(n log n)，这意味着在最坏情况下，任何基于,排序,比较排序,33,0,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,树的高度,36,10,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,36,0,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,36,30,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树的高度,平衡二叉树,10,0,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树的高度,子树,10,30,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,0,30,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而进行排序的排序算法,排序,排序,29,26,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而进行排序的排序算法,排序,比较排序,29,0,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而进行排序的排序算法,排序,比较排序,26,0,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示，它具体体现为数据元素在存储器中的存储位置以及数据元素之间逻辑关系,物理结构,数据元素,3,24,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示，它具体体现为数据元素在存储器中的存储位置以及数据元素之间逻辑关系,物理结构,数据元素,3,61,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示，它具体体现为数据元素在存储器中的存储位置以及数据元素之间逻辑关系,物理结构,数据元素,3,45,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示，它具体体现为数据元素在存储器中的存储位置以及数据元素之间逻辑关系,数据元素,数据元素,24,61,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示，它具体体现为数据元素在存储器中的存储位置以及数据元素之间逻辑关系,数据元素,数据元素,24,45,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储及其关系的表示，它具体体现为数据元素在存储器中的存储位置以及数据元素之间逻辑关系,数据元素,数据元素,61,45,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,后继节点,链表,48,7,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,后继节点,指针,48,31,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,后继节点,前驱节点,48,39,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,后继节点,指针,48,57,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,后继节点,双向链表,48,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,链表,指针,7,31,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,链表,前驱节点,7,39,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,链表,指针,7,57,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,指针,前驱节点,31,39,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,指针,指针,31,57,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,指针,双向链表,31,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,前驱节点,指针,39,57,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,前驱节点,双向链表,39,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外，还有两个指针域，一个指向前驱节点，一个指向后继节点，通过这些指针可以在两个方向上,指针,双向链表,57,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正确开始和终止的关键，通过定义初始条件或边界情况使得,递归,递归,5,21,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正确开始和终止的关键，通过定义初始条件或边界情况使得,递归,递归,5,38,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正确开始和终止的关键，通过定义初始条件或边界情况使得,递归,递归基础,5,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正确开始和终止的关键，通过定义初始条件或边界情况使得,递归,递归,21,38,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正确开始和终止的关键，通过定义初始条件或边界情况使得,递归,递归基础,21,0,CON,CON
递归基础是递归定义中的一部分，它明确规定了递归过程中最简单、最基本的情况，是递归能够正确开始和终止的关键，通过定义初始条件或边界情况使得,递归,递归基础,38,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是整个树的起始点，其他所有节点都直接或间接连接到根节点,根节点,父节点,47,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是整个树的起始点，其他所有节点都直接或间接连接到根节点,根节点,根节点,47,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是整个树的起始点，其他所有节点都直接或间接连接到根节点,父节点,根节点,19,0,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,右子树,9,28,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,根节点,9,22,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,二叉搜索树,9,0,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,子树,9,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,根节点,9,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,左子树,二叉搜索树,9,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,根节点,28,22,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,二叉搜索树,28,0,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,子树,28,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,根节点,28,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,右子树,二叉搜索树,28,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,二叉搜索树,22,0,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,子树,22,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,根节点,22,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,二叉搜索树,22,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,二叉搜索树,子树,0,50,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,二叉搜索树,根节点,0,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,二叉搜索树,二叉搜索树,0,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,子树,根节点,50,41,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,子树,二叉搜索树,50,56,CON,CON
二叉搜索树的特点是左子树上所有节点的值均小于根节点的值，右子树上所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索树,根节点,二叉搜索树,41,56,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,根节点,父节点,9,28,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,根节点,根节点,9,14,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,根节点,子节点,9,44,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,根节点,树的节点,9,0,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,父节点,根节点,28,14,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,父节点,子节点,28,44,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,父节点,树的节点,28,0,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,根节点,子节点,14,44,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,根节点,树的节点,14,0,CON,CON
树的节点具有唯一的根节点，除根节点外每个节点有且仅有一个父节点，每个节点可以有零个或多个子节点,子节点,树的节点,44,0,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机，仅考虑数据元素之间的逻辑关系,逻辑结构,数据元素,3,41,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机，仅考虑数据元素之间的逻辑关系,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它与数据的存储无关，独立于计算机，仅考虑数据元素之间的逻辑关系,数据元素,数据元素,41,9,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,时间复杂度,19,53,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,插入,19,60,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,查找,19,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,删除,19,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,插入,53,60,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,哈希表,53,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,查找,53,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,删除,53,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,时间复杂度,哈希函数,53,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,哈希表,60,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,查找,60,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,删除,60,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,插入,哈希函数,60,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,查找,0,65,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,删除,0,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,哈希表,哈希函数,0,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,查找,删除,65,62,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,查找,哈希函数,65,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据其核心特征是能在平均情况下以接近常数的时间复杂度进行插入删除和查找,删除,哈希函数,62,13,CON,CON
深度优先搜索沿一条路径深入探索直到无法继续再回溯,深度优先搜索,路径,0,9,CON,CON
加权图的核心性质是图中每条边都被赋予一个数值权重，这些权重用于表示边的某种属性或代价等，不同边的权重值可以不同，并且权重在,加权图,边的权重,0,46,CON,CON
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直到找到目标节点或遍历完所有可达节点,广度优先搜索,访问,0,34,CON,CON
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直到找到目标节点或遍历完所有可达节点,广度优先搜索,遍历,0,57,CON,CON
广度优先搜索的核心特征是以起始节点为中心，按照层次依次扩展节点，优先访问距离起始节点较近的节点，直到找到目标节点或遍历完所有可达节点,访问,遍历,34,57,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,插入,数组,36,30,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,插入,映射,36,20,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,插入,哈希表,36,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,插入,时间复杂度,36,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,插入,删除,36,42,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,插入,哈希函数,36,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,插入,查找,36,39,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,数组,映射,30,20,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,数组,哈希表,30,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,数组,时间复杂度,30,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,数组,删除,30,42,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,数组,哈希函数,30,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,数组,查找,30,39,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,映射,哈希表,20,0,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,映射,时间复杂度,20,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,映射,删除,20,42,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,映射,哈希函数,20,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,映射,查找,20,39,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,哈希表,时间复杂度,0,49,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,哈希表,删除,0,42,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,哈希表,哈希函数,0,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,哈希表,查找,0,39,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,时间复杂度,删除,49,42,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,时间复杂度,哈希函数,49,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,时间复杂度,查找,49,39,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,删除,哈希函数,42,14,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,删除,查找,42,39,CON,CON
哈希表是一种数据结构，它通过哈希函数将键映射到一个固定大小的数组中，使得插入、查找和删除操作的平均时间复杂度为O(1)，具有,哈希函数,查找,14,39,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯,路径,深度优先搜索,38,0,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯,路径,遍历,38,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，它从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，然后回溯,深度优先搜索,遍历,0,11,CON,CON
无向图是一种图结构，其中边没有方向，任意两个顶点之间的边是双向的，即若顶点u和顶点v之间存在边，则从u到v和从,图,无向图,6,0,CON,CON
树的度是指一棵树中，其节点拥有子树的最大数目,树的度,子树,0,15,CON,CON
存储结构的核心性质是数据元素及其关系在计算机存储器中的表示方式以及如何利用这种表示方式来高效地进行数据处理和操作,存储结构,数据元素,0,10,CON,CON
对于最小堆，每个节点的值都小于或等于其子节点的值，并且堆是一种完全,堆,堆,27,4,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,二叉树,0,13,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,遍历,0,3,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,访问,0,11,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,遍历,13,3,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,二叉树,访问,13,11,CON,CON
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,遍历,访问,3,11,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包含数据元素的表示以及数据元素之间关系的表示这两个核心特征,数据元素,存储结构,38,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包含数据元素的表示以及数据元素之间关系的表示这两个核心特征,数据元素,数据元素,38,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包含数据元素的表示以及数据元素之间关系的表示这两个核心特征,数据元素,数据元素,38,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包含数据元素的表示以及数据元素之间关系的表示这两个核心特征,存储结构,数据元素,0,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包含数据元素的表示以及数据元素之间关系的表示这两个核心特征,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它包含数据元素的表示以及数据元素之间关系的表示这两个核心特征,数据元素,数据元素,29,6,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,叶子节点,22,38,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,满二叉树,22,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,二叉树,22,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,子节点,子节点,22,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,满二叉树,38,0,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,二叉树,38,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,叶子节点,子节点,38,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,二叉树,0,7,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,满二叉树,子节点,0,30,CON,CON
满二叉树是一种二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层,二叉树,子节点,7,30,CON,CON
完全二叉树是除最后一层外每层节点数满且最后层靠左排列的二叉树,完全二叉树,二叉树,0,27,CON,CON
比较排序通过元素间比较确定元素间相对次序来实现排序,排序,比较排序,23,0,CON,CON
数据类型定义的核心特征是规定了数据的取值范围以及在该数据上可进行的操作集合,数据类型,集合,0,35,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中每个元素在序列中有唯一的前驱和后继（除第一个元素无前驱，最后一个元素无后继外,数据元素,数据类型,15,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中每个元素在序列中有唯一的前驱和后继（除第一个元素无前驱，最后一个元素无后继外,数据元素,线性表,15,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，其中每个元素在序列中有唯一的前驱和后继（除第一个元素无前驱，最后一个元素无后继外,数据类型,线性表,8,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个,查找,顺序查找,25,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个,查找,遍历,25,46,CON,CON
顺序查找是从数据序列的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列，其核心特征是按顺序逐个,顺序查找,遍历,0,46,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，反映数据在组织上的一种抽象表示,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，反映数据在组织上的一种抽象表示,逻辑结构,存储结构,3,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，反映数据在组织上的一种抽象表示,数据元素,存储结构,9,28,CON,CON
线性结构中数据元素存在一对一的线性关系,线性结构,数据元素,0,5,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,遍历,19,3,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,二叉树,19,21,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,二叉树,19,0,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,遍历,19,51,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,根节点,19,43,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,访问,19,32,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,遍历,19,41,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,根节点,19,53,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,二叉树,3,21,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,二叉树,3,0,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,遍历,3,51,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,根节点,3,43,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,访问,3,32,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,遍历,3,41,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,根节点,3,53,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,二叉树,21,0,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,遍历,21,51,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,根节点,21,43,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,访问,21,32,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,遍历,21,41,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,根节点,21,53,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,遍历,0,51,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,根节点,0,43,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,访问,0,32,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,遍历,0,41,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,二叉树,根节点,0,53,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,根节点,51,43,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,访问,51,32,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,遍历,51,41,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,根节点,51,53,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,根节点,访问,43,32,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,根节点,遍历,43,41,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,根节点,根节点,43,53,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,遍历,32,41,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,访问,根节点,32,53,CON,CON
二叉树遍历的核心性质是按照某种特定顺序访问二叉树中的每个节点且仅访问一次，包括前序遍历根节点在前、中序遍历根节点在中间、后序,遍历,根节点,41,53,CON,CON
在树形数据结构中，位于树的顶部没有父节点的节点就是根节点,父节点,根节点,17,25,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
根节点是树结构中没有前驱节点的特殊节点，它处于树的起始位置，是树中所有其他节点的祖先,根节点,前驱节点,0,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,链表,尾节点,40,14,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,链表,指针,40,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,链表,头节点,40,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,链表,遍历,40,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,链表,链表,40,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,链表,循环链表,40,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,尾节点,遍历,14,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,指针,遍历,18,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,头节点,遍历,23,50,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,遍历,链表,50,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,遍历,循环链表,50,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历，没有明确的头和尾之分，,链表,循环链表,10,0,CON,CON
单链表通过节点指针依次连接，每个节点指向下一节点,指针,单链表,7,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组都被排序，较大元素会像气泡一样逐渐“浮”到数组末尾，每次,数组,排序,34,38,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组都被排序，较大元素会像气泡一样逐渐“浮”到数组末尾，每次,数组,数组,34,57,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组都被排序，较大元素会像气泡一样逐渐“浮”到数组末尾，每次,数组,冒泡排序,34,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组都被排序，较大元素会像气泡一样逐渐“浮”到数组末尾，每次,排序,数组,38,57,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组都被排序，较大元素会像气泡一样逐渐“浮”到数组末尾，每次,排序,冒泡排序,38,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组都被排序，较大元素会像气泡一样逐渐“浮”到数组末尾，每次,数组,冒泡排序,57,0,CON,CON
深度优先搜索沿一条路径深入探索直到无法继续再回溯,深度优先搜索,路径,0,9,CON,CON
每趟从未排序元素中选最小（大）值与未排序首元素交换,排序,排序,4,18,CON,CON
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，且其强调数据封装和信息隐藏，用户只能通过特定接口访问和操作,抽象数据类型,访问,0,64,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法其核心性质是利用前一步的计算结果来生成,迭代法,迭代,0,24,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括总是优先往深度方向搜索，通过,深度优先搜索,路径,0,46,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括总是优先往深度方向搜索，通过,深度优先搜索,路径,0,10,CON,CON
深度优先搜索沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索其他路径，其核心性质包括总是优先往深度方向搜索，通过,路径,路径,46,10,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将节点依次连接起来形成链表结构，其核心特征是,链表,指针,0,39,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将节点依次连接起来形成链表结构，其核心特征是,链表,指针,0,44,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将节点依次连接起来形成链表结构，其核心特征是,链表,链表,0,57,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将节点依次连接起来形成链表结构，其核心特征是,指针,指针,39,44,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将节点依次连接起来形成链表结构，其核心特征是,指针,链表,39,57,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将节点依次连接起来形成链表结构，其核心特征是,指针,链表,44,57,CON,CON
广度优先搜索按层次依次扩展节点以遍历图或树,广度优先搜索,遍历,0,16,CON,CON
归并排序的核心性质是将一个序列分成两个子序列分别排序后再合并成一个有序序列,归并排序,排序,0,24,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,集合,数组,10,41,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,集合,数组,10,0,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,集合,访问,10,33,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,集合,数据类型,10,23,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,数组,数组,41,0,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,数组,访问,41,33,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,数组,数据类型,41,23,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,数组,访问,0,33,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,数组,数据类型,0,23,CON,CON
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，数组的长度固定，在内存中存储是连续的,访问,数据类型,33,23,CON,CON
数据的物理结构是指数据在计算机中的存储方式包括数据元素的存储及其关系的表示,物理结构,数据元素,3,23,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,子节点,根节点,40,7,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,子节点,父节点,40,26,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,子节点,树的节点,40,0,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,子节点,根节点,40,12,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,根节点,父节点,7,26,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,根节点,树的节点,7,0,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,根节点,根节点,7,12,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,父节点,树的节点,26,0,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,父节点,根节点,26,12,CON,CON
树的节点有一个根节点，除根节点外每个节点有且仅有一个父节点，节点可以有零个或多个子节点，并且节点是构成树型结构的基本,树的节点,根节点,0,12,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从,路径,无向图,21,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从,路径,连通图,21,0,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从,路径,有向图,21,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从,无向图,连通图,6,0,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从,无向图,有向图,6,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从,连通图,有向图,0,27,CON,CON
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值,满二叉树,二叉树,0,22,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素本身的表示以及元素之间关系的表示，并且它决定了数据在计算机内存,物理结构,数据元素,3,8,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素本身的表示以及元素之间关系的表示，并且它决定了数据在计算机内存,物理结构,数据元素,3,36,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素本身的表示以及元素之间关系的表示，并且它决定了数据在计算机内存,数据元素,数据元素,8,36,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,根节点,父节点,46,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,根节点,根节点,46,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点,父节点,根节点,19,0,CON,CON
回路是在图中从一个顶点出发，沿着边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复出现所构成的闭合路径,路径,回路,36,0,CON,CON
回路是在图中从一个顶点出发，沿着边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复出现所构成的闭合路径,路径,路径,36,60,CON,CON
回路是在图中从一个顶点出发，沿着边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复出现所构成的闭合路径,路径,路径,36,33,CON,CON
回路是在图中从一个顶点出发，沿着边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复出现所构成的闭合路径,回路,路径,0,60,CON,CON
回路是在图中从一个顶点出发，沿着边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复出现所构成的闭合路径,回路,路径,0,33,CON,CON
回路是在图中从一个顶点出发，沿着边经过一些顶点后又回到该起始顶点的路径且路径中除起始顶点外其他顶点不重复出现所构成的闭合路径,路径,路径,60,33,CON,CON
树是一种包含根节点且具有层次结构，每个节点有零个或多个子节点的非线性数据结构,根节点,子节点,6,27,CON,CON
线性查找是按顺序逐个检查数据元素以确定目标元素的方法,查找,数据元素,2,12,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，若按层次序对其编号后，编号为i（1≤i≤n）的结点与满二叉,二叉树,完全二叉树,18,0,CON,CON
穷举法是一种通过对所有可能的情况进行逐一列举和检验，从而找到满足条件的解的方法其核心性质是在解决问题时会遍历问题的所有可能解,穷举法,遍历,0,52,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,完全二叉树,满二叉树,0,39,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点,删除,插入,43,40,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点,删除,访问,43,29,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点,删除,操作效率,43,45,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点,插入,访问,40,29,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点,插入,操作效率,40,45,CON,CON
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点,访问,操作效率,29,45,CON,CON
二分查找是在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间，直到找到目标值或确定目标值不存在的查找算法,查找,数组,41,8,CON,CON
二分查找是在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间，直到找到目标值或确定目标值不存在的查找算法,查找,查找,41,63,CON,CON
二分查找是在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间，直到找到目标值或确定目标值不存在的查找算法,查找,二分查找,41,0,CON,CON
二分查找是在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间，直到找到目标值或确定目标值不存在的查找算法,数组,查找,8,63,CON,CON
二分查找是在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间，直到找到目标值或确定目标值不存在的查找算法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中通过不断将区间分成两半并根据目标值与中间元素的比较结果来缩小查找区间，直到找到目标值或确定目标值不存在的查找算法,查找,二分查找,63,0,CON,CON
在图论中，回路是指从图中某一顶点出发，沿着边连续移动，经过若干个顶点后又回到该起始顶点且路径中各边互不相同的路径,路径,路径,44,54,CON,CON
在图论中，回路是指从图中某一顶点出发，沿着边连续移动，经过若干个顶点后又回到该起始顶点且路径中各边互不相同的路径,路径,回路,44,5,CON,CON
在图论中，回路是指从图中某一顶点出发，沿着边连续移动，经过若干个顶点后又回到该起始顶点且路径中各边互不相同的路径,路径,回路,54,5,CON,CON
树的节点是包含数据以及指向子节点的指针或引用的基本数据结构单元,树的节点,子节点,0,13,CON,CON
树的节点是包含数据以及指向子节点的指针或引用的基本数据结构单元,树的节点,指针,0,17,CON,CON
树的节点是包含数据以及指向子节点的指针或引用的基本数据结构单元,子节点,指针,13,17,CON,CON
指针是一种变量，其值为内存中另一个变量或对象的地址，通过指针可以间接访问和操作其所指向的内存位置的数据,指针,访问,28,34,CON,CON
指针是一种变量，其值为内存中另一个变量或对象的地址，通过指针可以间接访问和操作其所指向的内存位置的数据,指针,指针,28,0,CON,CON
指针是一种变量，其值为内存中另一个变量或对象的地址，通过指针可以间接访问和操作其所指向的内存位置的数据,访问,指针,34,0,CON,CON
邻接矩阵是表示图的一种方式，其特点为用二维数组来存储图中顶点之间的邻接关系，矩阵元素的值反映了对应顶点间是否有边相连及,邻接矩阵,数组,0,21,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其每一层上的节点数都达到最大值，即第i层有2^(i,满二叉树,二叉树,0,22,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,广度优先搜索,访问,0,36,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,广度优先搜索,访问,0,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,广度优先搜索,访问,0,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,访问,访问,36,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,访问,访问,36,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点较近的节点，再访问距离更远节点的搜索算法,访问,访问,21,15,CON,CON
栈具有后进先出的特点即最后入栈的元素最先出栈,栈,入栈,0,13,CON,CON
栈具有后进先出的特点即最后入栈的元素最先出栈,栈,出栈,0,20,CON,CON
栈具有后进先出的特点即最后入栈的元素最先出栈,入栈,出栈,13,20,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,堆排序,排序,0,29,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,堆排序,堆,0,42,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,排序,堆,29,42,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,排序,排序,29,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,排序,堆,29,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,堆,排序,42,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,堆,堆,42,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，其核心特征包括：将待排序数据构建成最大堆或最小堆，利用堆顶元素是堆中最大或最小元素,排序,堆,14,8,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,路径,队列,56,38,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,路径,访问,56,18,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,路径,遍历,56,63,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,路径,图,56,65,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,路径,广度优先搜索,56,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,路径,访问,56,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,路径,访问,56,46,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,队列,访问,38,18,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,队列,遍历,38,63,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,队列,图,38,65,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,队列,广度优先搜索,38,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,队列,访问,38,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,队列,访问,38,46,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,访问,遍历,18,63,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,访问,图,18,65,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,访问,访问,18,46,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,遍历,图,63,65,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,遍历,广度优先搜索,63,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,遍历,访问,63,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,遍历,访问,63,46,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,图,广度优先搜索,65,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,图,访问,65,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,图,访问,65,46,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,广度优先搜索,访问,0,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,广度优先搜索,访问,0,46,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点近的节点，具有先进先出的队列特性来存储待访问节点，保证以最短路径优先的方式遍历图,访问,访问,12,46,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
树的高度是从根节点到最远叶子节点的最长路径长度,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长路径长度,根节点,路径,6,19,CON,CON
树的高度是从根节点到最远叶子节点的最长路径长度,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点的最长路径长度,树的高度,路径,0,19,CON,CON
树的高度是从根节点到最远叶子节点的最长路径长度,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长路径长度,路径,叶子节点,19,12,CON,CON
线性表是一种数据元素之间存在一对一线性关系的有限序列，具有有且仅有一个开始元素和一个终端元素且除开始元素外每个元素有且仅有一个直接前驱、,数据元素,线性表,6,0,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,满二叉树,二叉树,0,24,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,尾节点,链表,11,30,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,尾节点,头节点,11,21,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,尾节点,指针,11,15,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,尾节点,循环链表,11,0,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,链表,头节点,30,21,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,链表,指针,30,15,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,链表,循环链表,30,0,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,头节点,指针,21,15,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,头节点,循环链表,21,0,CON,CON
循环链表的核心特征是表尾节点的指针域指向表头节点，从而使整个链表形成一个环,指针,循环链表,15,0,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,左子树,0,6,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,根节点,0,14,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,右子树,0,19,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,左子树,根节点,6,14,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,左子树,右子树,6,19,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,根节点,右子树,14,19,CON,CON
树的查找是在树这种数据结构中通过特定方法寻找满足特定条件的节点的操作,查找,树,2,6,CON,CON
满二叉树是每一层节点数都达到最大的二叉树,二叉树,满二叉树,17,0,CON,CON
在树这种数据结构中，从根节点开始，依据树的结构特性和节点之间的关系，通过特定的规则（如比较节点的值等），沿着树的分支进行,树,根节点,1,11,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,38,20,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,38,7,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,38,56,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,38,0,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,20,7,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,20,56,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,20,0,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,排序,7,56,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,7,0,CON,CON
选择排序是一种排序算法，其核心特征是在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中,排序,选择排序,56,0,CON,CON
递归基础的核心特征是存在一个或多个明确的终止条件，当满足这些条件时递归过程不再继续调用自身而是直接返回一个确定的结果,递归,递归基础,33,0,CON,CON
回路是图中一条至少包含一条边且起点和终点相同的路径,路径,回路,23,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价等，通过这些权重值可用于衡量图中节点之间,图,加权图,6,0,CON,CON
交换排序是通过比较序列中元素，若顺序错误就把它们交换过来，直到整个序列都被正确排序的一种排序方法,排序,排序,39,44,CON,CON
交换排序是通过比较序列中元素，若顺序错误就把它们交换过来，直到整个序列都被正确排序的一种排序方法,排序,交换排序,39,0,CON,CON
交换排序是通过比较序列中元素，若顺序错误就把它们交换过来，直到整个序列都被正确排序的一种排序方法,排序,交换排序,44,0,CON,CON
线性查找的核心特征是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列,遍历,查找,41,2,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点的关系且在树的层级结构中有其特定位置,父节点,父节点,9,32,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点的关系且在树的层级结构中有其特定位置,父节点,子节点,9,0,CON,CON
子节点是树结构中与父节点直接相连且处于较低层次的节点，具有从属于父节点的关系且在树的层级结构中有其特定位置,父节点,子节点,32,0,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,访问,遍历,23,43,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,访问,访问,23,13,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,访问,广度优先搜索,23,0,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,访问,访问,23,33,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,遍历,访问,43,13,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,遍历,广度优先搜索,43,0,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,遍历,访问,43,33,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,访问,广度优先搜索,13,0,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,访问,访问,13,33,CON,CON
广度优先搜索是按照层次依次访问图或树中节点，先访问起始节点，再依次访问其邻接节点，直至遍历完所有可达节点的一种搜索算法,广度优先搜索,访问,0,33,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而对元素序列进行排序的排序方法其核心性质是排序结果仅取决于元素间的比较关系,排序,排序,31,34,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而对元素序列进行排序的排序方法其核心性质是排序结果仅取决于元素间的比较关系,排序,排序,31,44,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而对元素序列进行排序的排序方法其核心性质是排序结果仅取决于元素间的比较关系,排序,比较排序,31,0,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而对元素序列进行排序的排序方法其核心性质是排序结果仅取决于元素间的比较关系,排序,排序,34,44,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而对元素序列进行排序的排序方法其核心性质是排序结果仅取决于元素间的比较关系,排序,比较排序,34,0,CON,CON
比较排序是基于元素间比较来确定元素间相对次序从而对元素序列进行排序的排序方法其核心性质是排序结果仅取决于元素间的比较关系,排序,比较排序,44,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,回路,29,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,回路,29,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,回路,29,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,访问,29,26,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,回路,0,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,回路,0,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,访问,0,26,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,回路,9,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,访问,9,26,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边可以访问到回路中的每一个顶点且最终回到起始顶点,回路,访问,20,26,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子集，每个子集又是一棵树且称为该根节点的子树，具有层次关系、递归,根节点,根节点,17,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子集，每个子集又是一棵树且称为该根节点的子树，具有层次关系、递归,根节点,递归,17,64,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子集，每个子集又是一棵树且称为该根节点的子树，具有层次关系、递归,根节点,子树,17,54,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子集，每个子集又是一棵树且称为该根节点的子树，具有层次关系、递归,根节点,递归,50,64,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子集，每个子集又是一棵树且称为该根节点的子树，具有层次关系、递归,根节点,子树,50,54,CON,CON
树是一种非线性的数据结构，它有一个根节点，其余节点分为若干互不相交的子集，每个子集又是一棵树且称为该根节点的子树，具有层次关系、递归,递归,子树,64,54,CON,CON
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和相关操作的定义而不涉及具体的存储结构和实现细节,存储结构,抽象数据类型,54,0,CON,CON
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和相关操作的定义而不涉及具体的存储结构和实现细节,存储结构,逻辑结构,54,35,CON,CON
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和相关操作的定义而不涉及具体的存储结构和实现细节,抽象数据类型,逻辑结构,0,35,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,查找,19,44,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,删除,19,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,插入,19,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,时间复杂度,19,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,哈希表,44,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,删除,44,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,插入,44,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,时间复杂度,44,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,查找,哈希函数,44,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,删除,0,41,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,插入,0,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,时间复杂度,0,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,哈希表,哈希函数,0,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,删除,插入,41,39,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,删除,时间复杂度,41,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,删除,哈希函数,41,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,插入,时间复杂度,39,61,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,插入,哈希函数,39,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据使得数据的插入删除和查找操作在平均情况下具有接近常数的时间复杂度,时间复杂度,哈希函数,61,13,CON,CON
数据的逻辑结构的特点的核心性质包括数据元素之间的逻辑关系，如线性结构中元素一对一的关系、树形结构中元素一对多的关系、图状结构中元素,逻辑结构,数据元素,3,17,CON,CON
数据的逻辑结构的特点的核心性质包括数据元素之间的逻辑关系，如线性结构中元素一对一的关系、树形结构中元素一对多的关系、图状结构中元素,逻辑结构,线性结构,3,30,CON,CON
数据的逻辑结构的特点的核心性质包括数据元素之间的逻辑关系，如线性结构中元素一对一的关系、树形结构中元素一对多的关系、图状结构中元素,数据元素,线性结构,17,30,CON,CON
数据的逻辑结构的特点是数据元素之间存在的一种抽象的、与数据存储无关的逻辑关系，它描述了数据元素之间的相互关系和组织方式,数据元素,逻辑结构,11,3,CON,CON
数据的逻辑结构的特点是数据元素之间存在的一种抽象的、与数据存储无关的逻辑关系，它描述了数据元素之间的相互关系和组织方式,数据元素,数据元素,11,43,CON,CON
数据的逻辑结构的特点是数据元素之间存在的一种抽象的、与数据存储无关的逻辑关系，它描述了数据元素之间的相互关系和组织方式,逻辑结构,数据元素,3,43,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组进行排序的算法,数组,数组,46,56,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组进行排序的算法,数组,冒泡排序,46,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组进行排序的算法,数组,排序,46,60,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组进行排序的算法,数组,冒泡排序,56,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组进行排序的算法,数组,排序,56,60,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组进行排序的算法,冒泡排序,排序,0,60,CON,CON
比较排序的核心特征是通过元素之间的比较来确定元素在排序结果中的相对位置从而实现排序,排序,排序,39,25,CON,CON
比较排序的核心特征是通过元素之间的比较来确定元素在排序结果中的相对位置从而实现排序,排序,比较排序,39,0,CON,CON
比较排序的核心特征是通过元素之间的比较来确定元素在排序结果中的相对位置从而实现排序,排序,比较排序,25,0,CON,CON
从数据序列开头依次查找目标元素直至找到或遍历完,遍历,查找,20,9,CON,CON
链表是一种线性数据结构，其特点是用一组任意的存储单元存储线性表中的数据元素，这些存储单元可以是连续的也可以是不连续的，数据元素之间,链表,线性表,0,28,CON,CON
链表是一种线性数据结构，其特点是用一组任意的存储单元存储线性表中的数据元素，这些存储单元可以是连续的也可以是不连续的，数据元素之间,链表,数据元素,0,59,CON,CON
链表是一种线性数据结构，其特点是用一组任意的存储单元存储线性表中的数据元素，这些存储单元可以是连续的也可以是不连续的，数据元素之间,链表,数据元素,0,33,CON,CON
链表是一种线性数据结构，其特点是用一组任意的存储单元存储线性表中的数据元素，这些存储单元可以是连续的也可以是不连续的，数据元素之间,线性表,数据元素,28,59,CON,CON
链表是一种线性数据结构，其特点是用一组任意的存储单元存储线性表中的数据元素，这些存储单元可以是连续的也可以是不连续的，数据元素之间,线性表,数据元素,28,33,CON,CON
链表是一种线性数据结构，其特点是用一组任意的存储单元存储线性表中的数据元素，这些存储单元可以是连续的也可以是不连续的，数据元素之间,数据元素,数据元素,59,33,CON,CON
线性表是一种由有限个数据元素组成的序列，其中每个元素都有且仅有一个直接前驱和一个直接后继（除第一个元素无前驱，最后一个元素无后继外,线性表,数据元素,0,10,CON,CON
回路是图中从某顶点出发又回到该顶点的路径,回路,路径,0,18,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,删除,插入,14,11,CON,CON
连通图中任意两个顶点之间都存在路径,连通图,路径,0,15,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有且仅有一个开始结点和一个终端结点，并且所有结点都有且仅有一个直接前驱和一个直接,数据元素,数据类型,15,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有且仅有一个开始结点和一个终端结点，并且所有结点都有且仅有一个直接前驱和一个直接,数据元素,线性表,15,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列，有且仅有一个开始结点和一个终端结点，并且所有结点都有且仅有一个直接前驱和一个直接,数据类型,线性表,8,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,52,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入,排序,11,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,52,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,7,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,52,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,52,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,52,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,52,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,15,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,插入排序,25,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,排序,排序,25,46,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法其核心性质是通过构建有序序列对于未排序数据在已排序序列中从后向前扫描找到,插入排序,排序,0,46,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,数组,数组,46,56,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,数组,排序,46,67,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,数组,排序,46,64,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,数组,冒泡排序,46,0,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,数组,排序,56,67,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,数组,排序,56,64,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,数组,冒泡排序,56,0,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,排序,排序,67,64,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,排序,冒泡排序,67,0,CON,CON
冒泡排序是一种比较相邻元素大小并在必要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾，从而实现对数组元素从小到大排序的排序,排序,冒泡排序,64,0,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,排序,23,7,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,数据元素,23,26,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,排序,23,62,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,选择排序,23,0,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,数据元素,7,26,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,排序,7,62,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,选择排序,7,0,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,数据元素,排序,26,62,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,数据元素,选择排序,26,0,CON,CON
选择排序是一种排序算法，其核心性质是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序,排序,选择排序,62,0,CON,CON
归并排序是将数组分块排序后合并成有序数组的算法,排序,数组,10,6,CON,CON
归并排序是将数组分块排序后合并成有序数组的算法,排序,归并排序,10,0,CON,CON
归并排序是将数组分块排序后合并成有序数组的算法,排序,数组,10,18,CON,CON
归并排序是将数组分块排序后合并成有序数组的算法,数组,归并排序,6,0,CON,CON
归并排序是将数组分块排序后合并成有序数组的算法,数组,数组,6,18,CON,CON
归并排序是将数组分块排序后合并成有序数组的算法,归并排序,数组,0,18,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,插入,8,36,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,删除,8,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,插入,删除,36,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,插入,队列,36,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作,删除,队列,23,0,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素的相对顺序从而实现排序,排序,排序,7,38,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素的相对顺序从而实现排序,排序,比较排序,7,0,CON,CON
比较排序是一种排序算法，它通过对元素之间进行比较来确定元素的相对顺序从而实现排序,排序,比较排序,38,0,CON,CON
子节点是树状结构中直接连接在父节点之下的节点,父节点,子节点,14,0,CON,CON
数据类型是对数据的一种分类，它定义了数据的取值范围、存储方式以及可以进行的操作，不同的数据类型具有不同的特性和用途，通过明确数据类型能,数据类型,数据类型,0,43,CON,CON
数据类型是对数据的一种分类，它定义了数据的取值范围、存储方式以及可以进行的操作，不同的数据类型具有不同的特性和用途，通过明确数据类型能,数据类型,数据类型,0,62,CON,CON
数据类型是对数据的一种分类，它定义了数据的取值范围、存储方式以及可以进行的操作，不同的数据类型具有不同的特性和用途，通过明确数据类型能,数据类型,数据类型,43,62,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径相通，或者在有向图中，对于任意两个顶点u和v，都存在从u到,有向图,路径,31,23,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径相通，或者在有向图中，对于任意两个顶点u和v，都存在从u到,有向图,连通图,31,0,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径相通，或者在有向图中，对于任意两个顶点u和v，都存在从u到,有向图,无向图,31,6,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径相通，或者在有向图中，对于任意两个顶点u和v，都存在从u到,路径,连通图,23,0,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径相通，或者在有向图中，对于任意两个顶点u和v，都存在从u到,路径,无向图,23,6,CON,CON
连通图是指在无向图中，若任意两个顶点之间都存在路径相通，或者在有向图中，对于任意两个顶点u和v，都存在从u到,连通图,无向图,0,6,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活性和高效性，可用于动态内存分配,访问,指针,31,25,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活性和高效性，可用于动态内存分配,访问,指针,31,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，具有灵活性和高效性，可用于动态内存分配,指针,指针,25,0,CON,CON
二叉搜索树是一棵空树或者满足对于任意一个节点，其左子树上所有节点的值均小于该节点的值，其右子树上所有节点的值均大于该节点的值，,二叉搜索树,右子树,0,44,CON,CON
二叉搜索树是一棵空树或者满足对于任意一个节点，其左子树上所有节点的值均小于该节点的值，其右子树上所有节点的值均大于该节点的值，,二叉搜索树,左子树,0,24,CON,CON
二叉搜索树是一棵空树或者满足对于任意一个节点，其左子树上所有节点的值均小于该节点的值，其右子树上所有节点的值均大于该节点的值，,右子树,左子树,44,24,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,28,50,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,遍历,28,10,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,图,28,9,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,28,37,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,28,22,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,广度优先搜索,28,0,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,遍历,50,10,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,图,50,9,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,50,37,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,50,22,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,广度优先搜索,50,0,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,遍历,图,10,9,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,遍历,访问,10,37,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,遍历,访问,10,22,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,遍历,广度优先搜索,10,0,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,图,访问,9,37,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,图,访问,9,22,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,图,广度优先搜索,9,0,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,37,22,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,广度优先搜索,37,0,CON,CON
广度优先搜索是一种图遍历算法，它按照层次依次访问节点，先访问起始节点，接着访问其所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,广度优先搜索,22,0,CON,CON
邻接表的核心性质是对于图中的每个顶点，通过链表形式存储其所有邻接顶点,链表,邻接表,21,0,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，对于图中的每个顶点，它都有一个链表，链表中存储了与该顶点相邻接的其他顶点,链表,邻接表,35,0,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步,深度优先搜索,路径,0,36,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步,深度优先搜索,遍历,0,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步,路径,遍历,36,11,CON,CON
稳定性是指在排序过程中，相等元素之间的相对位置在排序前后保持不变的特性,排序,稳定性,6,0,CON,CON
稳定性是指在排序过程中，相等元素之间的相对位置在排序前后保持不变的特性,排序,排序,6,24,CON,CON
稳定性是指在排序过程中，相等元素之间的相对位置在排序前后保持不变的特性,稳定性,排序,0,24,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而支持双向遍历,指针,链表,32,7,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而支持双向遍历,指针,双向链表,32,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而支持双向遍历,指针,遍历,32,57,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而支持双向遍历,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而支持双向遍历,链表,遍历,7,57,CON,CON
双向链表是一种链表数据结构，其每个节点除了包含数据域外还包含两个指针，分别指向前一个节点和后一个节点，从而支持双向遍历,双向链表,遍历,0,57,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组分成两部分并比较中间元素与目标元素来确定目标元素所在位置,数组,查找,32,13,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组分成两部分并比较中间元素与目标元素来确定目标元素所在位置,数组,二分查找,32,0,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组分成两部分并比较中间元素与目标元素来确定目标元素所在位置,数组,数组,32,10,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组分成两部分并比较中间元素与目标元素来确定目标元素所在位置,查找,二分查找,13,0,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组分成两部分并比较中间元素与目标元素来确定目标元素所在位置,查找,数组,13,10,CON,CON
二分查找是一种在有序数组中查找某一特定元素的搜索算法，通过不断将数组分成两部分并比较中间元素与目标元素来确定目标元素所在位置,二分查找,数组,0,10,CON,CON
单链表是由节点组成，每个节点包含数据及指向下一节点的指针,指针,单链表,26,0,CON,CON
树的高度的核心性质是从根节点到最远叶节点的最长简单路径上边的数目,路径,树的高度,25,0,CON,CON
树的高度的核心性质是从根节点到最远叶节点的最长简单路径上边的数目,路径,根节点,25,11,CON,CON
树的高度的核心性质是从根节点到最远叶节点的最长简单路径上边的数目,树的高度,根节点,0,11,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,28,24,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,排序,28,34,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,28,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,28,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,28,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,28,49,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,归并排序,28,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,排序,24,34,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,24,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,24,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,24,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,24,49,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,归并排序,24,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,34,8,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,34,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,34,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,数组,34,49,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,排序,归并排序,34,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,8,15,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,8,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,8,49,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,归并排序,8,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,15,39,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,15,49,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,归并排序,15,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,数组,39,49,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,归并排序,39,0,CON,CON
归并排序是将一个数组分成两个子数组，分别对两个子数组进行排序，然后将排序好的子数组合并成一个有序的数组，其核心特征是通过,数组,归并排序,49,0,CON,CON
链表的核心特征是通过节点之间的指针连接来存储数据元素，每个节点包含数据部分和指向下一个节点的指针，从而形成一种链式的数据结构，使得数据的存储,链表,数据元素,0,22,CON,CON
链表的核心特征是通过节点之间的指针连接来存储数据元素，每个节点包含数据部分和指向下一个节点的指针，从而形成一种链式的数据结构，使得数据的存储,链表,指针,0,15,CON,CON
链表的核心特征是通过节点之间的指针连接来存储数据元素，每个节点包含数据部分和指向下一个节点的指针，从而形成一种链式的数据结构，使得数据的存储,链表,指针,0,46,CON,CON
链表的核心特征是通过节点之间的指针连接来存储数据元素，每个节点包含数据部分和指向下一个节点的指针，从而形成一种链式的数据结构，使得数据的存储,数据元素,指针,22,15,CON,CON
链表的核心特征是通过节点之间的指针连接来存储数据元素，每个节点包含数据部分和指向下一个节点的指针，从而形成一种链式的数据结构，使得数据的存储,数据元素,指针,22,46,CON,CON
链表的核心特征是通过节点之间的指针连接来存储数据元素，每个节点包含数据部分和指向下一个节点的指针，从而形成一种链式的数据结构，使得数据的存储,指针,指针,15,46,CON,CON
树中没有子节点的节点即叶子节点,叶子节点,子节点,11,4,CON,CON
堆是一种满足父节点键值大于或小于子节点的完全二叉树,子节点,完全二叉树,16,20,CON,CON
堆是一种满足父节点键值大于或小于子节点的完全二叉树,子节点,父节点,16,6,CON,CON
堆是一种满足父节点键值大于或小于子节点的完全二叉树,完全二叉树,父节点,20,6,CON,CON
树的查找基于树形结构通过特定路径确定元素位置,查找,路径,2,14,CON,CON
递归基础是递归算法中满足终止条件、不再进行递归调用的初始情况或边界条件,递归,递归,21,5,CON,CON
递归基础是递归算法中满足终止条件、不再进行递归调用的初始情况或边界条件,递归,递归基础,21,0,CON,CON
递归基础是递归算法中满足终止条件、不再进行递归调用的初始情况或边界条件,递归,递归基础,5,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示与这条边相关的某种代价、成本、距离或其他度量，不同边的权重,图,边的权重,6,56,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示与这条边相关的某种代价、成本、距离或其他度量，不同边的权重,图,加权图,6,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示与这条边相关的某种代价、成本、距离或其他度量，不同边的权重,边的权重,加权图,56,0,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值等属性，其特点包括有不同类型如无,集合,集合,14,5,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,后继节点,前驱节点,48,38,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,后继节点,链表,48,7,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,后继节点,指针,48,31,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,后继节点,遍历,48,59,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,后继节点,双向链表,48,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,前驱节点,链表,38,7,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,前驱节点,指针,38,31,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,前驱节点,遍历,38,59,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,前驱节点,双向链表,38,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,链表,指针,7,31,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,链表,遍历,7,59,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,指针,遍历,31,59,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,指针,双向链表,31,0,CON,CON
双向链表是一种链表数据结构，每个节点除了包含数据域外还包含两个指针，一个指向前驱节点，另一个指向后继节点，从而支持双向遍历,遍历,双向链表,59,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步调整为有序序列，在排序过程中相邻元素或不相邻元素之间不断进行比较和交换操作以,排序,交换排序,38,0,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归,50,5,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归,50,25,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归,50,64,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归基础,50,0,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归,5,25,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归,5,64,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归基础,5,0,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归,25,64,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归基础,25,0,CON,CON
递归基础是递归算法中最简单的情况，通常是不需要再次递归调用就能直接得到结果的终止条件，其核心性质是为递归提供了明确的结束点，确保递归不会,递归,递归基础,64,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,完全二叉树,满二叉树,0,39,CON,CON
栈是一种后进先出的数据结构，其核心性质为元素的插入和删除操作都在栈顶进行，新元素总是被放置在栈顶，而最先进入栈的元素,插入,删除,23,26,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,排序,27,44,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,递归,27,58,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,排序,27,21,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,归并排序,27,0,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,递归,44,58,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,排序,44,21,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,归并排序,44,0,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,递归,排序,58,21,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,递归,归并排序,58,0,CON,CON
归并排序是将一个序列分成两个子序列分别进行排序，然后将排序好的子序列合并成一个有序序列的排序算法，其核心特征在于通过递归地对序列,排序,归并排序,21,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的每个节点表示与该顶点相邻接的顶点，具有存储紧凑、便于,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的每个节点表示与该顶点相邻接的顶点，具有存储紧凑、便于,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的每个节点表示与该顶点相邻接的顶点，具有存储紧凑、便于,链表,邻接表,35,0,CON,CON
树的节点是包含数据以及指向子节点的链接的基本数据结构单元,树的节点,子节点,0,13,CON,CON
根节点是在树形结构中没有前驱节点且唯一直接位于树顶端的节点,根节点,前驱节点,0,12,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,路径,根节点,15,1,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,路径,叶子节点,15,7,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,路径,树的深度,15,23,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,根节点,叶子节点,1,7,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,根节点,树的深度,1,23,CON,CON
从根节点到最远叶子节点所经最长路径上的节点数即树的深度,叶子节点,树的深度,7,23,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,链表,27,40,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,头节点,27,19,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,尾节点,27,11,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,链表,27,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,遍历,27,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,链表,27,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,指针,27,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,循环链表,27,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,头节点,40,19,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,尾节点,40,11,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,链表,40,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,遍历,40,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,链表,40,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,指针,40,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,循环链表,40,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,头节点,尾节点,19,11,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,头节点,链表,19,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,头节点,遍历,19,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,头节点,链表,19,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,头节点,指针,19,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,头节点,循环链表,19,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,尾节点,链表,11,7,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,尾节点,遍历,11,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,尾节点,链表,11,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,尾节点,指针,11,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,尾节点,循环链表,11,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,遍历,7,50,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,链表,7,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,指针,7,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,循环链表,7,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,遍历,链表,50,54,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,遍历,指针,50,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,遍历,循环链表,50,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,指针,54,15,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,链表,循环链表,54,0,CON,CON
循环链表是一种链表，其尾节点的指针指向头节点，使得整个链表形成一个环，从而可以从链表中的任意节点开始遍历整个链表,指针,循环链表,15,0,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,完全二叉树,满二叉树,0,39,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组有序，每次比较都将最大（或最小）元素“冒泡”到数组末尾（,数组,数组,59,34,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组有序，每次比较都将最大（或最小）元素“冒泡”到数组末尾（,数组,冒泡排序,59,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，重复此过程直到整个数组有序，每次比较都将最大（或最小）元素“冒泡”到数组末尾（,数组,冒泡排序,34,0,CON,CON
深度优先搜索是一种在图或树等数据结构中，从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标节点，若未找到目标则回溯,路径,深度优先搜索,31,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其特点包括数据元素的存储方式（如顺序存储、链式存储等）、数据元素间关系的表示方法以及,数据元素,存储结构,54,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其特点包括数据元素的存储方式（如顺序存储、链式存储等）、数据元素间关系的表示方法以及,数据元素,数据元素,54,31,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其特点包括数据元素的存储方式（如顺序存储、链式存储等）、数据元素间关系的表示方法以及,数据元素,数据元素,54,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其特点包括数据元素的存储方式（如顺序存储、链式存储等）、数据元素间关系的表示方法以及,存储结构,数据元素,0,31,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其特点包括数据元素的存储方式（如顺序存储、链式存储等）、数据元素间关系的表示方法以及,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，其特点包括数据元素的存储方式（如顺序存储、链式存储等）、数据元素间关系的表示方法以及,数据元素,数据元素,31,6,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,35,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,0,29,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,树的高度,0,10,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,子树,35,29,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,平衡二叉树,树的高度,35,10,CON,CON
平衡二叉树左右两个子树的高度差的绝对值不超过1并且左右两个子树都是一棵平衡二叉树,子树,树的高度,29,10,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,有向图,连通图,30,0,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,有向图,路径,30,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,有向图,路径,30,47,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,有向图,无向图,30,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,连通图,路径,0,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,连通图,路径,0,47,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,连通图,无向图,0,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,路径,路径,21,47,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,路径,无向图,21,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径可相互到达且在有向图中任意两个顶点之间都存在有向路径可相互到达的图,路径,无向图,47,6,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列），且相邻顶点之间存在边（对于有向图存在有向,有向图,路径,24,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列），且相邻顶点之间存在边（对于有向图存在有向,有向图,有向图,24,49,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列），且相邻顶点之间存在边（对于有向图存在有向,路径,有向图,0,49,CON,CON
无向图的核心特征是由顶点集合和边集合组成，其中边是没有方向的，即顶点之间的连接是双向的,集合,集合,12,16,CON,CON
无向图的核心特征是由顶点集合和边集合组成，其中边是没有方向的，即顶点之间的连接是双向的,集合,无向图,12,0,CON,CON
无向图的核心特征是由顶点集合和边集合组成，其中边是没有方向的，即顶点之间的连接是双向的,集合,无向图,16,0,CON,CON
回溯法是按选优条件深度优先搜索并适时回溯求解的方法,回溯法,深度优先搜索,0,9,CON,CON
回路是指在图中从一个顶点出发，沿着边经过若干个顶点后又回到该顶点的路径且路径中除起点和终点外其他顶点不重复,路径,回路,36,0,CON,CON
回路是指在图中从一个顶点出发，沿着边经过若干个顶点后又回到该顶点的路径且路径中除起点和终点外其他顶点不重复,路径,路径,36,33,CON,CON
回路是指在图中从一个顶点出发，沿着边经过若干个顶点后又回到该顶点的路径且路径中除起点和终点外其他顶点不重复,回路,路径,0,33,CON,CON
简单排序是对数据按特定规则依次比较交换位置的排序方式,排序,简单排序,22,0,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,头节点,链表,14,18,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,头节点,尾节点,14,7,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,头节点,指针,14,10,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,头节点,循环链表,14,0,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,链表,尾节点,18,7,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,链表,指针,18,10,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,链表,循环链表,18,0,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,尾节点,指针,7,10,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,尾节点,循环链表,7,0,CON,CON
循环链表是一种尾节点指针指向头节点的链表结构,指针,循环链表,10,0,CON,CON
二分查找在有序数组中通过不断折半查找目标元素,查找,数组,16,7,CON,CON
二分查找在有序数组中通过不断折半查找目标元素,查找,二分查找,16,0,CON,CON
二分查找在有序数组中通过不断折半查找目标元素,数组,二分查找,7,0,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,左子树,0,6,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,根节点,0,14,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,二叉搜索树,右子树,0,19,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,左子树,根节点,6,14,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,左子树,右子树,6,19,CON,CON
二叉搜索树中左子树节点值小于根节点小于右子树节点值,根节点,右子树,14,19,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,数组,集合,47,18,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,数组,数据元素,47,9,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,数组,数组,47,0,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,数组,访问,47,42,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,集合,数据元素,18,9,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,集合,数组,18,0,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,集合,访问,18,42,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,数据元素,数组,9,0,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,数据元素,访问,9,42,CON,CON
数组是由相同类型的数据元素组成的有序集合，这些元素在内存中按顺序存储，可以通过下标来访问和引用数组中的各个元素,数组,访问,0,42,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，且具有限定仅在栈顶进行插入和删除操作的特性,删除,插入,41,38,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，且具有限定仅在栈顶进行插入和删除操作的特性,删除,出栈,41,24,CON,CON
栈的核心特征是后进先出即最后进入栈的元素最先被弹出栈，且具有限定仅在栈顶进行插入和删除操作的特性,插入,出栈,38,24,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,指针,30,43,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,链表,30,7,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,链表,30,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,遍历,30,52,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,双向链表,30,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,链表,43,7,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,链表,43,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,遍历,43,52,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,指针,双向链表,43,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,链表,链表,7,54,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,链表,遍历,7,52,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,链表,双向链表,7,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,链表,遍历,54,52,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,链表,双向链表,54,0,CON,CON
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,遍历,双向链表,52,0,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在纵向方向上的层次数量和结构复杂程度,路径,叶子节点,27,17,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在纵向方向上的层次数量和结构复杂程度,路径,树的深度,27,0,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在纵向方向上的层次数量和结构复杂程度,路径,根节点,27,11,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在纵向方向上的层次数量和结构复杂程度,叶子节点,树的深度,17,0,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在纵向方向上的层次数量和结构复杂程度,叶子节点,根节点,17,11,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在纵向方向上的层次数量和结构复杂程度,树的深度,根节点,0,11,CON,CON
简单排序是对数据序列通过比较元素大小并交换位置等方式逐步将其按特定顺序排列的排序方法,排序,简单排序,38,0,CON,CON
算法效率的特点是指算法在执行过程中所表现出的诸如时间复杂度和空间复杂度等方面的特性，反映了算法执行所需资源随问题规模变化的情况,空间复杂度,时间复杂度,30,24,CON,CON
队列是一种特殊的线性表，其特点是元素按照先进先出的原则进行入队和出队操作,出队,线性表,32,8,CON,CON
队列是一种特殊的线性表，其特点是元素按照先进先出的原则进行入队和出队操作,出队,入队,32,29,CON,CON
队列是一种特殊的线性表，其特点是元素按照先进先出的原则进行入队和出队操作,出队,队列,32,0,CON,CON
队列是一种特殊的线性表，其特点是元素按照先进先出的原则进行入队和出队操作,线性表,入队,8,29,CON,CON
队列是一种特殊的线性表，其特点是元素按照先进先出的原则进行入队和出队操作,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其特点是元素按照先进先出的原则进行入队和出队操作,入队,队列,29,0,CON,CON
单链表是一种由节点组成的线性数据结构，每个节点包含数据及指向下一节点的指针,指针,单链表,35,0,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,集合,6,10,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,集合,6,32,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,映射,6,0,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,集合,6,21,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,集合,10,32,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,映射,10,0,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,集合,10,21,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,映射,32,0,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,集合,集合,32,21,CON,CON
映射是一种从集合A到集合B的对应关系，使得集合A中的每一个元素在集合B中都有唯一的元素与之对应,映射,集合,0,21,CON,CON
图的核心特征是由顶点集合以及顶点之间的边集合所构成的数据结构，其中顶点表示事物，边表示事物之间的关系,集合,集合,20,10,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,时间复杂度,哈希表,54,0,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,时间复杂度,哈希函数,54,19,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,时间复杂度,插入,54,61,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,时间复杂度,映射,54,25,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,时间复杂度,查找,54,64,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,哈希表,哈希函数,0,19,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,哈希表,插入,0,61,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,哈希表,映射,0,25,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,哈希表,查找,0,64,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,哈希函数,插入,19,61,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,哈希函数,映射,19,25,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,哈希函数,查找,19,64,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,插入,映射,61,25,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,插入,查找,61,64,CON,CON
哈希表的核心性质是对于每个键值对，通过哈希函数将键映射到一个特定的索引位置，从而能够在平均情况下以接近常数的时间复杂度进行插入、查找,映射,查找,25,64,CON,CON
递归基础是递归算法中满足特定条件从而直接给出结果而无需再次递归调用自身的初始情况或边界条件,递归,递归,29,5,CON,CON
递归基础是递归算法中满足特定条件从而直接给出结果而无需再次递归调用自身的初始情况或边界条件,递归,递归基础,29,0,CON,CON
递归基础是递归算法中满足特定条件从而直接给出结果而无需再次递归调用自身的初始情况或边界条件,递归,递归基础,5,0,CON,CON
链表是由节点组成，节点间通过指针连接的数据结构,指针,链表,14,0,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆排序,堆,0,6,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆排序,子节点,0,25,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆排序,父节点,0,17,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆排序,子节点,0,42,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆排序,父节点,0,34,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆,子节点,6,25,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆,父节点,6,17,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆,子节点,6,42,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,堆,父节点,6,34,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,子节点,父节点,25,17,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,子节点,子节点,25,42,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,子节点,父节点,25,34,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,父节点,子节点,17,42,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,父节点,父节点,17,34,CON,CON
堆排序是利用堆这种数据结构所具有的父节点大于或等于子节点（大顶堆）或父节点小于或等于子节点（小顶堆）的性质，将,子节点,父节点,42,34,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,插入,8,36,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,删除,8,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,删除,36,23,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,插入,队列,36,0,CON,CON
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,删除,队列,23,0,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值等属性且顶点与边的连接情况多样能,集合,集合,14,5,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,根节点,父节点,40,30,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,根节点,树的节点,40,0,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,根节点,父节点,40,45,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,根节点,子节点,40,20,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,根节点,根节点,40,34,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,父节点,树的节点,30,0,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,父节点,父节点,30,45,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,父节点,子节点,30,20,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,父节点,根节点,30,34,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,树的节点,父节点,0,45,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,树的节点,子节点,0,20,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,树的节点,根节点,0,34,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,父节点,子节点,45,20,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,父节点,根节点,45,34,CON,CON
树的节点的核心性质是每个节点有零个或多个子节点且有且仅有一个父节点（根节点除外，根节点没有父节点）,子节点,根节点,20,34,CON,CON
非线性结构中各数据元素之间的关系不再是一对一的，而是存在一对多、多对一或多对多的复杂关系,非线性结构,数据元素,0,7,CON,CON
在数据结构中，稳定性是指对于相等的元素，排序前后它们的相对顺序保持不变，即如果两个元素的值相等，在排序前一个元素在另一个元素之前，,稳定性,排序,7,20,CON,CON
在数据结构中，稳定性是指对于相等的元素，排序前后它们的相对顺序保持不变，即如果两个元素的值相等，在排序前一个元素在另一个元素之前，,稳定性,排序,7,49,CON,CON
在数据结构中，稳定性是指对于相等的元素，排序前后它们的相对顺序保持不变，即如果两个元素的值相等，在排序前一个元素在另一个元素之前，,排序,排序,20,49,CON,CON
深度优先搜索是一种在图或树等数据结构中沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径继续深度探索的搜索算法，,路径,深度优先搜索,23,0,CON,CON
深度优先搜索是一种在图或树等数据结构中沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径继续深度探索的搜索算法，,路径,路径,23,52,CON,CON
深度优先搜索是一种在图或树等数据结构中沿着一条路径尽可能深地探索直到无法继续或达到目标后回溯，再选择其他路径继续深度探索的搜索算法，,深度优先搜索,路径,0,52,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,27,50,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,图,27,9,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,广度优先搜索,27,0,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,27,33,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,图,50,9,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,广度优先搜索,50,0,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,访问,访问,50,33,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,图,广度优先搜索,9,0,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,图,访问,9,33,CON,CON
广度优先搜索是一种图搜索算法，其核心特征是按照层次依次访问节点，先访问起始节点的所有邻接节点，再依次访问这些邻接节点的邻接节点,广度优先搜索,访问,0,33,CON,CON
树是一种非线性的数据结构，它有一个根节点，每个节点有零个或多个子节点，且除根节点外每个节点有且仅有一个父节点，树中没有,父节点,根节点,51,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，每个节点有零个或多个子节点，且除根节点外每个节点有且仅有一个父节点，树中没有,父节点,根节点,51,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，每个节点有零个或多个子节点，且除根节点外每个节点有且仅有一个父节点，树中没有,父节点,子节点,51,31,CON,CON
树是一种非线性的数据结构，它有一个根节点，每个节点有零个或多个子节点，且除根节点外每个节点有且仅有一个父节点，树中没有,根节点,根节点,17,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，每个节点有零个或多个子节点，且除根节点外每个节点有且仅有一个父节点，树中没有,根节点,子节点,17,31,CON,CON
树是一种非线性的数据结构，它有一个根节点，每个节点有零个或多个子节点，且除根节点外每个节点有且仅有一个父节点，树中没有,根节点,子节点,37,31,CON,CON
顺序查找是从数据序列的一端开始，依次将数据元素与给定值进行比较，直到找到匹配元素或遍历完整个序列，其特点包括适用于无序数据序列、平均,遍历,数据元素,41,19,CON,CON
顺序查找是从数据序列的一端开始，依次将数据元素与给定值进行比较，直到找到匹配元素或遍历完整个序列，其特点包括适用于无序数据序列、平均,遍历,顺序查找,41,0,CON,CON
顺序查找是从数据序列的一端开始，依次将数据元素与给定值进行比较，直到找到匹配元素或遍历完整个序列，其特点包括适用于无序数据序列、平均,数据元素,顺序查找,19,0,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征在于具体描述了数据在计算机存储设备上,物理结构,数据元素,3,24,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征在于具体描述了数据在计算机存储设备上,物理结构,数据元素,3,35,CON,CON
数据的物理结构是指数据在计算机中的存储方式，包括数据元素的存储方式以及数据元素之间关系的存储方式其核心特征在于具体描述了数据在计算机存储设备上,数据元素,数据元素,24,35,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,18,57,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,54,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,18,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,18,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,54,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,57,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,57,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,54,15,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,54,0,CON,CON
选择排序的核心特征是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,15,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,61,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,排序,61,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,61,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,61,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完的一种排序算法,数据元素,选择排序,13,0,CON,CON
二叉搜索树的特点是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，且,左子树,右子树,20,39,CON,CON
二叉搜索树的特点是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，且,左子树,二叉搜索树,20,0,CON,CON
二叉搜索树的特点是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，且,右子树,二叉搜索树,39,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希函数,19,13,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,映射,哈希表,19,0,CON,CON
哈希表是一种数据结构它通过哈希函数将键映射到特定位置来存储和检索数据,哈希函数,哈希表,13,0,CON,CON
队列是一种先进先出、按顺序存储与操作数据的线性结构,线性结构,队列,21,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向，从起始顶点按边的方向到达终止顶点，若为无,路径,有向图,29,25,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向，从起始顶点按边的方向到达终止顶点，若为无,路径,路径,29,0,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（若图为有向图则路径有方向，从起始顶点按边的方向到达终止顶点，若为无,有向图,路径,25,0,CON,CON
顺序查找的核心特征是从数据序列的第一个元素开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列,遍历,顺序查找,42,0,CON,CON
迭代法是一种不断用变量的旧值递推新值的解决问题的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来,迭代法,递推,0,14,CON,CON
迭代法是一种不断用变量的旧值递推新值的解决问题的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来,迭代法,迭代,0,52,CON,CON
迭代法是一种不断用变量的旧值递推新值的解决问题的方法，其核心特征是通过重复执行相同的计算步骤，利用前一次迭代得到的结果来,递推,迭代,14,52,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,路径,0,20,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,树的高度,根节点,0,6,CON,CON
树的高度是从根节点到最远叶节点的最长简单路径上的边数,路径,根节点,20,6,CON,CON
线性表是一种由同类型数据元素构成的有限序列，其中每个元素有且仅有一个直接前驱和一个直接后继（除第一个元素无前驱，最后一个元素无后继外,线性表,数据元素,0,10,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，所有其他节点都直接或间接连接到它,父节点,根节点,19,0,CON,CON
数据类型的核心特征是它定义了数据的取值范围以及可对该数据执行的操作集合,数据类型,集合,0,33,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义或值的部分，其核心性质是为递归过程提供初始条件，使得递归能够从这一基础情况开始逐步展开，,递归,递归,36,49,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义或值的部分，其核心性质是为递归过程提供初始条件，使得递归能够从这一基础情况开始逐步展开，,递归,递归,36,5,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义或值的部分，其核心性质是为递归过程提供初始条件，使得递归能够从这一基础情况开始逐步展开，,递归,递归基础,36,0,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义或值的部分，其核心性质是为递归过程提供初始条件，使得递归能够从这一基础情况开始逐步展开，,递归,递归,49,5,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义或值的部分，其核心性质是为递归过程提供初始条件，使得递归能够从这一基础情况开始逐步展开，,递归,递归基础,49,0,CON,CON
递归基础是递归定义中针对最简单情况直接给出定义或值的部分，其核心性质是为递归过程提供初始条件，使得递归能够从这一基础情况开始逐步展开，,递归,递归基础,5,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,完全二叉树,18,0,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,二叉树,满二叉树,18,39,CON,CON
完全二叉树是深度为k的，有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的,完全二叉树,满二叉树,0,39,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,访问,队列,18,53,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,访问,广度优先搜索,18,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,访问,访问,18,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,访问,访问,18,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,队列,广度优先搜索,53,0,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,队列,访问,53,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,队列,访问,53,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,广度优先搜索,访问,0,12,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,广度优先搜索,访问,0,33,CON,CON
广度优先搜索按照层次依次访问节点，先访问距离起始节点较近的节点，在访问完当前层所有节点后再进入下一层，通过队列来辅助实现，保证按,访问,访问,12,33,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
数据类型是一组值的集合以及定义在这组值上的一组操作的总称,数据类型,集合,0,9,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，通过数组形式存储元素，可高效地进行按,访问,线性表,39,6,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，通过数组形式存储元素，可高效地进行按,访问,数组,39,46,CON,CON
顺序表是一种线性表，其特点是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，通过数组形式存储元素，可高效地进行按,线性表,数组,6,46,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希函数,哈希表,5,0,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希函数,映射,5,11,CON,CON
哈希表通过哈希函数将键映射到特定位置以快速存取数据,哈希表,映射,0,11,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,21,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,38,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,38,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,根节点,21,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,21,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,子节点,子节点,32,50,CON,CON
树是一种非线性的数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推，,根节点,子节点,17,50,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，具有后进先出的特点,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，具有后进先出的特点,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表，具有后进先出的特点,删除,插入,14,11,CON,CON
线性查找的核心性质是从数据序列的起始位置开始，依次逐个检查元素，直到找到目标元素或遍历完整个序列,遍历,查找,41,2,CON,CON
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点间的关系通过边来表示，边可以具有权值等属性且任意两个顶点之间可能存在零条,集合,集合,14,5,CON,CON
简单排序是对数据元素序列进行比较和交换等操作，按照特定顺序将元素排列成有序序列的排序方法,排序,数据元素,40,6,CON,CON
简单排序是对数据元素序列进行比较和交换等操作，按照特定顺序将元素排列成有序序列的排序方法,排序,简单排序,40,0,CON,CON
简单排序是对数据元素序列进行比较和交换等操作，按照特定顺序将元素排列成有序序列的排序方法,数据元素,简单排序,6,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接与根节点相连,根节点,根节点,0,44,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接与根节点相连,根节点,父节点,0,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接与根节点相连,根节点,父节点,44,19,CON,CON
完全二叉树是除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树,完全二叉树,二叉树,0,45,CON,CON
数据类型具有特定的取值范围、存储方式、操作集合以及语义解释等特点，其核心特征包括明确规定数据所允许的值的集合，确定数据在内存中的存储形式，,数据类型,集合,0,52,CON,CON
数据类型具有特定的取值范围、存储方式、操作集合以及语义解释等特点，其核心特征包括明确规定数据所允许的值的集合，确定数据在内存中的存储形式，,数据类型,集合,0,21,CON,CON
数据类型具有特定的取值范围、存储方式、操作集合以及语义解释等特点，其核心特征包括明确规定数据所允许的值的集合，确定数据在内存中的存储形式，,集合,集合,52,21,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，也就是说给定一个集合，任何一个元素是否属于这个集合是明确,集合,集合,51,66,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，也就是说给定一个集合，任何一个元素是否属于这个集合是明确,集合,集合,51,0,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，也就是说给定一个集合，任何一个元素是否属于这个集合是明确,集合,集合,51,30,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，也就是说给定一个集合，任何一个元素是否属于这个集合是明确,集合,集合,66,0,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，也就是说给定一个集合，任何一个元素是否属于这个集合是明确,集合,集合,66,30,CON,CON
集合具有确定性、互异性和无序性这三个核心特征，其中确定性是指集合中的元素必须是确定的，也就是说给定一个集合，任何一个元素是否属于这个集合是明确,集合,集合,0,30,CON,CON
图由顶点集合及顶点间的关系集合组成，顶点之间通过边相连，边可以具有方向也可以无方向，图可用于表示各种复杂的关系结构如社交网络、,集合,集合,13,4,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,时间复杂度,堆排序,41,0,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,时间复杂度,堆,41,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,时间复杂度,空间复杂度,41,58,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,时间复杂度,排序,41,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,时间复杂度,堆,41,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,堆排序,堆,0,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,堆排序,空间复杂度,0,58,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,堆,空间复杂度,22,58,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,堆,排序,22,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,堆,堆,22,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,空间复杂度,排序,58,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,空间复杂度,堆,58,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它利用堆的特性将数据逐步调整为有序序列，具有时间复杂度为O(n log n)、空间复杂度为O(,排序,堆,14,8,CON,CON
树的核心特征是具有一个根节点，根节点没有前驱，且除根节点外，其余每个节点有且仅有一个前驱，同时每个节点可以有零个或多个后继,根节点,根节点,15,25,CON,CON
树的核心特征是具有一个根节点，根节点没有前驱，且除根节点外，其余每个节点有且仅有一个前驱，同时每个节点可以有零个或多个后继,根节点,根节点,15,11,CON,CON
树的核心特征是具有一个根节点，根节点没有前驱，且除根节点外，其余每个节点有且仅有一个前驱，同时每个节点可以有零个或多个后继,根节点,根节点,25,11,CON,CON
树的查找的核心特征是从根节点开始，根据节点间的父子关系，按照特定规则在树的节点中进行搜索以找到目标节点,查找,根节点,2,11,CON,CON
树的查找的核心特征是从根节点开始，根据节点间的父子关系，按照特定规则在树的节点中进行搜索以找到目标节点,查找,树的节点,2,35,CON,CON
树的查找的核心特征是从根节点开始，根据节点间的父子关系，按照特定规则在树的节点中进行搜索以找到目标节点,根节点,树的节点,11,35,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,存储结构,0,61,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,数据元素,0,28,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,存储结构,0,54,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,数据元素,61,28,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,存储结构,61,54,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,数据元素,61,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,数据元素,存储结构,28,54,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,数据元素,数据元素,28,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器内的表示，包括数据元素的表示和关系的表示，可分为顺序存储结构、链式存储结构、索引存储结构和散,存储结构,数据元素,54,6,CON,CON
树的深度是从根节点到最远叶节点的最长简单路径上的节点数,树的深度,路径,0,20,CON,CON
树的深度是从根节点到最远叶节点的最长简单路径上的节点数,树的深度,根节点,0,6,CON,CON
树的深度是从根节点到最远叶节点的最长简单路径上的节点数,路径,根节点,20,6,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法，其特点包括比较次数随元素数量增加,数组,排序,42,47,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法，其特点包括比较次数随元素数量增加,数组,数组,42,28,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法，其特点包括比较次数随元素数量增加,数组,冒泡排序,42,0,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法，其特点包括比较次数随元素数量增加,排序,数组,47,28,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法，其特点包括比较次数随元素数量增加,排序,冒泡排序,47,0,CON,CON
冒泡排序是一种比较相邻元素大小并将较大元素逐步“冒泡”到数组末尾，重复此过程直到整个数组有序的排序算法，其特点包括比较次数随元素数量增加,数组,冒泡排序,28,0,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,堆,0,52,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,堆,0,37,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,排序,0,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,堆,52,37,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,52,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,52,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,堆,52,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,37,22,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,排序,37,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,堆,堆,37,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,排序,排序,22,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,排序,堆,22,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个最大堆或最小堆，然后依次取出堆顶元素并调整堆结构，从而实现数据,排序,堆,14,8,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,二分查找,15,0,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,数组,查找,15,24,CON,CON
二分查找的核心性质是在一个有序数组中，通过每次将查找区间缩小一半的方式，快速定位目标元素，若目标元素存在则返回其索引，若不存在则返回,二分查找,查找,0,24,CON,CON
回溯法基础的特点是在问题求解过程中通过尝试不同的选择路径，当发现当前路径无法达到目标时就回溯到上一步重新选择，以此逐步探索所有可能的,回溯法,路径,0,34,CON,CON
回溯法基础的特点是在问题求解过程中通过尝试不同的选择路径，当发现当前路径无法达到目标时就回溯到上一步重新选择，以此逐步探索所有可能的,回溯法,路径,0,26,CON,CON
回溯法基础的特点是在问题求解过程中通过尝试不同的选择路径，当发现当前路径无法达到目标时就回溯到上一步重新选择，以此逐步探索所有可能的,路径,路径,34,26,CON,CON
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,满二叉树,二叉树,0,24,CON,CON
稳定性是指在数据结构中，若存在两个相等的元素，在排序前后它们的相对位置保持不变则该数据结构具有稳定性,稳定性,稳定性,47,0,CON,CON
稳定性是指在数据结构中，若存在两个相等的元素，在排序前后它们的相对位置保持不变则该数据结构具有稳定性,稳定性,排序,47,24,CON,CON
稳定性是指在数据结构中，若存在两个相等的元素，在排序前后它们的相对位置保持不变则该数据结构具有稳定性,稳定性,排序,0,24,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,子节点,树的节点,19,0,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,子节点,父节点,19,54,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,子节点,数据元素,19,8,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,子节点,根节点,19,39,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,树的节点,父节点,0,54,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,树的节点,数据元素,0,8,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,树的节点,根节点,0,39,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,父节点,数据元素,54,8,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,父节点,根节点,54,39,CON,CON
树的节点具有一个数据元素，有零个或多个子节点，且有且仅有一个被称为根的节点，除根节点外的每个节点有且仅有一个父节点,数据元素,根节点,8,39,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,逻辑结构,数据元素,3,9,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,逻辑结构,存储结构,3,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,逻辑结构,数据元素,3,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,数据元素,存储结构,9,28,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,数据元素,数据元素,9,36,CON,CON
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的关联方式,存储结构,数据元素,28,36,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,二叉树,38,17,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,完全二叉树,38,0,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,完全二叉树,17,0,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,根节点,52,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,根节点,52,23,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,子节点,52,40,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,子节点,52,34,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,根节点,19,23,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,子节点,19,40,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,子节点,19,34,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,子节点,23,40,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,根节点,子节点,23,34,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推,子节点,子节点,40,34,CON,CON
回路是从一点出发经一系列节点后又回到该点的路径,回路,路径,0,21,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,40,43,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,40,31,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,40,8,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,40,15,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,40,21,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,40,26,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,40,0,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,43,31,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,43,8,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,数组,43,15,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,43,21,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,43,26,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,43,0,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,31,8,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,31,15,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,31,21,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,31,26,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,31,0,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,数组,8,15,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,8,21,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,8,26,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,8,0,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,15,21,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,排序,15,26,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,数组,归并排序,15,0,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,排序,21,26,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,21,0,CON,CON
归并排序是将一个数组分成两个子数组分别进行排序后再将排序好的子数组合并成一个有序数组的排序算法,排序,归并排序,26,0,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,线性表,删除,21,14,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,线性表,插入,21,11,CON,CON
栈是一种只能在一端进行插入和删除操作的特殊线性表,删除,插入,14,11,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,二叉树,0,20,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,左子树,0,34,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉搜索树,左子树,0,27,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,20,34,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,二叉树,左子树,20,27,CON,CON
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,左子树,左子树,34,27,CON,CON
快速排序的核心特征是选择一个基准元素，将数组分为两部分，使得左边部分的元素都小于等于基准元素，右边部分的元素都大于等于基准元素，然后对,数组,快速排序,20,0,CON,CON
父节点是树状结构中位于上一层级的节点，其特点的核心特征包括拥有子节点且处于比子节点更高的层级位置，对其下一层级的子,子节点,子节点,31,38,CON,CON
父节点是树状结构中位于上一层级的节点，其特点的核心特征包括拥有子节点且处于比子节点更高的层级位置，对其下一层级的子,子节点,父节点,31,0,CON,CON
父节点是树状结构中位于上一层级的节点，其特点的核心特征包括拥有子节点且处于比子节点更高的层级位置，对其下一层级的子,子节点,父节点,38,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,指针,27,54,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,后继节点,27,44,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,双向链表,27,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,前驱节点,27,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,后继节点,54,44,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,双向链表,54,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,前驱节点,54,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,后继节点,双向链表,44,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,后继节点,前驱节点,44,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,双向链表,前驱节点,0,35,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,集合,30,10,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,图,30,57,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,集合,30,14,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,集合,30,21,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,图,10,57,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,集合,10,14,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,集合,10,21,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,图,集合,57,14,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,图,集合,57,21,CON,CON
图的核心性质是由顶点集合和边集合构成，顶点集合中的元素通过边集合中的边相互连接，边可以具有不同的属性如权重等，并且图可以分为有,集合,集合,14,21,CON,CON
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它强调数据的逻辑结构和相关操作的规格说明，而不依赖于具体的实现细节,抽象数据类型,逻辑结构,0,35,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式以及数据的组织形式，包括,逻辑结构,数据元素,3,44,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式以及数据的组织形式，包括,逻辑结构,存储结构,3,37,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式以及数据的组织形式，包括,逻辑结构,数据元素,3,18,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式以及数据的组织形式，包括,数据元素,存储结构,44,37,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式以及数据的组织形式，包括,数据元素,数据元素,44,18,CON,CON
数据的逻辑结构的特点的核心特征是描述数据元素之间的逻辑关系，它独立于数据的存储结构，关注数据元素之间的关联方式以及数据的组织形式，包括,存储结构,数据元素,37,18,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,头节点,尾节点,22,13,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,头节点,链表,22,7,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,头节点,指针,22,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,头节点,链表,22,53,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,头节点,链表,22,37,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,头节点,遍历,22,49,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,头节点,循环链表,22,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,尾节点,链表,13,7,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,尾节点,指针,13,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,尾节点,链表,13,53,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,尾节点,链表,13,37,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,尾节点,遍历,13,49,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,尾节点,循环链表,13,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,指针,7,17,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,链表,7,53,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,链表,7,37,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,遍历,7,49,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,循环链表,7,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,指针,链表,17,53,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,指针,链表,17,37,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,指针,遍历,17,49,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,指针,循环链表,17,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,链表,53,37,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,遍历,53,49,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,循环链表,53,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,遍历,37,49,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,链表,循环链表,37,0,CON,CON
循环链表是一种链表结构，其尾节点的指针域指向头节点，从而形成一个环，使得从链表中的任意节点出发都能遍历整个链表,遍历,循环链表,49,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入,20,16,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,12,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,20,33,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,20,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,12,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,排序,16,33,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,插入,插入排序,16,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,排序,12,33,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,12,0,CON,CON
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置从而完成排序,排序,插入排序,33,0,CON,CON
线性表是一种数据元素之间存在一对一线性关系的数据结构，其特点包括有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有一个直接前驱,数据元素,线性表,6,0,CON,CON
回路是图中一条至少包含一条边且起点和终点相同的路径,路径,回路,23,0,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与目标值进行比较，直到找到目标值或遍历完整个数据序列的查找方式,遍历,数据元素,42,21,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与目标值进行比较，直到找到目标值或遍历完整个数据序列的查找方式,遍历,查找,42,52,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与目标值进行比较，直到找到目标值或遍历完整个数据序列的查找方式,遍历,查找,42,2,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与目标值进行比较，直到找到目标值或遍历完整个数据序列的查找方式,数据元素,查找,21,52,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与目标值进行比较，直到找到目标值或遍历完整个数据序列的查找方式,数据元素,查找,21,2,CON,CON
线性查找是从数据序列的一端开始，依次将每个数据元素与目标值进行比较，直到找到目标值或遍历完整个数据序列的查找方式,查找,查找,52,2,CON,CON
深度优先搜索是一种在图或树等数据结构中进行遍历的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到,深度优先搜索,遍历,0,21,CON,CON
深度优先搜索是一种在图或树等数据结构中进行遍历的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到,深度优先搜索,路径,0,45,CON,CON
深度优先搜索是一种在图或树等数据结构中进行遍历的算法，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到,遍历,路径,21,45,CON,CON
比较排序是基于元素间比较进行顺序排列的排序方式,排序,比较排序,19,0,CON,CON
深度优先搜索是一种在图或树等数据结构中，从起始节点开始沿着一条路径尽可能深地探索，直到无法继续或达到目标，然后回溯到前一步继续探索,路径,深度优先搜索,31,0,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,16,37,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,16,31,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,根节点,16,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,16,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,子节点,37,31,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,根节点,37,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,子节点,37,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,根节点,31,20,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,子节点,子节点,31,49,CON,CON
树是一种非线性数据结构，它有一个根节点，根节点可以有零个或多个子节点，每个子节点又可以有零个或多个子节点，以此类推形成,根节点,子节点,20,49,CON,CON
非线性结构的核心性质是存在一对多或多对多的关系，各数据元素之间不再保持线性关系，其中至少有一个数据元素有两个或两个以上的直接前驱或,数据元素,非线性结构,25,0,CON,CON
非线性结构的核心性质是存在一对多或多对多的关系，各数据元素之间不再保持线性关系，其中至少有一个数据元素有两个或两个以上的直接前驱或,数据元素,数据元素,25,47,CON,CON
非线性结构的核心性质是存在一对多或多对多的关系，各数据元素之间不再保持线性关系，其中至少有一个数据元素有两个或两个以上的直接前驱或,非线性结构,数据元素,0,47,CON,CON
线性查找是从数据序列的开头开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的一种查找方式其特点是比较,查找,查找,2,56,CON,CON
线性查找是从数据序列的开头开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的一种查找方式其特点是比较,查找,查找,2,25,CON,CON
线性查找是从数据序列的开头开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的一种查找方式其特点是比较,查找,遍历,2,46,CON,CON
线性查找是从数据序列的开头开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的一种查找方式其特点是比较,查找,查找,56,25,CON,CON
线性查找是从数据序列的开头开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的一种查找方式其特点是比较,查找,遍历,56,46,CON,CON
线性查找是从数据序列的开头开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列的一种查找方式其特点是比较,查找,遍历,25,46,CON,CON
抽象数据类型具有数据的逻辑结构、定义在该结构上的一组操作以及数据的封装性等特点,逻辑结构,抽象数据类型,11,0,CON,CON
二分查找是在有序数组中，通过不断将区间缩小一半的方式，查找目标元素是否存在并确定其位置的一种查找算法,数组,查找,8,27,CON,CON
二分查找是在有序数组中，通过不断将区间缩小一半的方式，查找目标元素是否存在并确定其位置的一种查找算法,数组,二分查找,8,0,CON,CON
二分查找是在有序数组中，通过不断将区间缩小一半的方式，查找目标元素是否存在并确定其位置的一种查找算法,数组,查找,8,46,CON,CON
二分查找是在有序数组中，通过不断将区间缩小一半的方式，查找目标元素是否存在并确定其位置的一种查找算法,查找,二分查找,27,0,CON,CON
二分查找是在有序数组中，通过不断将区间缩小一半的方式，查找目标元素是否存在并确定其位置的一种查找算法,查找,查找,27,46,CON,CON
二分查找是在有序数组中，通过不断将区间缩小一半的方式，查找目标元素是否存在并确定其位置的一种查找算法,二分查找,查找,0,46,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,路径,连通图,46,0,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,路径,有向图,46,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,路径,路径,46,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,路径,无向图,46,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,连通图,有向图,0,27,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,连通图,路径,0,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,连通图,无向图,0,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,有向图,路径,27,21,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,有向图,无向图,27,6,CON,CON
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于任意两个顶点都存在一条有向路径使得从一个顶点可到达另,路径,无向图,21,6,CON,CON
无向图的核心特征是由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即顶点之间的连接是双向的,集合,集合,22,12,CON,CON
无向图的核心特征是由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即顶点之间的连接是双向的,集合,无向图,22,0,CON,CON
无向图的核心特征是由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即顶点之间的连接是双向的,集合,无向图,12,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
非线性结构的核心特征是其各数据元素之间的逻辑关系不是一对一的线性关系，存在一对多、多对一或多对多等非简单线性的关系,非线性结构,数据元素,0,13,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，用于表示边的某种属性或代价等,图,加权图,6,0,CON,CON
比较排序是基于元素间比较来确定元素相对次序从而将给定元素序列重新排列成有序序列的排序算法,排序,比较排序,40,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,访问,36,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,广度优先搜索,36,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,访问,36,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,队列,遍历,36,46,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,广度优先搜索,15,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,访问,15,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,遍历,15,46,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,广度优先搜索,访问,0,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,广度优先搜索,遍历,0,46,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问距离起始节点近的节点，通过队列来辅助实现，直至遍历完所有节点或找到目标节点的搜索算法,访问,遍历,21,46,CON,CON
链表的核心特征是通过节点来存储数据，每个节点除了包含数据域外还包含一个指向下一个节点的指针，从而形成一个链式结构，使得数据的存储和访问,指针,访问,43,65,CON,CON
链表的核心特征是通过节点来存储数据，每个节点除了包含数据域外还包含一个指向下一个节点的指针，从而形成一个链式结构，使得数据的存储和访问,指针,链表,43,0,CON,CON
链表的核心特征是通过节点来存储数据，每个节点除了包含数据域外还包含一个指向下一个节点的指针，从而形成一个链式结构，使得数据的存储和访问,访问,链表,65,0,CON,CON
数据的物理结构是指数据在计算机中的存储方式包括数据元素的存储表示及其关系的表示,物理结构,数据元素,3,23,CON,CON
完全二叉树是若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h,二叉树,完全二叉树,8,0,CON,CON
时间复杂度是衡量算法执行时间随输入规模增长而变化的函数，它反映了算法执行时间的增长趋势，不同算法的时间复杂度不同，且时间复杂度低的算法在,时间复杂度,时间复杂度,58,49,CON,CON
时间复杂度是衡量算法执行时间随输入规模增长而变化的函数，它反映了算法执行时间的增长趋势，不同算法的时间复杂度不同，且时间复杂度低的算法在,时间复杂度,时间复杂度,58,0,CON,CON
时间复杂度是衡量算法执行时间随输入规模增长而变化的函数，它反映了算法执行时间的增长趋势，不同算法的时间复杂度不同，且时间复杂度低的算法在,时间复杂度,时间复杂度,49,0,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改这些元素,数组,集合,0,9,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改这些元素,数组,数据类型,0,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改这些元素,数组,访问,0,37,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改这些元素,集合,数据类型,9,23,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改这些元素,集合,访问,9,37,CON,CON
数组是一种有序数据集合，其中每个元素具有相同的数据类型，并且可以通过下标来访问和修改这些元素,数据类型,访问,23,37,CON,CON
完全二叉树是除最后一层外，每一层上的节点数均达到最大值，且最后一层上只缺少右边的若干节点的二叉树,完全二叉树,二叉树,0,45,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,父节点,9,28,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,根节点,9,14,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,树的节点,9,0,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,子节点,9,45,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,父节点,根节点,28,14,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,父节点,树的节点,28,0,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,父节点,子节点,28,45,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,树的节点,14,0,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,根节点,子节点,14,45,CON,CON
树的节点具有唯一的根节点且除根节点外每个节点有且仅有一个父节点同时每个节点可以有零个或多个子节点,树的节点,子节点,0,45,CON,CON
连通图是一个无向图，其中任意两个顶点之间都存在一条路径相连,连通图,路径,0,25,CON,CON
连通图是一个无向图，其中任意两个顶点之间都存在一条路径相连,连通图,无向图,0,6,CON,CON
连通图是一个无向图，其中任意两个顶点之间都存在一条路径相连,路径,无向图,25,6,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过它可以间接访问和操作该变量所存储的数据,指针,访问,0,30,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入,27,11,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,27,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,27,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的一种排序算法,排序,插入排序,15,0,CON,CON
堆排序利用堆结构将数据排序，根节点最大或最小,堆排序,根节点,0,14,CON,CON
堆排序利用堆结构将数据排序，根节点最大或最小,堆排序,堆,0,5,CON,CON
堆排序利用堆结构将数据排序，根节点最大或最小,堆排序,排序,0,11,CON,CON
堆排序利用堆结构将数据排序，根节点最大或最小,根节点,堆,14,5,CON,CON
堆排序利用堆结构将数据排序，根节点最大或最小,根节点,排序,14,11,CON,CON
堆排序利用堆结构将数据排序，根节点最大或最小,堆,排序,5,11,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,根节点,根节点,46,52,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,根节点,父节点,46,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,根节点,遍历,46,57,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,根节点,根节点,46,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,根节点,父节点,52,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,根节点,遍历,52,57,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,根节点,根节点,52,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,父节点,遍历,19,57,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,父节点,根节点,19,0,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接连接到根节点，通过根节点可以遍历整个,遍历,根节点,57,0,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,双向链表,14,0,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,指针,链表,14,17,CON,CON
双向链表是节点包含前驱和后继指针的链表结构,双向链表,链表,0,17,CON,CON
广度优先搜索按层次依次访问节点直至找到目标或遍历完所有节点,遍历,广度优先搜索,22,0,CON,CON
广度优先搜索按层次依次访问节点直至找到目标或遍历完所有节点,遍历,访问,22,11,CON,CON
广度优先搜索按层次依次访问节点直至找到目标或遍历完所有节点,广度优先搜索,访问,0,11,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,查找,19,45,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,查找,19,2,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,根节点,19,34,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,根节点,19,53,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,查找,45,2,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,根节点,45,34,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,根节点,45,53,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,根节点,2,34,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,查找,根节点,2,53,CON,CON
树的查找的特点的核心性质包括若树为空则查找失败，若树非空则将给定值与根节点值比较，若相等则查找成功，若小于根节点,根节点,根节点,34,53,CON,CON
回溯法是一种通过系统地尝试所有可能的解来解决问题的算法策略，它从问题的初始状态出发，按照深度优先搜索的方式，逐步构建解空间树，,回溯法,深度优先搜索,0,44,CON,CON
回溯法是一种通过系统地尝试所有可能的解来解决问题的算法策略，它从问题的初始状态出发，按照深度优先搜索的方式，逐步构建解空间树，,回溯法,树,0,61,CON,CON
回溯法是一种通过系统地尝试所有可能的解来解决问题的算法策略，它从问题的初始状态出发，按照深度优先搜索的方式，逐步构建解空间树，,深度优先搜索,树,44,61,CON,CON
冒泡排序比较相邻元素大小，若顺序错误就把它们交换过来，每一趟将一个最大或最小元素“冒泡”到数组末尾，经过多趟比较和交换使数组有序,数组,冒泡排序,45,0,CON,CON
冒泡排序比较相邻元素大小，若顺序错误就把它们交换过来，每一趟将一个最大或最小元素“冒泡”到数组末尾，经过多趟比较和交换使数组有序,数组,数组,45,60,CON,CON
冒泡排序比较相邻元素大小，若顺序错误就把它们交换过来，每一趟将一个最大或最小元素“冒泡”到数组末尾，经过多趟比较和交换使数组有序,冒泡排序,数组,0,60,CON,CON
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值,满二叉树,二叉树,0,22,CON,CON
队列的特点是先进先出，即先进入队列的元素先出队列,队列,队列,22,0,CON,CON
队列的特点是先进先出，即先进入队列的元素先出队列,队列,队列,22,15,CON,CON
队列的特点是先进先出，即先进入队列的元素先出队列,队列,队列,0,15,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则（如比较节点值等）逐步遍历树的节点，以确定目标元素是否存在于树中，不同类型,查找,根节点,2,11,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则（如比较节点值等）逐步遍历树的节点，以确定目标元素是否存在于树中，不同类型,查找,遍历,2,34,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则（如比较节点值等）逐步遍历树的节点，以确定目标元素是否存在于树中，不同类型,查找,树的节点,2,36,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则（如比较节点值等）逐步遍历树的节点，以确定目标元素是否存在于树中，不同类型,根节点,遍历,11,34,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则（如比较节点值等）逐步遍历树的节点，以确定目标元素是否存在于树中，不同类型,根节点,树的节点,11,36,CON,CON
树的查找的核心特征是从根节点开始，按照特定规则（如比较节点值等）逐步遍历树的节点，以确定目标元素是否存在于树中，不同类型,遍历,树的节点,34,36,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且具有层次,父节点,子节点,51,32,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且具有层次,父节点,根节点,51,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且具有层次,父节点,根节点,51,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且具有层次,子节点,根节点,32,17,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且具有层次,子节点,根节点,32,37,CON,CON
树是一种非线性的数据结构，它有一个根节点，且每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且具有层次,根节点,根节点,17,37,CON,CON
归并排序是将数组分治后合并有序子数组来排序,排序,数组,19,16,CON,CON
归并排序是将数组分治后合并有序子数组来排序,排序,数组,19,6,CON,CON
归并排序是将数组分治后合并有序子数组来排序,排序,归并排序,19,0,CON,CON
归并排序是将数组分治后合并有序子数组来排序,数组,数组,16,6,CON,CON
归并排序是将数组分治后合并有序子数组来排序,数组,归并排序,16,0,CON,CON
归并排序是将数组分治后合并有序子数组来排序,数组,归并排序,6,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
数组是相同类型数据的有序集合且内存连续存储,集合,数组,12,0,CON,CON
迭代法是一种通过从一个初始估计值出发，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的方法,迭代法,迭代,0,24,CON,CON
算法效率是指算法执行所需要的计算资源量，通常用时间复杂度和空间复杂度来衡量算法在时间和空间上的效率表现,空间复杂度,时间复杂度,29,23,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,根节点,44,40,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,二叉树,44,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,子节点,44,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,子节点,44,29,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,子节点,44,24,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,根节点,二叉树,40,0,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,根节点,子节点,40,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,根节点,子节点,40,29,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,根节点,子节点,40,24,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,子节点,0,18,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,子节点,0,29,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,二叉树,子节点,0,24,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,子节点,子节点,18,29,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,子节点,子节点,18,24,CON,CON
二叉树的核心特征是每个节点最多有两个子节点，即左子节点和右子节点，并且存在唯一的根节点，二叉树可以为空树，若不为空树,子节点,子节点,29,24,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素的表示方式、元素间关系的表示方法以及数据的存储结构等方面，,物理结构,数据元素,3,8,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素的表示方式、元素间关系的表示方法以及数据的存储结构等方面，,物理结构,存储结构,3,61,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素的表示方式、元素间关系的表示方法以及数据的存储结构等方面，,物理结构,数据元素,3,36,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素的表示方式、元素间关系的表示方法以及数据的存储结构等方面，,数据元素,存储结构,8,61,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素的表示方式、元素间关系的表示方法以及数据的存储结构等方面，,数据元素,数据元素,8,36,CON,CON
数据的物理结构是数据元素在计算机中的存储表示及其存储方式，其核心性质包括数据元素的表示方式、元素间关系的表示方法以及数据的存储结构等方面，,存储结构,数据元素,61,36,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个之外，结构中的每个数据元素,线性结构,数据元素,0,26,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个之外，结构中的每个数据元素,线性结构,数据元素,0,66,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个之外，结构中的每个数据元素,线性结构,数据元素,0,48,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个之外，结构中的每个数据元素,数据元素,数据元素,26,66,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个之外，结构中的每个数据元素,数据元素,数据元素,26,48,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素，存在唯一的一个被称作“最后一个”的数据元素，除第一个之外，结构中的每个数据元素,数据元素,数据元素,66,48,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，且每一趟比较都会将未排序部分的最大（或,数组,排序,40,44,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，且每一趟比较都会将未排序部分的最大（或,数组,排序,40,57,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，且每一趟比较都会将未排序部分的最大（或,数组,冒泡排序,40,0,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，且每一趟比较都会将未排序部分的最大（或,排序,排序,44,57,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，且每一趟比较都会将未排序部分的最大（或,排序,冒泡排序,44,0,CON,CON
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序，且每一趟比较都会将未排序部分的最大（或,排序,冒泡排序,57,0,CON,CON
算法效率是指算法执行所需要的时间和空间资源，通常用时间复杂度和空间复杂度来衡量，时间复杂度反映算法执行时间随输入规模增长的变化趋势，空间复杂度,空间复杂度,时间复杂度,66,40,CON,CON
算法效率是指算法执行所需要的时间和空间资源，通常用时间复杂度和空间复杂度来衡量，时间复杂度反映算法执行时间随输入规模增长的变化趋势，空间复杂度,空间复杂度,时间复杂度,66,25,CON,CON
算法效率是指算法执行所需要的时间和空间资源，通常用时间复杂度和空间复杂度来衡量，时间复杂度反映算法执行时间随输入规模增长的变化趋势，空间复杂度,空间复杂度,空间复杂度,66,31,CON,CON
算法效率是指算法执行所需要的时间和空间资源，通常用时间复杂度和空间复杂度来衡量，时间复杂度反映算法执行时间随输入规模增长的变化趋势，空间复杂度,时间复杂度,时间复杂度,40,25,CON,CON
算法效率是指算法执行所需要的时间和空间资源，通常用时间复杂度和空间复杂度来衡量，时间复杂度反映算法执行时间随输入规模增长的变化趋势，空间复杂度,时间复杂度,空间复杂度,40,31,CON,CON
算法效率是指算法执行所需要的时间和空间资源，通常用时间复杂度和空间复杂度来衡量，时间复杂度反映算法执行时间随输入规模增长的变化趋势，空间复杂度,时间复杂度,空间复杂度,25,31,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,52,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,排序,10,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,10,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,10,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,排序,52,49,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,数据元素,52,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,52,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,数据元素,49,13,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,排序,选择排序,49,0,CON,CON
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,数据元素,选择排序,13,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,36,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,40,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,19,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,19,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,19,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,36,40,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,36,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,36,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,36,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,36,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,40,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,40,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,40,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,40,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,58,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,58,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,58,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,线性表,表头,11,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,表头,单链表,17,0,CON,CON
线性结构的核心性质是数据元素之间存在着一对一的线性关系，即除第一个元素外，每个元素有且仅有一个前驱,线性结构,数据元素,0,10,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,线性表,数据元素,11,28,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,线性表,指针,11,42,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,线性表,尾节点,11,49,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,单链表,数据元素,0,28,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,单链表,指针,0,42,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,单链表,尾节点,0,49,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,数据元素,指针,28,42,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,数据元素,尾节点,28,49,CON,CON
单链表是一种链式存储的线性表，其核心性质包括每个节点包含数据元素以及指向下一个节点的指针，并且除了尾节点外每个节点都有唯一的后继,指针,尾节点,42,49,CON,CON
二叉树是一种每个节点最多有两个子树的树形结构,子树,二叉树,15,0,CON,CON
穷举法的核心特征是对问题所有可能的情况进行逐一列举和检验，通过遍历所有可能解来找到符合条件的答案,穷举法,遍历,0,31,CON,CON
迭代法是一种通过从一个初始估计出发，按照一定的迭代公式不断重复计算以逐步逼近问题精确解的方法,迭代法,迭代,0,23,CON,CON
线性表是零个或多个数据元素的有限序列,数据元素,线性表,9,0,CON,CON
迭代法是一种通过从一个初始估计出发，利用迭代公式逐步逼近问题精确解的方法其特点包括能将复杂问题转化为简单重复的计算过程，计算过程相对直观,迭代法,迭代,0,20,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的最底层没有分支延伸，度为0，在数据处理和遍历等操作中具有特殊意义如,遍历,叶子节点,47,0,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的最底层没有分支延伸，度为0，在数据处理和遍历等操作中具有特殊意义如,遍历,子节点,47,11,CON,CON
叶子节点是树结构中没有子节点的节点，其特点包括处于树的最底层没有分支延伸，度为0，在数据处理和遍历等操作中具有特殊意义如,叶子节点,子节点,0,11,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中每个数据元素在序列中都有唯一的前驱（除第一个元素外）和,数据元素,数据类型,20,8,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中每个数据元素在序列中都有唯一的前驱（除第一个元素外）和,数据元素,线性表,20,0,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中每个数据元素在序列中都有唯一的前驱（除第一个元素外）和,数据元素,数据元素,20,34,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中每个数据元素在序列中都有唯一的前驱（除第一个元素外）和,数据类型,线性表,8,0,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中每个数据元素在序列中都有唯一的前驱（除第一个元素外）和,数据类型,数据元素,8,34,CON,CON
线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列，其中每个数据元素在序列中都有唯一的前驱（除第一个元素外）和,线性表,数据元素,0,34,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列,数据元素,数据类型,15,8,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列,数据元素,线性表,15,0,CON,CON
线性表是具有相同数据类型的n个数据元素的有限序列,数据类型,线性表,8,0,CON,CON
二叉树每个节点最多有两个子节点且有层次结构,子节点,二叉树,12,0,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,排序,递归,19,59,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,排序,数组,19,8,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,排序,排序,19,61,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,排序,数组,19,22,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,排序,快速排序,19,0,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,递归,数组,59,8,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,递归,排序,59,61,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,递归,数组,59,22,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,递归,快速排序,59,0,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,数组,排序,8,61,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,数组,数组,8,22,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,数组,快速排序,8,0,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,排序,数组,61,22,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,排序,快速排序,61,0,CON,CON
快速排序是对无序数组进行分治，通过一趟排序将数组分为两部分，小于基准值的元素在前大于基准值的元素在后，然后对两部分分别递归排序以,数组,快速排序,22,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，,左子树,二叉搜索树,22,0,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，,左子树,右子树,22,41,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中所有节点的值均小于该节点的值，右子树中所有节点的值均大于该节点的值，,二叉搜索树,右子树,0,41,CON,CON
回溯法基础的核心特征是在问题求解过程中，通过尝试不同的选择路径，当发现当前路径无法达到目标或不满足条件时，就返回到上一步重新选择,路径,回溯法,37,0,CON,CON
回溯法基础的核心特征是在问题求解过程中，通过尝试不同的选择路径，当发现当前路径无法达到目标或不满足条件时，就返回到上一步重新选择,路径,路径,37,29,CON,CON
回溯法基础的核心特征是在问题求解过程中，通过尝试不同的选择路径，当发现当前路径无法达到目标或不满足条件时，就返回到上一步重新选择,回溯法,路径,0,29,CON,CON
比较排序是通过元素之间的比较来确定元素的相对次序从而实现排序的一种排序算法，其核心性质包括对于n个元素进行排序至少需要O(nlogn)次,排序,排序,28,33,CON,CON
比较排序是通过元素之间的比较来确定元素的相对次序从而实现排序的一种排序算法，其核心性质包括对于n个元素进行排序至少需要O(nlogn)次,排序,比较排序,28,0,CON,CON
比较排序是通过元素之间的比较来确定元素的相对次序从而实现排序的一种排序算法，其核心性质包括对于n个元素进行排序至少需要O(nlogn)次,排序,排序,28,53,CON,CON
比较排序是通过元素之间的比较来确定元素的相对次序从而实现排序的一种排序算法，其核心性质包括对于n个元素进行排序至少需要O(nlogn)次,排序,比较排序,33,0,CON,CON
比较排序是通过元素之间的比较来确定元素的相对次序从而实现排序的一种排序算法，其核心性质包括对于n个元素进行排序至少需要O(nlogn)次,排序,排序,33,53,CON,CON
比较排序是通过元素之间的比较来确定元素的相对次序从而实现排序的一种排序算法，其核心性质包括对于n个元素进行排序至少需要O(nlogn)次,比较排序,排序,0,53,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,树,回溯法,47,0,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,树,根节点,47,37,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,树,深度优先搜索,47,27,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,回溯法,根节点,0,37,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,回溯法,深度优先搜索,0,27,CON,CON
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,根节点,深度优先搜索,37,27,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素且存在唯一的一个被称作“最后一个”的数据元素以及除第一个之外的数据元素均有唯一的,线性结构,数据元素,0,61,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素且存在唯一的一个被称作“最后一个”的数据元素以及除第一个之外的数据元素均有唯一的,线性结构,数据元素,0,26,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素且存在唯一的一个被称作“最后一个”的数据元素以及除第一个之外的数据元素均有唯一的,线性结构,数据元素,0,48,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素且存在唯一的一个被称作“最后一个”的数据元素以及除第一个之外的数据元素均有唯一的,数据元素,数据元素,61,26,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素且存在唯一的一个被称作“最后一个”的数据元素以及除第一个之外的数据元素均有唯一的,数据元素,数据元素,61,48,CON,CON
线性结构的核心性质是存在唯一的一个被称作“第一个”的数据元素且存在唯一的一个被称作“最后一个”的数据元素以及除第一个之外的数据元素均有唯一的,数据元素,数据元素,26,48,CON,CON
叶子节点是树结构中没有子节点的节点,叶子节点,子节点,0,11,CON,CON
在有序数组中通过不断二分比较查找目标值的方法,查找,数组,14,3,CON,CON
树的高度是从根节点到最远叶节点的最长路径上边的数目,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶节点的最长路径上边的数目,根节点,路径,6,18,CON,CON
树的高度是从根节点到最远叶节点的最长路径上边的数目,树的高度,路径,0,18,CON,CON
图的边是连接图中顶点的线，具有两个端点且方向可分为有向边和无向边，边可有权重，边的集合决定了图的连通性,集合,图的边,41,0,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,子节点,父节点,54,0,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,子节点,父节点,54,35,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,子节点,前驱节点,54,28,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,子节点,子节点,54,41,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,父节点,父节点,0,35,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,父节点,前驱节点,0,28,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,父节点,子节点,0,41,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,父节点,前驱节点,35,28,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,父节点,子节点,35,41,CON,CON
父节点的核心性质是在树形结构中，每个节点有且仅有一个直接前驱节点被称为父节点，它与子节点存在特定的关联关系，子节点依赖于父,前驱节点,子节点,28,41,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,插入,11,43,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,映射,11,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,哈希表,11,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,映射,11,65,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,哈希函数,11,61,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,删除,11,49,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,查找,11,46,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,插入,映射,43,17,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,插入,哈希表,43,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,插入,映射,43,65,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,插入,哈希函数,43,61,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,插入,删除,43,49,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,插入,查找,43,46,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,哈希表,17,0,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,映射,17,65,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,哈希函数,17,61,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,删除,17,49,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,查找,17,46,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希表,映射,0,65,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希表,哈希函数,0,61,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希表,删除,0,49,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希表,查找,0,46,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,哈希函数,65,61,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,删除,65,49,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,映射,查找,65,46,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,删除,61,49,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,哈希函数,查找,61,46,CON,CON
哈希表的核心特征是通过哈希函数将键映射为特定索引，使得数据能以接近常数时间的复杂度进行插入、查找和删除操作，并且不同键经过哈希函数映射,删除,查找,49,46,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质是逐一比较数据元素直到,遍历,查找,43,2,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质是逐一比较数据元素直到,遍历,数据元素,43,61,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列，其核心性质是逐一比较数据元素直到,查找,数据元素,2,61,CON,CON
根节点是树结构中没有前驱节点且唯一的起始节点，它处于树的顶层位置，是整个树状结构的入口和基础，所有其他节点都直接或间接连接,根节点,前驱节点,0,10,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,集合,根节点,54,29,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,集合,集合,54,49,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,集合,集合,54,64,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,集合,树,54,60,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,根节点,集合,29,49,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,根节点,集合,29,64,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,根节点,树,29,60,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,集合,集合,49,64,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,集合,树,49,60,CON,CON
树的定义的核心特征是它是一种非线性的数据结构，有且仅有一个根节点，其余节点被分为若干互不相交的有限集合，每个集合又是一棵树，这些集合称为,集合,树,64,60,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,尾节点,指针,14,18,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,尾节点,头节点,14,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,尾节点,链表,14,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,尾节点,链表,14,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,尾节点,循环链表,14,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,指针,头节点,18,23,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,指针,链表,18,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,指针,链表,18,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,指针,循环链表,18,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,头节点,链表,23,31,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,头节点,链表,23,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,头节点,循环链表,23,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,链表,链表,31,10,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,链表,循环链表,31,0,CON,CON
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，使得整个链表形成一个环,链表,循环链表,10,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到该起始顶点且经过的边不重复,回路,回路,0,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到该起始顶点且经过的边不重复,回路,回路,0,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到该起始顶点且经过的边不重复,回路,遍历,0,24,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到该起始顶点且经过的边不重复,回路,回路,20,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到该起始顶点且经过的边不重复,回路,遍历,20,24,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到该起始顶点且经过的边不重复,回路,遍历,9,24,CON,CON
指针的核心性质是其存储的是变量的内存地址并可通过该地址间接访问和操作对应变量,访问,指针,29,0,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,链表,数据元素,63,31,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,链表,单链表,63,0,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,链表,指针,63,51,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,链表,指针,63,46,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,数据元素,单链表,31,0,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,数据元素,指针,31,51,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,数据元素,指针,31,46,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,单链表,指针,0,51,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,单链表,指针,0,46,CON,CON
单链表是一种线性数据结构，其特点的核心特征包括每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针依次连接各个节点形成链表结构，且,指针,指针,51,46,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,树,47,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,左子树,47,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,排序,47,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,平衡二叉树,47,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,子树,右子树,47,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,左子树,12,21,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,平衡二叉树,12,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,树,右子树,12,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,排序,21,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,平衡二叉树,21,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,左子树,右子树,21,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,平衡二叉树,0,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,0,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,平衡二叉树,10,53,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,排序,右子树,10,25,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,平衡二叉树,右子树,53,25,CON,CON
稳定性是指在数据结构中，相同关键字的元素在排序前后相对位置保持不变的特性,排序,稳定性,21,0,CON,CON
比较排序是基于元素间比较进行顺序排列的排序方式,排序,比较排序,19,0,CON,CON
邻接矩阵是表示图的一种方式，其特点的核心性质为若图中有n个顶点，则邻接矩阵是一个n×n的方阵，矩阵中元素的值表示对应,邻接矩阵,邻接矩阵,0,33,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,访问,58,41,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,访问,58,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,广度优先搜索,58,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,访问,58,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,访问,41,15,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,广度优先搜索,41,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,访问,41,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,广度优先搜索,15,0,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,访问,访问,15,21,CON,CON
广度优先搜索是一种按照层次依次访问节点，先访问离起始节点距离为 0 的节点，再依次访问距离为 1、2 等的节点，直到访问完,广度优先搜索,访问,0,21,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,叶子节点,27,9,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,树的深度,27,31,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,根节点,27,54,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,路径,27,18,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,根节点,27,3,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,叶子节点,树的深度,9,31,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,叶子节点,根节点,9,54,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,叶子节点,路径,9,18,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,叶子节点,根节点,9,3,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,根节点,31,54,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,路径,31,18,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,树的深度,根节点,31,3,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,根节点,路径,54,18,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,根节点,根节点,54,3,CON,CON
树中从根节点到最远叶子节点的最长简单路径上的节点数就是树的深度树的深度具有每层节点数随着深度增加而变化以及从根节点到叶节点,路径,根节点,18,3,CON,CON
循环链表是一种首尾相连的链表结构,链表,循环链表,12,0,CON,CON
链表是一种通过指针将一组节点连接起来的数据结构，每个节点包含数据和指向下一个节点的指针，最后一个节点的指针指向空值,指针,指针,51,7,CON,CON
链表是一种通过指针将一组节点连接起来的数据结构，每个节点包含数据和指向下一个节点的指针，最后一个节点的指针指向空值,指针,链表,51,0,CON,CON
链表是一种通过指针将一组节点连接起来的数据结构，每个节点包含数据和指向下一个节点的指针，最后一个节点的指针指向空值,指针,指针,51,41,CON,CON
链表是一种通过指针将一组节点连接起来的数据结构，每个节点包含数据和指向下一个节点的指针，最后一个节点的指针指向空值,指针,链表,7,0,CON,CON
链表是一种通过指针将一组节点连接起来的数据结构，每个节点包含数据和指向下一个节点的指针，最后一个节点的指针指向空值,指针,指针,7,41,CON,CON
链表是一种通过指针将一组节点连接起来的数据结构，每个节点包含数据和指向下一个节点的指针，最后一个节点的指针指向空值,链表,指针,0,41,CON,CON
存储结构的核心特征是数据元素在计算机存储器中的存储方式以及它们之间的逻辑关系的表示，包括顺序存储结构通过连续存储单元存储数据元素以体现其逻辑顺序，,数据元素,存储结构,60,0,CON,CON
存储结构的核心特征是数据元素在计算机存储器中的存储方式以及它们之间的逻辑关系的表示，包括顺序存储结构通过连续存储单元存储数据元素以体现其逻辑顺序，,数据元素,数据元素,60,10,CON,CON
存储结构的核心特征是数据元素在计算机存储器中的存储方式以及它们之间的逻辑关系的表示，包括顺序存储结构通过连续存储单元存储数据元素以体现其逻辑顺序，,存储结构,数据元素,0,10,CON,CON
树的节点是包含数据及指向子节点的指针（若存在子节点）的基本数据结构单元,子节点,指针,12,16,CON,CON
树的节点是包含数据及指向子节点的指针（若存在子节点）的基本数据结构单元,子节点,子节点,12,22,CON,CON
树的节点是包含数据及指向子节点的指针（若存在子节点）的基本数据结构单元,子节点,树的节点,12,0,CON,CON
树的节点是包含数据及指向子节点的指针（若存在子节点）的基本数据结构单元,指针,子节点,16,22,CON,CON
树的节点是包含数据及指向子节点的指针（若存在子节点）的基本数据结构单元,指针,树的节点,16,0,CON,CON
树的节点是包含数据及指向子节点的指针（若存在子节点）的基本数据结构单元,子节点,树的节点,22,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾从而实现对数组进行排序的算法,排序,数组,59,55,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾从而实现对数组进行排序的算法,排序,冒泡排序,59,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾从而实现对数组进行排序的算法,排序,数组,59,46,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾从而实现对数组进行排序的算法,数组,冒泡排序,55,0,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾从而实现对数组进行排序的算法,数组,数组,55,46,CON,CON
冒泡排序是一种比较相邻元素大小并在需要时交换位置，通过多次重复此过程将最大元素逐步“冒泡”到数组末尾从而实现对数组进行排序的算法,冒泡排序,数组,0,46,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,10,59,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,10,14,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,10,45,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,10,35,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,10,49,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,59,14,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,59,45,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,59,35,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,59,49,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,14,45,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,14,35,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,14,49,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,45,35,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,45,49,CON,CON
图的核心性质包括顶点集合、边集合以及顶点与边之间的关联关系等，其中顶点集合是图中所有顶点的集合，边集合是连接顶点的边的集合,集合,集合,35,49,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,排序,数组,30,8,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,排序,排序,30,12,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,排序,数组,30,33,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,排序,快速排序,30,0,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,数组,排序,8,12,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,数组,数组,8,33,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,数组,快速排序,8,0,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,排序,数组,12,33,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,排序,快速排序,12,0,CON,CON
快速排序是对无序数组进行排序的高效算法，其核心性质是通过一趟排序将数组分为两部分，使得左边部分元素都小于等于右边部分元素，然后对左右两,数组,快速排序,33,0,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法,排序,数组,43,39,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法,排序,排序,43,47,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法,排序,冒泡排序,43,0,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法,数组,排序,39,47,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法,数组,冒泡排序,39,0,CON,CON
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法,排序,冒泡排序,47,0,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,树的节点,数据元素,0,16,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,树的节点,根节点,0,33,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,树的节点,父节点,0,42,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,树的节点,子节点,0,27,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,数据元素,根节点,16,33,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,数据元素,父节点,16,42,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,数据元素,子节点,16,27,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,根节点,父节点,33,42,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,根节点,子节点,33,27,CON,CON
树的节点是树结构中的基本单元包含数据元素且有零个或多个子节点每个非根节点有且仅有一个父节点,父节点,子节点,42,27,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入,23,11,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,排序,23,7,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,排序,23,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入排序,23,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,插入,排序,11,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,排序,7,14,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入已排序序列合适位置的排序算法,排序,插入排序,14,0,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,数组,排序,19,57,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,数组,数组,19,8,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,数组,递归,19,55,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,数组,快速排序,19,0,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,排序,数组,57,8,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,排序,递归,57,55,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,排序,快速排序,57,0,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,数组,递归,8,55,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,数组,快速排序,8,0,CON,CON
快速排序是对无序数组通过选择基准元素将数组划分为两部分，小于基准的放在左边大于基准的放在右边，然后对两部分分别递归排序以达到整体有序，,递归,快速排序,55,0,CON,CON
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值,左子树,右子树,10,20,CON,CON
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值,左子树,二叉搜索树,10,0,CON,CON
二叉搜索树中每个节点左子树值小于该节点值右子树值大于该节点值,右子树,二叉搜索树,20,0,CON,CON
根节点是树结构中没有父节点的唯一节点，处于树的最顶端位置，是树的起始点，它在层次结构中具有特殊地位，是整个树结构数据,父节点,根节点,10,0,CON,CON
数据的逻辑结构的特点的核心性质包括数据元素之间具有特定的逻辑关系，这种关系决定了数据的组织方式和操作方法，并且不同的逻辑结构适用于不同的,逻辑结构,数据元素,3,17,CON,CON
数据的逻辑结构的特点的核心性质包括数据元素之间具有特定的逻辑关系，这种关系决定了数据的组织方式和操作方法，并且不同的逻辑结构适用于不同的,逻辑结构,逻辑结构,3,58,CON,CON
数据的逻辑结构的特点的核心性质包括数据元素之间具有特定的逻辑关系，这种关系决定了数据的组织方式和操作方法，并且不同的逻辑结构适用于不同的,数据元素,逻辑结构,17,58,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,二叉树,38,17,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,满二叉树,完全二叉树,38,0,CON,CON
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,二叉树,完全二叉树,17,0,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质,存储结构,数据元素,0,29,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有数据元素的表示和关系的表示这两个核心性质,数据元素,数据元素,29,6,CON,CON
树是一种有根节点且子节点关系唯一的非线性结构,子节点,非线性结构,9,17,CON,CON
树是一种有根节点且子节点关系唯一的非线性结构,子节点,根节点,9,5,CON,CON
树是一种有根节点且子节点关系唯一的非线性结构,非线性结构,根节点,17,5,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点,深度优先搜索,路径,0,43,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点,深度优先搜索,遍历,0,11,CON,CON
深度优先搜索是一种用于遍历或搜索图或树的算法策略，其核心特征是从起始节点开始，沿着一条路径尽可能深地探索，直到无法继续或达到目标节点,路径,遍历,43,11,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,父节点,完全二叉树,28,18,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,父节点,堆排序,28,0,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,父节点,堆,28,14,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,父节点,父节点,28,49,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,完全二叉树,堆排序,18,0,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,完全二叉树,堆,18,14,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,完全二叉树,父节点,18,49,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,堆排序,堆,0,14,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,堆排序,父节点,0,49,CON,CON
堆排序的特点的核心性质包括：堆是一种完全二叉树，大顶堆中父节点的值大于或等于其子节点的值，小顶堆中父节点的值小于或等于,堆,父节点,14,49,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作（称为队尾），而在另一端进行删除操作（称为队头），遵循先进,线性表,插入,8,26,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作（称为队尾），而在另一端进行删除操作（称为队头），遵循先进,线性表,队列,8,0,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作（称为队尾），而在另一端进行删除操作（称为队头），遵循先进,线性表,删除,8,44,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作（称为队尾），而在另一端进行删除操作（称为队头），遵循先进,插入,队列,26,0,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作（称为队尾），而在另一端进行删除操作（称为队头），遵循先进,插入,删除,26,44,CON,CON
队列是一种特殊的线性表，其特点是只允许在表的一端进行插入操作（称为队尾），而在另一端进行删除操作（称为队头），遵循先进,队列,删除,0,44,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,数据元素,18,41,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,18,0,CON,CON
非线性结构是指在该结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继，其数据元素之间的关系不再是一对一的线性关系,数据元素,非线性结构,41,0,CON,CON
比较排序是通过比较元素大小来确定元素最终位置的排序,排序,比较排序,23,0,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个检查元素，直到找到目标元素或遍历完整个序列的查找方法，其特点的核心性质是顺序性地对,查找,遍历,2,38,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个检查元素，直到找到目标元素或遍历完整个序列的查找方法，其特点的核心性质是顺序性地对,查找,查找,2,46,CON,CON
线性查找是一种在数据序列中从起始位置开始依次逐个检查元素，直到找到目标元素或遍历完整个序列的查找方法，其特点的核心性质是顺序性地对,遍历,查找,38,46,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,遍历,回路,24,48,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,遍历,回路,24,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,遍历,回路,24,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,遍历,回路,24,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,回路,回路,48,0,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,回路,回路,48,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,回路,回路,48,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,回路,回路,0,9,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,回路,回路,0,20,CON,CON
回路的核心性质是从回路中任一顶点出发，沿回路的边遍历，最终能回到起始顶点且所经过的边不重复，并且回路中各顶点之间存在特定的,回路,回路,9,20,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在垂直方向上的层次数量和结构复杂度，不同,路径,叶子节点,27,17,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在垂直方向上的层次数量和结构复杂度，不同,路径,树的深度,27,0,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在垂直方向上的层次数量和结构复杂度，不同,路径,根节点,27,11,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在垂直方向上的层次数量和结构复杂度，不同,叶子节点,树的深度,17,0,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在垂直方向上的层次数量和结构复杂度，不同,叶子节点,根节点,17,11,CON,CON
树的深度的核心特征是从根节点到最远叶子节点所经过的最长路径上的节点数，它反映了树在垂直方向上的层次数量和结构复杂度，不同,树的深度,根节点,0,11,CON,CON
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中行和列分别对应图的顶点，矩阵元素的值表示对应顶点之间是否存在边以及边的相关属性,邻接矩阵,图的顶点,0,32,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,根节点,路径,6,18,CON,CON
树的深度是从根节点到最远叶节点的最长路径长度,树的深度,路径,0,18,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,访问,插入,41,61,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,访问,数组,41,0,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,访问,数据元素,41,14,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,访问,集合,41,21,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,访问,数据类型,41,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,访问,删除,41,64,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,插入,数组,61,0,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,插入,数据元素,61,14,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,插入,集合,61,21,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,插入,数据类型,61,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,插入,删除,61,64,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数组,数据元素,0,14,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数组,集合,0,21,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数组,数据类型,0,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数组,删除,0,64,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数据元素,集合,14,21,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数据元素,数据类型,14,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数据元素,删除,14,64,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,集合,数据类型,21,7,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,集合,删除,21,64,CON,CON
数组是具有相同数据类型的一组数据元素的有序集合，在内存中连续存储，通过下标可以快速访问元素，其大小通常在创建时确定，元素的插入和删除,数据类型,删除,7,64,CON,CON
连通图中任意两点之间都存在路径可相互到达,连通图,路径,0,13,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，直到遍历完所有,路径,遍历,23,65,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，直到遍历完所有,路径,路径,23,60,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，直到遍历完所有,路径,深度优先搜索,23,0,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，直到遍历完所有,遍历,路径,65,60,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，直到遍历完所有,遍历,深度优先搜索,65,0,CON,CON
深度优先搜索的核心性质是从起始节点开始沿着一条路径尽可能深地探索直到无法继续或达到目标节点，然后回溯到前一步继续探索其他路径，直到遍历完所有,路径,深度优先搜索,60,0,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,堆排序,排序,0,24,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,堆排序,堆,0,14,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,堆排序,堆,0,39,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,堆排序,堆,0,52,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,排序,堆,24,14,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,排序,堆,24,39,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,排序,堆,24,52,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,堆,堆,14,39,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,堆,堆,14,52,CON,CON
堆排序的特点的核心性质是利用堆这种数据结构，将待排序序列构建成一个最大堆或最小堆，每次取出堆顶元素并调整堆，最终得到有序序列,堆,堆,39,52,CON,CON
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到,二叉树,二叉树,10,16,CON,CON
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到,二叉树,完全二叉树,10,0,CON,CON
完全二叉树是这样一种二叉树，若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到,二叉树,完全二叉树,16,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,7,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,排序,11,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,插入,插入排序,11,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,7,15,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,7,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,7,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,排序,15,25,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,15,0,CON,CON
插入排序是将未排序数据插入到已排序序列的合适位置的排序算法,排序,插入排序,25,0,CON,CON
比较排序是基于元素间比较来确定元素相对位置的排序方法,排序,比较排序,22,0,CON,CON
树的度是树内各节点的度的最大值，其中节点的度是指该节点拥有的子树的数目,树的度,子树,0,30,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,存储结构,数据元素,0,31,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,存储结构,访问,0,51,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,存储结构,操作效率,0,44,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,存储结构,数据元素,0,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,数据元素,访问,31,51,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,数据元素,操作效率,31,44,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,数据元素,数据元素,31,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,访问,操作效率,51,44,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,访问,数据元素,51,6,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示，它具有决定数据元素存储方式、影响数据操作效率及数据访问便利性等特点,操作效率,数据元素,44,6,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,子节点,叶子节点,22,38,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,子节点,满二叉树,22,0,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,子节点,二叉树,22,7,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,子节点,子节点,22,30,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,叶子节点,满二叉树,38,0,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,叶子节点,二叉树,38,7,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,叶子节点,子节点,38,30,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,满二叉树,二叉树,0,7,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,满二叉树,子节点,0,30,CON,CON
满二叉树是一棵二叉树，其中每个节点要么有两个子节点，要么没有子节点，并且所有叶子节点都在同一层上,二叉树,子节点,7,30,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,树,23,12,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,平衡二叉树,23,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,排序,23,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,平衡二叉树,23,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,子树,子树,23,39,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,树,平衡二叉树,12,0,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,树,排序,12,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,树,平衡二叉树,12,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,树,子树,12,39,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,排序,0,10,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,平衡二叉树,0,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,子树,0,39,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,排序,平衡二叉树,10,43,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,排序,子树,10,39,CON,CON
平衡二叉树是一种二叉排序树，其中每个节点的左右子树高度差的绝对值不超过1且左右子树均为平衡二叉树,平衡二叉树,子树,43,39,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即连接两个顶点的边没有特定的起始顶点和终止顶点,集合,集合,13,23,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即连接两个顶点的边没有特定的起始顶点和终止顶点,集合,图,13,6,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即连接两个顶点的边没有特定的起始顶点和终止顶点,集合,无向图,13,0,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即连接两个顶点的边没有特定的起始顶点和终止顶点,集合,图,23,6,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即连接两个顶点的边没有特定的起始顶点和终止顶点,集合,无向图,23,0,CON,CON
无向图是一种图结构，由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即连接两个顶点的边没有特定的起始顶点和终止顶点,图,无向图,6,0,CON,CON
比较排序是基于元素间比较来确定其最终排序位置,比较排序,排序,0,18,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除了第一个元素无前驱,数据元素,线性结构,30,0,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除了第一个元素无前驱,数据元素,数据元素,30,7,CON,CON
线性结构是一种数据元素之间存在一对一线性关系的数据结构，其中数据元素按顺序排列，每个元素有且仅有一个直接前驱和一个直接后继（除了第一个元素无前驱,线性结构,数据元素,0,7,CON,CON
稳定性是指在排序算法中，相等元素在排序前后的相对位置保持不变的特性,排序,排序,6,17,CON,CON
稳定性是指在排序算法中，相等元素在排序前后的相对位置保持不变的特性,排序,稳定性,6,0,CON,CON
稳定性是指在排序算法中，相等元素在排序前后的相对位置保持不变的特性,排序,稳定性,17,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，通过这些权重值,边的权重,图,43,6,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，通过这些权重值,边的权重,加权图,43,0,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值，该权重值表示边的某种属性或代价，不同边的权重值可以不同，通过这些权重值,图,加权图,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,路径,6,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,路径,0,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数,路径,叶子节点,21,12,CON,CON
加权图是一种图结构，其中每条边都被赋予一个权重值以表示该边的某种属性或代价等,图,加权图,6,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，从而直观地反映图中,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，从而直观地反映图中,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中存储与该顶点相邻接的其他顶点，从而直观地反映图中,链表,邻接表,35,0,CON,CON
在树形数据结构中，根节点是没有前驱节点且位于树顶端的特殊节点,前驱节点,根节点,15,9,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，,二叉搜索树,左子树,0,22,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，,二叉搜索树,右子树,0,42,CON,CON
二叉搜索树的核心特征是对于树中的每个节点，其左子树中的所有节点的值均小于该节点的值，右子树中的所有节点的值均大于该节点的值，,左子树,右子树,22,42,CON,CON
线性结构中数据元素存在一对一的线性关系,线性结构,数据元素,0,5,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构，其核心特征,链表,指针,59,39,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构，其核心特征,链表,链表,59,0,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构，其核心特征,链表,指针,59,44,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构，其核心特征,指针,链表,39,0,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构，其核心特征,指针,指针,39,44,CON,CON
链表是一种线性数据结构，它由一系列节点组成，每个节点包含数据和指向下一个节点的指针，通过指针将各个节点依次连接起来形成链表结构，其核心特征,链表,指针,0,44,CON,CON
映射是一种具有特定对应关系的数据结构特点，它使得集合A中的每一个元素在集合B中都有唯一确定的元素与之对应,映射,集合,0,35,CON,CON
映射是一种具有特定对应关系的数据结构特点，它使得集合A中的每一个元素在集合B中都有唯一确定的元素与之对应,映射,集合,0,24,CON,CON
映射是一种具有特定对应关系的数据结构特点，它使得集合A中的每一个元素在集合B中都有唯一确定的元素与之对应,集合,集合,35,24,CON,CON
循环链表的核心特征是表中最后一个节点的指针域指向头节点，从而使整个链表形成一个环,指针,循环链表,19,0,CON,CON
循环链表的核心特征是表中最后一个节点的指针域指向头节点，从而使整个链表形成一个环,指针,链表,19,33,CON,CON
循环链表的核心特征是表中最后一个节点的指针域指向头节点，从而使整个链表形成一个环,指针,头节点,19,24,CON,CON
循环链表的核心特征是表中最后一个节点的指针域指向头节点，从而使整个链表形成一个环,循环链表,链表,0,33,CON,CON
循环链表的核心特征是表中最后一个节点的指针域指向头节点，从而使整个链表形成一个环,循环链表,头节点,0,24,CON,CON
循环链表的核心特征是表中最后一个节点的指针域指向头节点，从而使整个链表形成一个环,链表,头节点,33,24,CON,CON
图的边是连接图中两个顶点的线表示顶点之间的关系其具有方向或无方向对于有向图边是有方向的从一个顶点指向另一个顶点对于无,有向图,图的边,34,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,头节点,循环链表,28,0,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,头节点,遍历,28,58,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,头节点,指针,28,24,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,头节点,链表,28,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,头节点,链表,28,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,头节点,遍历,28,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,循环链表,遍历,0,58,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,循环链表,指针,0,24,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,循环链表,链表,0,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,循环链表,链表,0,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,循环链表,遍历,0,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,遍历,指针,58,24,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,遍历,链表,58,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,遍历,链表,58,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,遍历,遍历,58,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,指针,链表,24,10,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,指针,链表,24,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,指针,遍历,24,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,链表,链表,10,45,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,链表,遍历,10,55,CON,CON
循环链表是一种特殊的链表，其特点是最后一个节点的指针指向头节点，从而形成一个环形结构，使得链表中的节点可以依次遍历且遍历可以循环进行,链表,遍历,45,55,CON,CON
数据的物理结构是数据在计算机中的存储方式，它具有紧密依赖计算机硬件、直接影响数据处理效率、决定数据在存储器中的存储位置及顺序、与数据的逻辑结构,物理结构,逻辑结构,3,67,CON,CON
堆排序的核心特征是将数组构建成一个堆，利用堆的特性，每次取出堆顶元素并重新调整堆，使得剩余元素依然保持堆的结构，最终实现对,堆,堆排序,39,0,CON,CON
堆排序的核心特征是将数组构建成一个堆，利用堆的特性，每次取出堆顶元素并重新调整堆，使得剩余元素依然保持堆的结构，最终实现对,堆,堆,39,17,CON,CON
堆排序的核心特征是将数组构建成一个堆，利用堆的特性，每次取出堆顶元素并重新调整堆，使得剩余元素依然保持堆的结构，最终实现对,堆,数组,39,10,CON,CON
堆排序的核心特征是将数组构建成一个堆，利用堆的特性，每次取出堆顶元素并重新调整堆，使得剩余元素依然保持堆的结构，最终实现对,堆排序,堆,0,17,CON,CON
堆排序的核心特征是将数组构建成一个堆，利用堆的特性，每次取出堆顶元素并重新调整堆，使得剩余元素依然保持堆的结构，最终实现对,堆排序,数组,0,10,CON,CON
堆排序的核心特征是将数组构建成一个堆，利用堆的特性，每次取出堆顶元素并重新调整堆，使得剩余元素依然保持堆的结构，最终实现对,堆,数组,17,10,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,36,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,40,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,19,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,19,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,19,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,19,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,36,40,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,36,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,36,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,36,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,36,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,指针,40,58,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,40,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,40,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,40,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,线性表,58,11,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,表头,58,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,指针,单链表,58,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,线性表,表头,11,17,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由表头指针唯一确定，每个节点包含数据域和指针域，指针域指向下一个节点，最后一个节点的指针域为空,表头,单链表,17,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,线性表,指针,11,48,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,线性表,数据元素,11,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,线性表,单链表,11,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,线性表,指针,11,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,指针,数据元素,48,33,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,指针,单链表,48,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,指针,指针,48,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,数据元素,单链表,33,0,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,数据元素,指针,33,53,CON,CON
单链表是一种链式存储的线性表，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针，通过指针将各个节点依次连接起来，,单链表,指针,0,53,CON,CON
比较排序是基于元素间比较来确定其相对次序的排序方式,排序,比较排序,21,0,CON,CON
在树形结构中一个节点存在其他节点以其为直接前驱那么该节点就是这些节点的父节点即父节点有子节点且子节点以其为直接前驱,父节点,子节点,39,43,CON,CON
在树形结构中一个节点存在其他节点以其为直接前驱那么该节点就是这些节点的父节点即父节点有子节点且子节点以其为直接前驱,父节点,子节点,39,47,CON,CON
在树形结构中一个节点存在其他节点以其为直接前驱那么该节点就是这些节点的父节点即父节点有子节点且子节点以其为直接前驱,父节点,父节点,39,35,CON,CON
在树形结构中一个节点存在其他节点以其为直接前驱那么该节点就是这些节点的父节点即父节点有子节点且子节点以其为直接前驱,子节点,子节点,43,47,CON,CON
在树形结构中一个节点存在其他节点以其为直接前驱那么该节点就是这些节点的父节点即父节点有子节点且子节点以其为直接前驱,子节点,父节点,43,35,CON,CON
在树形结构中一个节点存在其他节点以其为直接前驱那么该节点就是这些节点的父节点即父节点有子节点且子节点以其为直接前驱,子节点,父节点,47,35,CON,CON
在数据结构中，稳定性指排序后相同元素相对位置不变,稳定性,排序,7,11,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,排序,40,9,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,排序,40,17,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,插入,40,13,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,插入排序,40,0,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,排序,9,17,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,插入,9,13,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,插入排序,9,0,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,插入,17,13,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,排序,插入排序,17,0,CON,CON
插入排序是一种将未排序数据插入到已排序序列的合适位置，通过逐步构建有序序列来完成排序的算法,插入,插入排序,13,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，以此来体现图中,链表,链表,32,35,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，以此来体现图中,链表,邻接表,32,0,CON,CON
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻接的其他顶点，以此来体现图中,链表,邻接表,35,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数,根节点,树的深度,6,0,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数,根节点,路径,6,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数,根节点,叶子节点,6,12,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数,树的深度,路径,0,21,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数,树的深度,叶子节点,0,12,CON,CON
树的深度是从根节点到最远叶子节点的最长简单路径上的节点数,路径,叶子节点,21,12,CON,CON
邻接矩阵是一种表示图的方式，其特点是以一个二维数组来存储图中顶点之间的关系，数组元素的值表示对应顶点之间是否存在边或弧以及边或,邻接矩阵,数组,0,23,CON,CON
邻接矩阵是一种表示图的方式，其特点是以一个二维数组来存储图中顶点之间的关系，数组元素的值表示对应顶点之间是否存在边或弧以及边或,邻接矩阵,数组,0,38,CON,CON
邻接矩阵是一种表示图的方式，其特点是以一个二维数组来存储图中顶点之间的关系，数组元素的值表示对应顶点之间是否存在边或弧以及边或,数组,数组,23,38,CON,CON
树的节点是树结构中包含数据及指向子节点链接的基本单元,子节点,树的节点,16,0,CON,CON
存储结构的特点是指数据在计算机内存或存储设备中组织和存储的方式所具有的诸如数据元素间的逻辑关系如何表示、数据元素如何存储等方面的特性,数据元素,存储结构,52,0,CON,CON
存储结构的特点是指数据在计算机内存或存储设备中组织和存储的方式所具有的诸如数据元素间的逻辑关系如何表示、数据元素如何存储等方面的特性,数据元素,数据元素,52,37,CON,CON
存储结构的特点是指数据在计算机内存或存储设备中组织和存储的方式所具有的诸如数据元素间的逻辑关系如何表示、数据元素如何存储等方面的特性,存储结构,数据元素,0,37,CON,CON
稳定性是指在数据结构中，对于相等的元素，排序前后它们的相对位置保持不变的特性,排序,稳定性,20,0,CON,CON
交换排序的核心特征是通过比较元素并交换位置，将无序序列逐步转变为有序序列，在排序过程中不断调整元素间的相对顺序直至达到最终有序状态,排序,交换排序,38,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，能灵活地实现数据的动态存储和高效操作,访问,指针,31,25,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，能灵活地实现数据的动态存储和高效操作,访问,指针,31,0,CON,CON
指针是一种变量，其值为内存中另一个变量的地址，通过指针可以间接访问和修改其所指向的变量的值，能灵活地实现数据的动态存储和高效操作,指针,指针,25,0,CON,CON
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层上的节点数都达到最大值,满二叉树,二叉树,0,22,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,左子树,根节点,11,23,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,左子树,二叉搜索树,11,0,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,左子树,子树,11,50,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,左子树,右子树,11,29,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,左子树,根节点,11,41,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,根节点,二叉搜索树,23,0,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,根节点,子树,23,50,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,根节点,右子树,23,29,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,根节点,根节点,23,41,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,二叉搜索树,子树,0,50,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,二叉搜索树,右子树,0,29,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,二叉搜索树,根节点,0,41,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,子树,右子树,50,29,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,子树,根节点,50,41,CON,CON
二叉搜索树的核心性质是左子树所有节点的值均小于根节点的值，右子树所有节点的值均大于根节点的值，且左右子树也分别为二叉搜索,右子树,根节点,29,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,递归,47,27,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,47,3,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,根节点,47,23,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,47,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,47,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,递归,47,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,47,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,右子树,47,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,二叉树,47,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,47,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,47,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,47,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,47,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,27,3,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,根节点,27,23,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,27,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,27,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,递归,27,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,27,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,右子树,27,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,二叉树,27,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,27,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,27,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,27,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,27,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,根节点,3,23,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,遍历,3,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,3,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,递归,3,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,遍历,3,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,右子树,3,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,二叉树,3,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,3,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,3,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,3,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,3,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,遍历,23,17,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,访问,23,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,递归,23,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,遍历,23,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,右子树,23,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,二叉树,23,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,访问,23,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,左子树,23,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,访问,23,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,根节点,左子树,23,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,17,53,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,递归,17,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,遍历,17,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,右子树,17,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,二叉树,17,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,17,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,17,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,17,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,17,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,递归,53,45,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,遍历,53,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,右子树,53,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,二叉树,53,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,53,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,53,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,53,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,53,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,遍历,45,41,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,右子树,45,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,二叉树,45,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,45,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,45,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,访问,45,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,递归,左子树,45,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,右子树,41,35,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,二叉树,41,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,41,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,41,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,访问,41,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,遍历,左子树,41,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,二叉树,35,0,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,访问,35,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,左子树,35,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,访问,35,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,右子树,左子树,35,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,访问,0,29,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,左子树,0,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,访问,0,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,二叉树,左子树,0,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,29,31,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,访问,29,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,29,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,左子树,访问,31,21,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,左子树,左子树,31,49,CON,CON
二叉树遍历的定义的核心性质包括先序遍历是先访问根节点再递归访问左子树和右子树，中序遍历是先递归访问左子树再访问,访问,左子树,21,49,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,数组,排序,11,20,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,数组,数组,11,6,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,数组,排序,11,13,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,数组,归并排序,11,0,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,排序,数组,20,6,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,排序,排序,20,13,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,排序,归并排序,20,0,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,数组,排序,6,13,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,数组,归并排序,6,0,CON,CON
归并排序是将数组分成子数组排序后再合并的排序方法,排序,归并排序,13,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,指针,25,41,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,链表,25,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,数据元素,存储结构,25,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,0,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,链表,41,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,指针,存储结构,41,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,链表,0,37,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,0,20,CON,CON
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,链表,存储结构,37,20,CON,CON
邻接表的特点的核心特征是对于图中的每个顶点，用一个单链表来存储其所有邻接顶点，顶点表中存储顶点信息以及指向对应邻接表的,单链表,邻接表,25,55,CON,CON
邻接表的特点的核心特征是对于图中的每个顶点，用一个单链表来存储其所有邻接顶点，顶点表中存储顶点信息以及指向对应邻接表的,单链表,邻接表,25,0,CON,CON
邻接表的特点的核心特征是对于图中的每个顶点，用一个单链表来存储其所有邻接顶点，顶点表中存储顶点信息以及指向对应邻接表的,邻接表,邻接表,55,0,CON,CON
子节点的核心特征是在树状结构中，相对于某个特定节点而言，直接连接在该节点下方的节点，这些子节点与父节点通过特定的关系相连，并且,子节点,父节点,0,48,CON,CON
子节点的核心特征是在树状结构中，相对于某个特定节点而言，直接连接在该节点下方的节点，这些子节点与父节点通过特定的关系相连，并且,子节点,子节点,0,44,CON,CON
子节点的核心特征是在树状结构中，相对于某个特定节点而言，直接连接在该节点下方的节点，这些子节点与父节点通过特定的关系相连，并且,父节点,子节点,48,44,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在,路径,无向图,0,37,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在,路径,有向图,0,24,CON,CON
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在,无向图,有向图,37,24,CON,CON
满二叉树的核心性质是每一层上的节点数都达到最大值，即如果满二叉树的深度为k，那么它的节点总数为2^k - 1，,满二叉树,满二叉树,0,28,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，所有其他节点都直接或间接连接到根节点，它在树的层次结构中,根节点,根节点,0,45,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，所有其他节点都直接或间接连接到根节点，它在树的层次结构中,根节点,父节点,0,19,CON,CON
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，所有其他节点都直接或间接连接到根节点，它在树的层次结构中,根节点,父节点,45,19,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,父节点,子节点,8,18,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,父节点,子节点,8,41,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,父节点,父节点,8,45,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,父节点,子节点,8,31,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,子节点,子节点,18,41,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,子节点,父节点,18,45,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,子节点,子节点,18,31,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,子节点,父节点,41,45,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,子节点,子节点,41,31,CON,CON
在树形数据结构中父节点是指其下有直接子节点的节点，一个节点若有子节点则该节点为这些子节点的父节点,父节点,子节点,45,31,CON,CON
操作效率的核心特征是在单位时间内以最少的资源投入获得最大的产出且保证操作的准确性和稳定性同时能够快速响应各种任务需求并高效地完成一系列相关操作,操作效率,稳定性,0,41,CON,CON
线性查找是一种从数据序列开头开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方式其特点是对数据序列无特定要求且查找过程较为简单,查找,查找,42,2,CON,CON
线性查找是一种从数据序列开头开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方式其特点是对数据序列无特定要求且查找过程较为简单,查找,遍历,42,34,CON,CON
线性查找是一种从数据序列开头开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方式其特点是对数据序列无特定要求且查找过程较为简单,查找,查找,42,61,CON,CON
线性查找是一种从数据序列开头开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方式其特点是对数据序列无特定要求且查找过程较为简单,查找,遍历,2,34,CON,CON
线性查找是一种从数据序列开头开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方式其特点是对数据序列无特定要求且查找过程较为简单,查找,查找,2,61,CON,CON
线性查找是一种从数据序列开头开始依次逐个比较元素，直到找到目标元素或遍历完整个序列的查找方式其特点是对数据序列无特定要求且查找过程较为简单,遍历,查找,34,61,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,指针,27,54,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,后继节点,27,44,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,双向链表,27,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,前驱节点,27,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,后继节点,54,44,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,双向链表,54,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,指针,前驱节点,54,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,后继节点,双向链表,44,0,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,后继节点,前驱节点,44,35,CON,CON
双向链表的核心特征是每个节点除了包含数据域外还包含两个指针域，一个指向前驱节点，一个指向后继节点，通过这两个指针实现节点之间的双向链接,双向链表,前驱节点,0,35,CON,CON
双向链表是一种数据结构，每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点从而形成双向链接关系,指针,双向链表,29,0,CON,CON
双向链表是一种数据结构，每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点从而形成双向链接关系,指针,前驱节点,29,37,CON,CON
双向链表是一种数据结构，每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点从而形成双向链接关系,指针,后继节点,29,42,CON,CON
双向链表是一种数据结构，每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点从而形成双向链接关系,双向链表,前驱节点,0,37,CON,CON
双向链表是一种数据结构，每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点从而形成双向链接关系,双向链表,后继节点,0,42,CON,CON
双向链表是一种数据结构，每个节点除了包含数据域外还包含两个指针域，分别指向前驱节点和后继节点从而形成双向链接关系,前驱节点,后继节点,37,42,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉树,左子树,8,22,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉树,右子树,8,42,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,二叉树,二叉搜索树,8,0,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,左子树,右子树,22,42,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,左子树,二叉搜索树,22,0,CON,CON
二叉搜索树是一棵二叉树，对于其中每个节点，其左子树中所有节点的值都小于该节点的值，其右子树中所有节点的值都大于该节点的值,右子树,二叉搜索树,42,0,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,父节点,根节点,44,32,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,父节点,树的节点,44,0,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,父节点,指针,44,29,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,父节点,子节点,44,25,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,父节点,根节点,44,49,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,根节点,树的节点,32,0,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,根节点,指针,32,29,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,根节点,子节点,32,25,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,根节点,根节点,32,49,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,树的节点,指针,0,29,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,树的节点,子节点,0,25,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,树的节点,根节点,0,49,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,指针,子节点,29,25,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,指针,根节点,29,49,CON,CON
树的节点是树结构中的基本组成单元，包含数据以及指向子节点的指针，根节点是树的起始节点没有父节点，除根节点外每个节点有且仅有,子节点,根节点,25,49,CON,CON
存储结构是指数据元素及其关系在计算机存储器中的表示形式,存储结构,数据元素,0,6,CON,CON
邻接矩阵是用于表示图的一种矩阵，若图中有n个顶点，其邻接矩阵是一个n×n的矩阵，矩阵中元素的值表示对应顶点之间是否存在,邻接矩阵,邻接矩阵,0,26,CON,CON
满二叉树是深度为k且有2的k次方减1个节点的二叉树其中每一层上的节点数都达到最大值即第i层上有2的i减,满二叉树,二叉树,0,22,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且任意两个,根节点,子节点,38,33,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且任意两个,根节点,父节点,38,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且任意两个,根节点,根节点,38,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且任意两个,子节点,父节点,33,52,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且任意两个,子节点,根节点,33,19,CON,CON
树是一种非线性的数据结构，有且仅有一个根节点，每个节点有零个或多个子节点，除根节点外每个节点有且仅有一个父节点，并且任意两个,父节点,根节点,52,19,CON,CON
集合是具有某种特定性质的具体的或抽象的对象汇总成的集体，这些对象称为该集合的元素,集合,集合,0,35,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的目标值进行比较，直到找到目标值或遍历完整个数据序列的一种查找算法,查找,查找,59,2,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的目标值进行比较，直到找到目标值或遍历完整个数据序列的一种查找算法,查找,遍历,59,47,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的目标值进行比较，直到找到目标值或遍历完整个数据序列的一种查找算法,查找,查找,59,28,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的目标值进行比较，直到找到目标值或遍历完整个数据序列的一种查找算法,查找,遍历,2,47,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的目标值进行比较，直到找到目标值或遍历完整个数据序列的一种查找算法,查找,查找,2,28,CON,CON
线性查找是从数据序列的第一个元素开始，依次将每个元素与要查找的目标值进行比较，直到找到目标值或遍历完整个数据序列的一种查找算法,遍历,查找,47,28,CON,CON
堆是一种特殊的数据结构，它是一个近似完全二叉树的结构且满足堆序性，即对于每个非叶子节点，其值大于或等于（大顶堆）或,完全二叉树,叶子节点,18,39,CON,CON
非线性结构的核心性质是结构中至少存在一个数据元素，它具有两个或两个以上的前驱或后继,非线性结构,数据元素,0,20,CON,CON
交换排序通过比较交换元素位置来完成排序,排序,交换排序,17,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数，它反映了树的层次结构深度以及节点分布的广度，体现了树中节点在,根节点,树的高度,6,0,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数，它反映了树的层次结构深度以及节点分布的广度，体现了树中节点在,根节点,路径,6,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数，它反映了树的层次结构深度以及节点分布的广度，体现了树中节点在,根节点,叶子节点,6,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数，它反映了树的层次结构深度以及节点分布的广度，体现了树中节点在,树的高度,路径,0,21,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数，它反映了树的层次结构深度以及节点分布的广度，体现了树中节点在,树的高度,叶子节点,0,12,CON,CON
树的高度是从根节点到最远叶子节点的最长简单路径上的边数，它反映了树的层次结构深度以及节点分布的广度，体现了树中节点在,路径,叶子节点,21,12,CON,CON
树中一个节点的子树个数称为该节点的度，树中节点的最大度数称为树的度,树的度,子树,30,7,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,查找,27,58,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,数据元素,27,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,27,48,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,顺序查找,27,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,数据元素,58,21,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,遍历,58,48,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,查找,顺序查找,58,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,数据元素,遍历,21,48,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,数据元素,顺序查找,21,0,CON,CON
顺序查找是从数据序列的一端开始，依次将每个数据元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个序列为止的查找方法,遍历,顺序查找,48,0,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆排序,堆,0,51,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆排序,堆,0,30,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆排序,排序,0,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆排序,堆,0,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆,堆,51,30,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆,排序,51,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆,堆,51,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆,排序,30,14,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,堆,堆,30,8,CON,CON
堆排序是一种基于堆数据结构的排序算法，它通过构建最大堆或最小堆，将堆顶元素与末尾元素交换，然后重新调整堆结构，重复此过程直至,排序,堆,14,8,CON,CON
迭代法是一种不断用变量的旧值递推新值，通过重复执行某一运算过程以逼近问题解的数值计算方法,迭代法,递推,0,14,CON,CON
简单排序是对一组数据按照特定规则依次比较元素大小并进行交换或移动操作以实现从小到大或从大到小有序排列的排序方法,排序,简单排序,51,0,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立联系，使得对于一个集合中的每个元素，在另一个集合中都有唯一确定的元素与之对应,集合,映射,45,0,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立联系，使得对于一个集合中的每个元素，在另一个集合中都有唯一确定的元素与之对应,集合,集合,45,32,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立联系，使得对于一个集合中的每个元素，在另一个集合中都有唯一确定的元素与之对应,集合,集合,45,17,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立联系，使得对于一个集合中的每个元素，在另一个集合中都有唯一确定的元素与之对应,映射,集合,0,32,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立联系，使得对于一个集合中的每个元素，在另一个集合中都有唯一确定的元素与之对应,映射,集合,0,17,CON,CON
映射是一种特殊的二元关系，它在两个集合之间建立联系，使得对于一个集合中的每个元素，在另一个集合中都有唯一确定的元素与之对应,集合,集合,32,17,CON,CON
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性,集合,集合,43,0,CON,CON
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性,集合,集合,43,37,CON,CON
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体，这些对象称为该集合的元素，集合中的元素具有确定性、互异性和无序性,集合,集合,0,37,CON,CON
线性表是零个或多个数据元素的有限序列,数据元素,线性表,9,0,CON,CON
