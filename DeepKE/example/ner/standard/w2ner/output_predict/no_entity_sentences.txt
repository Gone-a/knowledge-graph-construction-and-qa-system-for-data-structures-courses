树是一种分层数据结构有根且子节点唯一
无向图是由顶点集和边集组成的图，其中边集的元素是顶点集的无序对
图的边是连接图中顶点的线，具有连接两个顶点的特性，并且边可以有方向也可以无方向，无向边表示两个顶点可双向连通，有向
线性表的特点的核心特征是有且仅有一个开始节点和一个终端节点，并且除开始节点外每个节点有且仅有一个直接前驱，除终端节点外每个节点有
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小、相互独立且与原问题形式相同的子问题，分别求解这些子问题，然后将
穷举法是一种通过对所有可能的情况进行逐一列举和检查，从而找到满足特定条件的解的方法其核心性质是对问题的所有可能解进行全面无遗漏
树的查找是在给定的树结构中按照特定规则找到满足某种条件的节点的操作过程
图的顶点是图结构中的基本元素，是图中数据的存储单元，它可以与其他顶点通过边相连以构成图的结构
分治策略是将一个规模为N的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
稳定性是指在数据结构中，若存在相等的元素，经过某种处理后这些相等元素的相对次序保持不变的特性
图的边的核心性质是连接图中两个顶点且具有方向或无方向的关系并可用于表示顶点间的连接情况和传递信息等
图的顶点是图结构中的基本元素，具有标识图中各个对象的作用，每个顶点都可以与其他顶点通过边相连，边表示顶点之间的某种关系，顶点自身
其核心特征为：首先数组必须是有序的，
分治策略是将一个规模较大的问题分解为若干个规模较小且相互独立的子问题，通过分别求解这些子问题，然后将子问题的解合并得到原问题
引用是对已存在内容的一种复用性指代方式
有向图是由顶点集和有向边集组成的图，其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向连接
空间复杂度的核心性质是衡量算法在运行过程中所需的额外空间随输入规模增长的变化情况
稳定性是指算法在输入数据发生微小变化时，输出结果的变化也很小的性质
图的边是连接图中两个顶点的元素具有能明确表示顶点之间关系的核心性质
图的边是连接图中两个顶点的线或关系
将问题分解为子问题，分别解决再合并得到原问题解
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解从而得到全局最优解的一种策略
操作效率是指在一定时间内完成的操作数量或质量与所投入资源（包括人力、物力、时间等）的比值所体现出的工作效能情况
树的查找是在给定的树结构中，依据特定的规则或条件寻找满足要求的节点的操作
算法效率的定义的核心特征是指算法执行所需要的时间和空间资源的多少，时间效率关注算法执行时间随输入规模增长的变化情况，空间效率关注算法执行
动态规划入门是一种通过把原问题分解为相对简单的子问题，并保存子问题的解以避免重复计算，从而解决复杂问题的算法设计策略
子节点是树结构中与某个节点直接相连且处于该节点下方层次的节点
引用是一种给已存在对象起别名的机制，其特点包括与被引用对象绑定后具有相同内存地址，对引用的操作等同于对被引用对象的操作，且引用
稳定性的定义的核心特征是对于相同输入序列在不同运行中算法产生相同输出序列
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关反映算法运行时除输入输出外额外所需的存储空间大小且不同
抽象数据类型是数据抽象和行为抽象的统一体
稳定性的特点的核心性质是在一定条件下系统能够保持其原有状态或特性不发生显著变化
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，其核心性质包括数据封装性、信息隐蔽性和抽象性，数据封装
图由顶点集和边集组成其中顶点集是有穷非空集合边集是顶点集笛卡尔积的多重子集且每条边连接两个顶点
动态规划入门是一种通过将问题分解为相互重叠的子问题并利用子问题的解来解决原问题，以避免重复计算从而高效求解复杂问题的方法及相关概念
动态规划入门核心概念是通过分解问题记录子问题解以求解
堆的核心性质是每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子节点的值（小顶堆）
栈的核心特征是后进先出，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
稳定性的核心特征是在系统或对象运行过程中，当受到一定范围内的干扰或变化时，其主要性能指标、状态或行为能够保持相对稳定，不会出现大幅度的
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质是反映算法运行所需的额外空间随输入规模增长的变化趋势
简单排序是对数据按特定规则逐步排列顺序的方法
存储结构核心概念是以某种方式组织数据在存储器中的存储
操作效率是衡量单位时间内操作达成效果的指标
图的边的核心性质是连接图中两个顶点且具有方向或无方向的元素用于表示顶点之间的关系
路径是连接不同位置按特定顺序经过的路线
递归基础具有明确的终止条件，在此条件下递归函数不再调用自身而是直接返回一个确定的值
引用的核心性质是其绑定到一个已存在的对象后就一直指向该对象，对引用的操作实际上就是对其所绑定对象的操作
图的顶点是图结构中的基本元素，是组成图的节点，可用于表示各种实体，且顶点之间通过边相互连接以构成图的结构关系
稳定性的核心性质是对于输入数据的微小变化，输出结果的变化也保持在一个可接受的范围内
图中参与边连接以构成图形结构的基本元素是顶点
路径是图中从一个顶点出发，沿着边连续经过一系列顶点所形成的序列，其核心特征包括有起始顶点，通过边依次连接其他顶点，且顶点之间存在连续
路径具有从起始点出发，沿着特定的方向，经过一系列中间点，最终到达终点的特点，其核心特征包括有明确的起始与终止位置，存在连续的中间连接
空间复杂度指算法运行过程中所需的额外空间量
树中所有结点的度的最大值就是树的度，它反映了树中各结点分支情况的最大程度，体现了树结构中分支数量的总体特征
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表存储图中各个顶点的信息，边表则存储与每个顶点相邻接的
引用是给已存在的变量起一个别名，它和被引用的变量共享同一块内存空间，对引用的操作等同于对被引用变量的操作
交换排序的核心性质是通过比较元素并交换位置，逐步将无序序列转变为有序序列
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解或最优解的方法其核心特征是对问题的全部可能情况无
稳定性的定义的核心特征是对于输入数据的小变化，输出结果仅产生小的变化，不会出现大幅度波动或剧烈改变
图的边是连接图中两个顶点的线，用于表示顶点之间的关系
简单排序的特点的核心性质是通过比较和交换元素位置逐步将无序序列转化为有序序列
算法效率的特点的核心特征包括时间效率和空间效率，时间效率体现为算法执行时间随输入规模增长的变化情况，空间效率体现为算法执行过程中所需存储空间随
图的边是连接图中两个顶点的元素且具有连接性和无序性等核心性质
引用是一个已定义变量的别名，对引用的操作会直接作用于它所引用的变量，其核心性质包括具有与所引用变量相同的内存地址，通过引用访问
根节点是树状结构中位于顶端、没有前驱的起始节点
无向图中边没有方向，顶点间连接关系对称
子节点是树结构中某个节点直接相连且处于其下一层的节点
算法在运行过程中临时占用存储空间大小的量度就是空间复杂度
动态规划入门核心概念是将问题分解为子问题并利用最优子结构求解
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解，
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征是描述算法运行时所需的额外空间随输入规模增长的变化情况
简单排序是对数据序列进行比较和交换等操作，将数据按特定顺序排列，具有操作相对简单直观、适用于数据量较小情况的特点
比较相邻元素大小，将较大元素交换至右侧，重复此过程
迭代法是不断用旧值推新值以求解问题的方法
树是一种分层结构的数据集合由节点和边构成
回溯法基础的特点是通过系统地尝试所有可能的解，在搜索过程中一旦发现当前部分解无法导致完整有效解时就回溯到上一步重新选择，以找到
穷举法的核心性质是将问题的所有可能情况逐一列举出来并进行检验，以找到满足条件的解
简单排序的核心特征是通过比较和交换元素的位置，将无序序列逐步转换为有序序列，其过程相对直接和基础，不涉及复杂的数据结构或算法优化，主要
图的顶点是图结构中构成图的基本元素，它可以代表各种实体，图中的边将顶点相互连接以表示它们之间的关系
动态规划入门是通过分解问题记录子问题解以求解最优解的方法
有向图中边具有方向，顶点间关系有指向性
稳定性特点核心概念是系统受扰后能恢复或保持原有状态
算法效率的特点的核心特征包括时间效率和空间效率，时间效率指算法执行时间随问题规模增长的变化情况，空间效率指算法执行过程中所需存储空间随问题规模
穷举法是一种通过对问题所有可能情况进行逐一列举并检验，从而找出符合条件的解的方法
数据类型的完整定义是对数据的取值范围、表示形式以及在其上允许进行的操作等方面进行明确规定的一种描述
动态规划入门核心概念是将问题分解为子问题并利用其解求解原问题
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心特征在于对问题涉及的所有可能情形进行毫无遗漏
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，分别求解这些子问题，然后将
动态规划入门的核心特征是将问题分解为相互重叠的子问题，通过求解子问题并存储其解，避免重复计算，从而高效地解决原问题
栈的核心性质是后进先出即最后进入栈的元素最先离开栈
图的顶点是图结构中的基本元素可与边关联
加权图是边带有表示某种性质权重数值的图
树的核心性质是任意两个顶点之间有且仅有一条路径且树中边数等于顶点数减1
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征在于衡量算法执行期间所需的额外空间随输入规模增长的变化情况
路径具有连接起点与终点且反映其间关系的特点
邻接矩阵是用于表示图的一种矩阵，其中矩阵的行和列对应图中的顶点，矩阵元素的值表示对应顶点之间是否存在边及边的相关信息（如权
图的边是连接图中两个顶点的元素，其核心特征包括边具有方向性或无方向性，边可以有权重表示顶点之间连接的某种度量，边是图结构中
从起始节点出发沿一条路径深入探索直至无法继续再回溯
操作效率的定义的核心性质包括在一定时间内完成的操作数量越多效率越高、完成相同数量操作所需时间越短效率越高以及衡量操作过程中资源利用的合理性与
数据类型是对数据的种类及存储、操作方式的规定
图的边是连接图中两个顶点的线条，它可以具有方向性（有向边）或无方向性（无向边），并且可以有权值来表示顶点之间的某种
互异性是指集合中的元素
比较相邻元素大小，大的往后冒泡以实现排序
图由顶点集和边集组成顶点集中的元素为顶点边集是顶点对的集合图中每条边都连接两个顶点顶点之间可能存在多条边且顶点自身可构成
贪心策略的特点的核心性质是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，所做出的仅是在某种意义上的
邻接矩阵是用于表示图的一种矩阵，其核心特征为对于一个具有n个顶点的图，该矩阵是一个n×n的方阵，矩阵中的元素表示顶点之间
分治策略的特点的核心性质是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，分别求解子
引用是对变量或对象的别名，其核心性质是与被引用的实体具有相同的内存地址，对引用的操作等同于对被引用实体的操作
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征在于描述算法执行期间所需要的额外空间随问题规模增长的变化情况
树的度是树内各节点的度的最大值
图的顶点的核心特征是它是图的基本组成元素，用于表示图中的实体或对象，并且通过边与其他顶点相连，共同构成图的结构，顶点具有唯一
算法效率的定义的核心特征是衡量算法执行时间和所需资源随输入规模增长的变化情况
稳定性核心概念是系统或事物保持原有状态的特性
稳定性的定义的核心特征是对于相同输入在不同运行情况下输出保持一致且不受无关因素干扰不会产生意外变化
图的顶点是图结构中的基本元素，用于表示实体或对象，具有标识性，可通过唯一标识符进行区分，是图中边所连接的对象，顶点之间通过边
集合是具有某种特定性质的具体或抽象对象汇总成的集体
引用是给已存在的对象起一个别名，通过引用可以使用该对象的原始名称来访问和操作它，其核心特征包括与被引用对象绑定且引用类型与被
路径的核心特征包括是从起始点到终点的连接，具有明确的方向指向性，由一系列连续的点或元素构成，其长度由所包含的元素数量或距离
树中各节点度的最大值为树的度，体现分支情况
算法效率特点核心概念是衡量算法执行时间和资源消耗
栈是一种后进先出的受限线性数据结构
时间复杂度是指算法执行时间随问题规模增长的变化趋势，它定量描述了算法执行时间与问题规模之间的渐近关系
引用是给已存在变量起的一个别名，它和被引用的变量共用同一块内存空间，对引用的操作等同于对被引用变量的操作
加权图的核心特征是图中的边被赋予了一个数值作为权重，这些权重可以表示诸如距离、成本、时间等各种与边相关的度量，不同的边具有不同
动态规划入门是一种用于解决优化问题的算法策略，其核心特征包括将问题分解为重叠子问题，通过求解子问题并存储其解以避免重复计算，利用最优
队列是一种先进先出、按顺序存储和处理元素的数据结构
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表存储图中顶点信息，边表存储与每个顶点相连的边的信息
算法效率的特点的核心性质包括有穷性、确定性、输入、输出和可行性，有穷性指算法必须能在执行有限个步骤之后终止
树是n（n≥0）个结点的有限集且满足特定关系
栈是后进先出，仅在一端进行数据操作的数据结构
回溯法是一种通过试探并逐步回溯来求解问题的方法，它从初始状态出发，按照深度优先策略，在每一步决策时尝试所有可能的选择，当发现当前
回溯法基础的特点的核心特征是在解决问题的过程中通过尝试不同的选择并在不满足条件或无法继续推进时回溯到上一步重新进行选择以逐步找到
完全二叉树是除最后一层外每层节点数满且最后层节点靠左排列的树
栈是一种后进先出的数据结构，数据元素的进出严格遵循按照后进的元素先出的规则
存储结构特点指数据在存储器中的组织方式及特性
树中各节点度的最大值为树的度体现其分支情况
映射是一种元素与元素间有对应关系的特殊对应
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过对这些子问题的求解，然后合并子问题的解来得到原问题的解
图由顶点及顶点间边构成，用以表示多对多关系
父节点是树结构中直接位于某个节点之上的节点，具有比该节点更高的层次级别且与该节点存在特定的父子关系，通过这种关系可追溯到树的
算法效率的定义的核心特征是指算法执行所需的时间和空间资源与问题规模之间的关系，具体表现为随着问题规模的增大，算法执行时间和空间的增长
在有序数组中通过不断折半快速定位目标元素
分治策略的特点的核心性质是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，通过分别求解
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点被
操作效率的核心性质是在给定资源和条件下以尽可能少的时间和精力完成任务并达到最优效果
邻接矩阵是表示图的一种方式，其特点的核心性质为：矩阵的行和列分别对应图中的顶点，若两顶点之间有边相连，则对应位置元素为
空间复杂度的核心特征是算法在运行过程中临时占用存储空间大小与输入规模之间的关系所体现出的特性
贪心策略每步选当前最优解期望达全局最优
分治策略的特点是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，最后
将问题分解为子问题求解后合并子问题解来解决原问题
操作效率的特点是指在完成特定任务或执行一系列操作过程中所展现出的关于速度、准确性、资源利用程度以及流程顺畅性等方面的综合特性表现
图由顶点及连接顶点的边组成，用于表示多对多关系
递归基础的核心性质是存在一种简单情况或终止条件，在此情况下递归函数可直接返回一个确定结果而无需再次调用自身
从数据序列首项起逐个检查直至找到目标元素的查找方法
在树结构中通过特定方法找到目标元素的操作就是树的查找核心概念
树的查找是在给定的树结构中，依据特定规则寻找满足某种条件的节点的操作
路径是图中从一个顶点到另一个顶点的顶点序列，其中相邻顶点之间存在边
引用是给已存在的变量起的一个别名，通过该别名可以访问和操作其对应的原始变量所代表的内存空间中的数据
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它反映了算法执行过程中所需的额外空间随输入规模增长的变化情况
从数据序列首个元素起依次逐个查找目标元素
贪心策略是指在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解从而达到全局最优解
数据物理结构指数据在存储设备上的存储方式及相互关系
数据类型的特点包括其取值范围、表示形式、存储方式、运算规则以及所能进行的操作等方面所具有的独特性质
迭代法核心概念是从初始值出发按规律重复计算至满足条件
引用是C++中为已存在的变量起的一个别名，通过该别名可以对同一内存位置上的变量进行操作
按顺序逐个检查元素直至找到目标元素的查找方式
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心性质是对问题的所有可能情况进行全面无遗漏
操作效率是指在一定时间内完成特定操作任务所体现出的工作效果与资源利用程度的综合指标
邻接矩阵是表示图的一种方式，其特点的核心性质包括若图中有边相连的两个顶点，对应矩阵元素为1，无边相连则为0，主对角线元素
图的顶点的核心特征是能够唯一标识图中的节点且与图中其他顶点存在关联关系可通过边来体现其与其他顶点的连接情况进而反映图的结构和
非线性结构中元素关系不满足线性次序，存在一对多等情况
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和实现细节隐藏起来，用户只需关心其
操作效率是指算法或数据结构在执行特定操作时所表现出的时间和空间上的性能指标，反映其完成操作的快慢程度和对资源的消耗情况
图的顶点的核心特征是在图结构中作为基本元素用于标识位置并通过边与其他顶点建立关联从而构成图的拓扑结构
图的边是连接图中两个顶点的元素其核心性质为边关联两个顶点且顶点是边的端点并且图中边表示顶点之间的某种关系
树结构中位于顶层没有前驱的起始节点就是根节点
矩阵元素的值表示对应顶点
集合是由具有某种特定性质的具体的或抽象的对象汇总而成的集体
无向图中边没有方向，顶点间关系是双向的
图的边是连接图中两个顶点的线表示它们关系
交换排序是通过比较和交换元素位置来逐步将无序序列转化为有序序列，其核心性质包括比较相邻元素并在逆序时进行交换操作，不断重复此过程直到
加权图的核心特征是图中的边被赋予了一个数值（权重），这个权重可以表示诸如距离、成本、时间等某种度量，它反映了边所连接的两个
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而解决复杂问题的算法设计策略
交换排序的核心特征是通过比较序列中元素的大小关系，若顺序不符合要求，则将不满足顺序的元素进行交换，从而逐步使整个序列有序
图的顶点是图结构中的基本元素，是构成图的节点，用于表示各种实体或对象，且与其他顶点通过边相连以形成图的结构关系
操作效率的核心特征是在单位时间内以最少的资源投入实现最大量且高质量的有效操作成果，包括资源的高效利用、流程的顺畅执行以及产出的精准与
映射是一种元素对应关系，一个对一个且唯一确定
时间复杂度的核心特征是用于衡量算法执行时间随输入规模增长的变化趋势，它反映了算法执行时间与输入规模之间的函数关系，体现了算法效率在不同输入
映射是一种元素间具有特定对应关系的数学概念
集合是由确定的、彼此不同的对象所组成的整体
图的顶点具有能作为图的基本元素用于构建图结构且与边相关联以共同构成图的拓扑结构的核心性质
无向图是一个二元组（V，E），其中V是顶点集，E是边集，且边集中的每条边都是顶点集V中顶点的无序对
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过分别解决这些子问题，再将子问题的解合并得到原问题的解的
引用是C++中为已存在的变量起的一个别名，通过该别名可以对原变量进行操作，其定义方式为类型标识符 &引用名 = 已定义的变量
堆的核心性质是每个节点的值大于或等于其子节点的值（大顶堆）或者每个节点的值小于或等于其子节点的值（小顶堆）
路径是图中顶点与顶点之间的边所构成的序列且序列中任意一条边的终点是下一条边的起点
穷举法是对所有可能情况逐一尝试以求解问题的方法
引用是给已存在的变量起的一个别名，它和被引用的变量共享同一块内存地址
引用是对其他对象的一种间接访问机制，通过引用可以使用被引用对象的资源和行为，并且引用本身不存储对象的数据而是存储对象的地址或引用标识，使得
在一个有向图中，如果对于任意一对顶点，都存在一条
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质是反映算法运行时所需的额外空间随输入规模增长的变化情况
图的顶点是图结构中的基本元素，是图中数据的载体，它们通过边相互连接以构成图的整体结构
堆是一种优先队列数据结构，其特点是每个节点的值都大于或等于其子节点的值（大顶堆）或每个节点的值都小于或等于其子节点的值（小顶
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
邻接矩阵是表示图的一种方式，其特点的核心性质包括：矩阵元素表示顶点间的连接关系，若两顶点相邻则对应元素为特定值（如1）
操作效率是指在完成特定任务或一系列操作过程中，单位时间内所取得的有效成果或产出的多少，体现了在资源有限的情况下，通过合理的流程、
算法效率是指算法执行所耗费的时间和空间资源的多少，是衡量算法优劣的重要指标
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，分别对这些子问题
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关且反映算法运行时对额外空间的需求情况等
抽象数据类型具有数据封装、数据抽象、信息隐蔽以及使用与实现分离等核心特征
贪心策略是在求解问题时每步都选当前最优解的策略
数据类型的核心特征是定义了一组值以及可作用于这些值的一组操作，规定了数据在计算机内存中的存储方式和表示形式，明确了对数据所能进行的
子节点是树结构中与某一节点直接相连且处于该节点下方层次的节点
空间复杂度是衡量算法运行中所需额外空间随输入规模变化情况
空间复杂度的核心特征是衡量算法在运行过程中临时占用存储空间大小的量度，它反映了算法在执行过程中所需的额外空间随输入规模增长的变化情况
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法，其核心特征是对问题的所有可能情况进行全面无
图的边是连接图中顶点并体现它们关系的元素
操作效率是指在数据结构相关操作中，衡量完成特定操作所花费时间或资源的多寡以及操作执行速度快慢等综合表现的指标
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆）或者小于或等于其子节点的值
互异性是指集合中的
抽象数据类型是数据值及操作的数学模型的一种表示
回溯法是一种通过逐步试探并在试探过程中利用问题本身所具有的某些约束条件来避免无效搜索以求得问题最优解或所有解的算法策略
在树结构中按特定规则找到目标节点的操作就是树的查找
路径是连接起点与终点的一系列有序节点序列
操作效率的定义的核心性质是衡量完成特定操作所花费的时间或资源与预期标准或其他类似操作的比较结果等相关特性
动态规划入门是一种用于解决具有重叠子问题和最优子结构性质的问题的算法策略，通过将问题分解为较小的子问题并记录子问题的解以避免重复
动态规划入门的特点是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而自底向上逐步求解原问题以得到最优解
抽象数据类型是数据值及操作的抽象表示与封装
树是一种数据结构，它是由n（n≥0）个有限节点组成的一个具有层次关系的集合，有且仅有一个特定的称为根的节点，当n
在树形结构中直接位于某节点之上的节点就是父节点
穷举法的核心特征是将问题所有可能的情况逐一列举出来并进行检验，从而找出符合条件的解
稳定性特点核心概念是系统受干扰后能恢复原态
回溯法基础的定义的核心特征是在解决问题的过程中，通过逐步试探并在发现当前步骤无法继续推进或不满足条件时，回退到上一步重新选择
冒泡排序是比较相邻元素大小并交换以将最大元素移至末尾
引用的核心特征是它为对象起了一个别名，使得通过引用操作就如同直接操作该对象本身一样，对引用的修改会直接反映到其所引用的对象上，
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，递归地求解这些子问题，然后将子问题
线性结构的特点的核心性质是有且仅有一个开始节点和一个终端节点，并且所有节点都最多有一个直接前驱和一个直接后继
对于输入的同一组数据，经过某种算法处理后，每次得到的输出结果都保持一致这一特性就是稳定性的核心特征
其存储空间是连续的，存储密度高
引用是给已存在的对象起一个别名，通过该别名可以访问和操作原来的对象，其核心特征包括与被引用对象具有相同的内存地址，对引用的操作
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，分别求解这些子问题，然后将子问题的解合并得到原问题的解
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，分别对这些子问题进行求解，
线性结构具有元素之间存在一对一的线性关系、有且仅有一个开始和一个终端元素、除开始和终端元素外每个元素有且仅有一个前驱和一个后继的特点
子节点是树状结构或图结构中，直接与某一节点相连且处于该节点下方层次的节点
算法效率是指算法执行所耗费的时间和空间资源的多少
路径的特点的核心特征包括从起点到终点有明确的行进方向且是连续的，可由一系列有序的节点或步骤构成，反映了特定的轨迹或流程，其
稳定性的特点的核心性质是系统在受到外界干扰后能够保持其原有状态或回复到原有状态的能力
贪心策略核心概念是每步选当前最优局部解求全局最优
引用是一种给已存在对象起别名的机制，使得对引用的操作等同于对其所引用对象的操作
图的边是连接图中两个顶点的元素具有能够建立顶点间关联关系的核心性质
操作效率特点的核心概念是单位时间内完成操作的水平
堆是一种特殊的数据结构，它分为大顶堆和小顶堆，大顶堆的每个节点的值都大于或等于其子节点的值，小顶堆的每个节点的值都
图中参与边连接且具有特定标识或属性的基本元素
图的顶点是图结构中的基本元素，具有标识图中各个节点的作用，是构成图的重要组成部分，通过边与其他顶点相连以体现图的结构关系
堆是一种特殊的数据结构，它是一棵完全二叉树，并且每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子
顺序表具有随机访问特性，可通过下标直接定位元素，其元素存储紧凑，逻辑上相邻的元素在物理存储上也相邻，存储密度高，能高效利用存储空间，
操作效率是指在数据结构相关操作中，衡量完成特定任务或执行特定算法所花费的时间、空间等资源以及达成的效果等综合情况的指标
路径的核心特征是在一个给定的环境或结构中，从起始点到终点所经历的连续的、具有特定顺序和方向的轨迹，它能够清晰地展现出从
完全二叉树除最后一层外，每一层上的节点数均达到最大值，且最后一层只缺少右边的若干节点
有向图是由顶点集和有向边集组成的图，其中每条边都有一个方向，从一个顶点指向另一个顶点
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，当n>1时，其余节点分为m（m≥0）
穷举法是对所有可能情况逐一测试找出符合条件解
引用特点的核心概念是为使用已有变量或对象提供别名
栈是一种后进先出的数据结构，其核心特征在于元素的进出遵循后进先出原则，即最后进入栈的元素会最先被取出，而最先进入栈的元素则
树的度是树内各结点度的最大值体现树复杂程度
用矩阵表示图中顶点间是否有边相连的关系
路径的核心特征是从起始点到终点的连续轨迹且具有明确的指向性以及由一系列节点或步骤按特定顺序组成
时间复杂度是指在计算机科学中，算法执行时间随问题规模增长而增长的变化趋势，它定量描述了该算法的运行时间与问题规模之间的关系，其核心
回溯法基础的定义的核心特征是在问题求解过程中，通过逐步构建候选解，并在构建过程中根据一定条件进行判断，若发现当前候选解无法满足问题要求
算法效率的定义的核心特征是指算法执行所需要的时间和空间资源与问题规模之间的关系，衡量算法在不同输入规模下的运行速度和占用资源情况以
堆的核心性质是父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
图中顶点是构成图的基本元素用于表示事物等
映射中一个元素在对应法则下有唯一对应元素
图的边是连接图中两个顶点的线条，其特点包括具有方向（有向边）或无方向（无向边），边可有权重表示顶点间关系的
操作效率核心概念是衡量单位时间内操作产出效果
数据类型定义的核心性质包括具有特定的值集、定义在该值集上的一组操作以及对这些操作的语义规定
动态规划入门的核心特征是将问题分解为相互重叠的子问题，通过求解子问题并记录其解，避免重复计算，从而高效地解决原问题
树的查找是在给定的树结构中，依据特定的规则确定某个特定元素是否存在以及其所在位置的操作过程
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法，其核心性质是对问题的所有可能解进行全面无
树是一种有根且节点间有层次关系的非线性数据结构
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心特征是对问题的所有可能情况进行全面无遗漏
在树结构中按特定规则找到目标节点的操作就是树的查找核心概念
数据物理结构指数据在计算机中存储方式及存储关系
数据类型是对数据的种类及操作方式的定义
无向图的核心特征是其边没有方向，即连接两个顶点的边可以从任意一个顶点指向另一个顶点，顶点之间的连接关系是对称的
在物理存储上，它采用顺序存储结构，即
树中包含数据及指向子节点关系的基本单元是节点
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，其特点包括数据抽象，将数据和操作封装在一起，只对外暴露必要的接口，使用者无需
引用是一种给已存在对象起别名的机制，其特点包括与被引用对象绑定后具有相同内存地址，对引用的操作等同于对被引用对象的操作，通过引用
操作效率的核心性质是在一定资源和条件下以尽可能少的时间和精力完成任务或达成目标的特性
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只期望通过局部最优解来达到全局最优解
贪心策略是在对问题求解时，每一步都做出当前最优选择
将问题分解为子问题分别求解后合并得到原问题解
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况体现了算法执行时间与输入规模之间的关系及增长趋势特点
算法效率的特点包括时间效率衡量算法执行时间随输入规模增长的变化情况以及空间效率考量算法执行过程中所需存储空间随输入规模增长的变化情况等方面共同构成其
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，然后分别求解这些子问题，最后
时间复杂度是用来衡量一个算法执行时间随输入规模增长而增长的变化趋势的量它定量描述了算法运行时间与输入规模之间的渐近关系
图的顶点是图结构中的基本元素用于表示某个具体的对象或实体且是构成图的节点部分
路径是图中两个顶点之间由边依次连接而成的顶点序列且这些边是按顺序依次相连的
图是由顶点集和顶点间的边集组成的数据结构
二是堆是一棵完全二叉树，即除
在树形结构中若存在从某一节点出发通过一条边能直接到达的节点则该直接到达的节点为此节点的子节点
树是一种非线性数据结构有根且子树不相交
数据类型定义是对数据取值范围和操作的规定
稳定性的核心性质是对于输入数据的微小变化，输出结果的变化也微小
引用是一种给已存在变量起别名的机制，其特点包括与被引用对象绑定后一旦初始化便不能再指向其他对象，对引用的操作等同于对被引用对象的
图中可用于表示数据元素且与边相关联的对象是顶点
指针是一种变量，其值为内存中另一个变量的地址
堆是一种特殊的数据结构，分为大顶堆和小顶堆，大顶堆中每个节点的值都大于或等于其子节点的值，小顶堆中每个节点的值都小于
加权图是边带有代表某种数值的权的图
比较相邻元素大小，大的往后冒泡直至完成排序
路径是图中从一个顶点到另一个顶点的顶点序列
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值
操作效率是指在完成特定任务或一系列操作过程中，单位时间内所取得的有效成果或产出的多少，体现了在一定时间内利用资源达成目标的能力以及
图由顶点及顶点间边构成用于表示多对多关系
堆是一种特殊的数据结构，其核心特征为：它是一棵完全二叉树，并且对于堆中的每个节点，其子节点的值都满足特定的大小关系，最大堆中父
图的边是连接图中两个顶点的元素具有能明确关联两个顶点的核心性质
存储结构特点是指数据在存储器中的组织方式特性
堆的核心性质是每个节点的值大于或等于其子节点的值（大顶堆）或每个节点的值小于或等于其子节点的值（小顶堆）
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，其核心性质包括数据封装性将数据和操作封装在一起，信息隐蔽性
图由顶点和边构成，顶点间关系通过边表示
队列特点是先进先出，元素按顺序进出
图的边是连接图中两个顶点的线或弧，表示顶点之间的关系
邻接矩阵通过矩阵表示图中顶点间是否有边相连
算法效率是指算法执行所需的时间和空间资源的量度，反映了算法在解决特定问题时的优劣程度
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关且体现算法运行时除输入和程序代码外额外所需的存储空间
动态规划入门具有通过把问题分解为相互重叠的子问题并保存子问题解以避免重复计算从而高效求解复杂问题等特点
动态规划入门的定义的核心特征是将一个复杂问题分解为一系列相互关联的子问题，通过求解子问题并保存其解，避免重复计算，从而高效地解决原
无向图是由顶点集和边集组成，其中边集中的边是顶点的无序对，顶点之间通过这些边相连，且没有方向之分
操作效率是指在一定时间内完成特定操作的数量或质量，体现了完成操作的速度和效果的综合表现
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心特征是将问题的所有可能情况无遗漏地全部
树中所有结点的度的最大值就是树的度，其核心特征在于它反映了树中各结点分支情况的最大程度，是衡量树复杂程度的一个重要指标，
迭代法是通过重复执行运算逐步逼近问题解的方法
树中各结点度的最大值就是树的度的核心概念
矩阵元素的值表示对应顶点之间是否有
抽象数据类型的核心特征是将数据及数据上的操作封装在一起，对外提供统一的接口，用户只需关心接口的功能而无需了解其内部实现细节，通过这种方式
操作效率核心概念是单位时间内有效完成操作的程度
数据物理结构指数据在存储设备上的存储方式
操作效率的定义的核心性质包括与完成特定任务所需时间成反比与资源利用的合理性及有效性相关等
操作效率是指完成特定操作所消耗的时间、资源等与操作效果之间的关系，其核心性质包括反映操作完成速度、体现资源利用程度、衡量操作的有效性及
引用是对其他对象的一种引用关系指向同一实体
分治策略将问题分解为子问题求解再合并结果
用矩阵表示顶点间邻接关系，元素值体现连接情况
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而变化的趋势
邻接矩阵是用矩阵表示图中顶点间邻接关系的数据结构
回溯法基础是一种通过逐步构建问题的解并在发现不符合条件时回退以寻找所有可能解的算法策略
子节点是树结构等数据结构中，相对于某一节点而言，直接连接在该节点下方的节点
路径是图中两个顶点之间的顶点序列且该序列中相邻顶点之间存在边
有向图是由顶点集和有向边集组成的一种数据结构其中有向边是顶点的有序对表示从一个顶点指向另一个顶点
图的顶点的核心性质是图由顶点和连接顶点的边组成顶点具有标识图中位置的作用顶点之间通过边相互关联顶点的数量和顶点之间的连接关系决定
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它是关于问题规模n的函数，记作S(n)，表示算法所需要的存储空间与问题
图的边是连接图中顶点的线，其核心特征包括：具有两个端点分别与图中的两个顶点相连，边可以有方向（有向边）或无方向（
算法效率的定义的核心特征是衡量算法执行时间随输入规模增长的变化情况以及算法执行过程中所占用的额外空间随输入规模增长的变化情况，即算法时间
堆是一种特殊的数据结构，它分为大顶堆和小顶堆，大顶堆中每个节点的值都大于或等于其子节点的值，小顶堆中每个节点的值都
稳定性的特点的核心性质是在一定条件下系统能够保持某种状态或特性不发生显著变化
时间复杂度是用来描述算法执行时间随输入规模增长而变化的趋势，反映算法效率与输入规模之间关系的一个概念
操作效率的核心特征是在一定时间内以最少的资源消耗（包括人力、物力、时间等）完成尽可能多的有效操作，且操作过程具有高度的准确性、流畅
邻接矩阵是用于表示图的一种矩阵，其中若图中有n个顶点，其矩阵的行和列分别对应这n个顶点，矩阵中元素的值表示对应顶点之间
抽象数据类型将数据及操作封装，强调数据抽象与行为抽象
队列是一种先进先出，按顺序处理元素的数据结构
迭代法通过重复运算逐步逼近问题的解以体现其特点
数据物理结构指数据在计算机中存储方式及相互关系
分治策略核心概念是将问题分解为子问题求解再合并
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关且反映算法执行时所需额外空间随输入规模变化的情况
树是一种有根且子节点关系唯一的非线性数据结构
迭代法是一种通过从一个初始估计值开始，重复执行特定计算步骤以逐步逼近问题精确解的方法其特点在于不断利用上一步的计算结果来推进下一步计算直至
简单排序通过比较交换元素逐步将数据序列排好序
时间复杂度是指在计算机科学中，对于一个算法，随着输入规模的不断增大，其执行时间增长的量级所对应的函数，它用于衡量算法执行效率随输入规模变化
集合是由确定的、互不相同的元素所组成的整体具有无序性且元素具有确定性和互异性等特点
深度为k的二叉树至多有2的k次方减1
操作效率是衡量单位时间内操作产出及资源利用的指标
操作效率是指在一定时间内完成特定操作的数量或质量与所投入资源（包括人力、时间、设备等）的比值，反映了操作过程中资源利用的有效
图的边是连接图中两个顶点的线
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，然后分别对这些子问题进行求解
操作效率是指在一定时间内完成特定操作任务的数量、质量或速度等方面所体现的综合效能指标
图的边是连接图中两个顶点的无序对或有序对用于表示顶点之间的关系
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的算法策略
树中所有结点的度的最大值就是树的度
顺序表的特点的核心特征是逻辑上相邻的元素在物理存储位置上也相邻，它具有随机访问特性，可通过下标直接定位元素，存储密度高，内存利用率
算法运行过程中所需的最大存储空间与数据规模关系
稳定性的核心特征是在系统或对象所处的环境发生变化、受到干扰或经历时间推移等情况下，其能够保持自身的某种状态、性能、结构或行为等不发生
完全二叉树的核心特征是其节点的分布除了最后一层外是满的，且最后一层的节点从左到右依次排列没有间断
图是由顶点集和顶点间的边集组成的数据结构，其中顶点是图中的数据元素，边表示顶点之间的关系
动态规划入门是一种通过把原问题分解为相对简单的子问题，并保存子问题的解避免重复计算，从而解决复杂问题的算法策略及相关知识的初步学习领域
操作效率特点核心概念是单位时间内完成操作的效能
深度优先搜索是按深度依次探索节点直到无法继续的算法
具有互异性，集合中的元素互不相同
无向图的核心性质是任意两个顶点之间的边没有方向，即若顶点u和顶点v之间存在边，则从u到v和从v到u是同一条边
算法效率指算法执行时间和占用资源随输入规模变化情况
图的顶点是图结构中的基本元素，具有标识图中各个对象的作用，顶点之间通过边相互连接从而构成图的整体结构，并且在不同的图算法和应用
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其特点在于全面性但效率可能较低
贪心策略在每一步决策中都选择当前看来最优的选项，期望通过局部最优解达到全局最优解，具有目光短浅只考虑当前步骤最优而不考虑整体影响的
图的边是连接顶点且具有方向或无方向等特性的结构
迭代法是通过不断重复运算逐步逼近问题解的方法
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和操作的实现细节封装起来，强调数据的
线性查找按顺序逐个比较元素直至找到目标元素
存储结构是数据及其关系在计算机内的表示方式
简单排序的特点的核心特征是通过比较元素大小并逐步交换位置来将无序序列转化为有序序列
加权图的核心性质是图中的每条边都被赋予一个权重值，该权重值表示边的某种代价、成本、距离或其他相关度量，用于描述边的特性以及
图的顶点是图这种数据结构中的基本元素之一，是构成图的各个节点，用于表示实际问题中的对象或实体，并且通过边与其他顶点相连以体现它们之间
算法效率是指算法执行所需的时间和空间资源量，反映算法在解决特定问题时的性能表现
父节点是在树形结构中位于某节点之上直接相连的节点
比较相邻元素大小，大的往后放，重复此过程完成排序
动态规划入门的特点的核心性质是通过将问题分解为重叠子问题，利用已解决的子问题的解来高效地解决原问题，具有最优子结构性质，即
操作效率的核心性质是在一定时间内完成更多有效操作以实现资源的高效利用和目标的快速达成
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它反映了算法在执行过程中所需的额外空间随问题规模增长的变化情况
引用具有指向同一对象节省空间共享数据等特点
动态规划入门的特点是通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，按一定顺序求解子问题从而得到原问题最优解
图的顶点的核心性质是其在图结构中具有标识图中各个节点的作用且通过与边的关联来构建图的拓扑结构
动态规划入门的特点是通过将问题分解为相互重叠的子问题，利用子问题的解来避免重复计算，从而高效地求解复杂问题
树是一种有根且子树无相交的非线性数据结构
堆是一种特殊的数据结构，它满足父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
算法效率特点核心概念是衡量算法执行时间和资源消耗情况
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别求解这些子
线性结构的核心性质是存在一个序列，其中元素之间具有一对一的线性关系，且除第一个和最后一个元素外每个元素都有唯一前驱和后继，第一个元素无前驱
操作效率核心概念是衡量单位时间内操作产出与投入关系
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而高效解决复杂问题的算法策略及相关概念方法的初步
贪心策略每步选当前最优局部解以获全局最优
邻接矩阵是用于表示图的一种矩阵，其中若图中存在从顶点i到顶点j的边，则矩阵中第i行第j列的元素为1，否则为
交换排序的核心特征是通过比较序列中的元素，若顺序不符合要求，则将其交换位置，不断重复此过程直到整个序列有序
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和操作的实现细节封装起来
空间复杂度指算法运行中所需存储空间随输入规模变化情况
图的顶点的核心特征是其在图结构中具有标识性，可用于区分不同元素，且顶点之间通过边相互连接从而构成图的整体结构，顶点还可附带
操作效率是指在数据结构的相关操作中，衡量算法或程序完成特定任务所需时间、空间等资源消耗情况以及执行速度等方面综合表现的指标
图的顶点是图结构中的基本元素，是构成图的节点，在图中可用于表示各种对象，且顶点之间通过边相互连接以形成图的结构
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关描述算法运行时所需额外空间随输入规模变化的情况以及体现
图的顶点是图结构中的基本元素，是构成图的各个节点，用于表示实际问题中的对象或实体，通过边与其他顶点相连以反映它们之间的关系
加权图是边或顶点带有权值的图用于反映某种重要性等
完全二叉树是除最后一层外每层节点数满且最后一层靠左排列的树
父节点是在树形结构中，直接位于某个节点之上，与该节点存在直接关联且具有层级关系，能够通过特定的连接方式指向其下一层节点的节点
栈是一种后进先出的数据结构操作受限的线性表
抽象数据类型具有数据抽象和数据封装的特点，其核心性质包括数据对象集的定义、数据对象集上的操作集的定义以及对操作集的封装，使得使用者
算法效率特点核心概念是衡量算法执行时间与资源消耗
图的边连接图中的两个顶点具有方向性或无方向性且每条边都有其特定的连接关系决定了图的结构和性质
算法效率特点核心概念是指其执行时间和资源消耗情况
存储结构特点指数据在存储器中存储方式及相互关系特性
简单排序通过比较与交换逐步将数据按序排列
动态规划入门核心概念是通过分解问题存储子问题解来求解
图的边是连接图中顶点的线条表示顶点间关系
图的边是连接图中两个顶点的线段或弧，表示这两个顶点之间存在某种关系
时间复杂度是指算法执行时间随问题规模增长而增长的变化趋势的数学描述，它定量描述了该算法运行时间与问题规模之间的关系，反映了算法执行时间
集合是由具有某种特定性质的具体或抽象对象汇总成的集体
顺序表是元素按顺序存储且内存连续的线性表
抽象数据类型是数据值及相关操作的抽象描述
邻接矩阵是用于表示图的一种矩阵，其核心特征是对于一个具有n个顶点的图，矩阵的行和列都对应这些顶点，矩阵中元素的值表示对应
算法效率指算法执行时间及占用资源随问题规模变化情况
图的边是连接图中两个顶点的线条表示连接关系
深度优先搜索是按深度依次探索节点直到无法继续或达到目标
有向图的核心特征是其边具有方向性，即每条边都有明确的起始顶点和终止顶点，从起始顶点到终止顶点存在特定的指向关系，与无向
稳定性是指在系统运行过程中，当受到外界干扰因素影响时，系统能够保持其原有性能、状态或行为特征不发生显著变化的性质
集合是具有某种特定性质的具体的或抽象的对象汇总
在树形结构中，若存在一个节点，使得其他节点都直接或间接通过边与该节点相连，那么这个节点就是其他节点的父节点
算法效率是指算法执行所耗费的时间和空间资源的度量
数据类型是对数据的一种分类，它定义了数据的取值范围、表示形式以及可以进行的操作等特性
操作效率体现为单位时间内完成操作的数量与质量情况
比较排序基于元素间比较确定元素在序列中的位置
子节点是树结构中直接位于某个节点下方的节点
分治策略的特点是将一个规模较大的问题分解为若干个规模较小的子问题，通过分别解决这些子问题，然后将子问题的解合并得到原问题的
图的边是连接图中顶点的线条，具有连接两个顶点的性质，且边可以有方向也可以无方向，有方向的边称为有向边，无方向的
映射是一种元素与元素按规则对应关系的概念
其中
路径具有从起点到终点的特定走向且可能包含多个节点或元素并体现出一定的顺序关系等特点
穷举法的核心特征是将问题所有可能的解逐一列举出来，然后通过对这些解的验证，找出符合条件的解
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况，反映了算法执行时间随问题规模增大而呈现的变化趋势
空间复杂度指算法运行中所需的额外空间随输入规模变化情况
穷举法的核心特征是将问题所有可能的情况一一列举出来，然后逐一进行检验，从中找出符合条件的解
路径是连接不同节点或位置具有特定走向的线路
抽象数据类型是指一个数学模型以及定义在此数学模型上的一组操作，其核心特征包括数据对象集、数据关系集以及基于数据对象集和数据关系集定义的
迭代法是通过重复计算从初值逐步逼近问题解的方法
抽象数据类型具有数据抽象和数据封装的核心特征，数据抽象是指将数据对象的逻辑特性和行为特性抽象出来，只关注其本质特征而忽略具体实现细节，
图的顶点是图结构中的基本元素，是图中各个节点的统称，它们通过边相互连接，共同构成图的拓扑结构，每个顶点可以具有不同的属性和特征
稳定性的特点的核心性质是在系统受到外界干扰后仍能保持原有状态或恢复到原有状态的能力
树中所有结点度的最大值就是树的度
树的核心性质是树中任意两个顶点之间存在唯一的一条简单路径
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成一个具有层次关系的集合，有且仅有一个特定的称为根的节点，当n>
穷举法是一种通过对所有可能的情况进行逐一列举和检验，从而找出满足特定条件的解的算法策略
栈是一种特殊的线性表，其核心特征在于它具有后进先出的特性，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
时间复杂度是指在计算机科学中，对于一个算法执行时间的渐近上界的度量，它表示随着输入规模的不断增大，算法执行时间的增长趋势
引用是一种给变量起别名的机制，使得该别名与原名共享同一块内存空间，对别名的操作等同于对原名的操作
分治策略的核心性质是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些
稳定性的核心特征是在系统运行过程中，面对各种内部和外部因素的干扰，系统能够保持其原有状态、性能或功能的相对稳定，不会轻易出现大幅度波动、
无序性，即集合
映射是一种元素到元素的对应且具有方向性等特点
树中各节点度的最大值即为树的度
引用是对已存在变量或对象起一个别名，使不同名称可指向同一内存位置，对引用所做的操作等同于对其引用的变量或对象直接操作
数据物理结构指数据在计算机中存储方式及相互关系特点
堆的核心特征是对于一个最大堆，每个节点的值都大于或等于其子节点的值
动态规划入门是一种通过将问题分解为相互重叠的子问题并利用子问题的解来高效求解复杂问题的算法设计策略
路径的核心性质是从起点到终点的一系列节点或边的有序序列，其中相邻元素之间存在特定的连接关系且按照一定顺序排列
路径的核心特征包括有起点和终点，是从一个位置到另一个位置的连续轨迹，具有明确的方向，可由一系列有序的步骤或节点构成，在特定空间
邻接矩阵是用于表示图的一种矩阵，其中行和列对应图中的顶点，矩阵元素的值表示对应顶点之间是否存在边及边的相关信息（如权值等
操作效率的特点是指在完成特定任务或一系列操作过程中，所展现出的关于速度、准确性、资源利用等方面的综合特性表现
图的顶点的核心特征是能够唯一标识图中的各个节点，且与边存在关联关系，通过顶点之间的边来体现图的结构和性质，顶点自身还可能具有
贪心策略在每一步都选择当前看似最优的决策
动态规划入门的核心性质是最优子结构性质和重叠子问题性质，最优子结构性质指问题的最优解包含其子问题的最优解，重叠子问题性质指子问题
邻接矩阵是表示图的一种方式，其特点的核心性质包括：矩阵元素表示顶点间的连接关系，若两顶点相邻则对应位置元素为特定值（通常为
互异性，即集合中的元素不能重复
递归基础的定义的核心特征是存在一种或多种简单情况，在这些简单情况下递归函数可以直接返回一个确定的值而无需再次调用自身
操作效率的定义的核心性质是指在特定条件下衡量完成某项操作或任务时所耗费资源与所达成结果之间关系的一种特性，体现为单位时间内完成操作
动态规划入门是一种通过将问题分解为相互重叠的子问题并存储子问题的解以避免重复计算来解决复杂问题的算法设计策略
栈是一种后进先出的数据结构
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而自底向上逐步求解原问题以优化解决具有重叠子
子节点是树结构中直接连接在某个节点之下的节点
抽象数据类型的核心特征是将数据和数据上的操作封装在一起，对外提供统一的接口，使得使用者无需关心数据的具体存储方式和操作的具体实现细节，只需
无向图是一个二元组其中包括顶点集和边集且边集中的每条边都是顶点集的无序对
树是一种分层结构数据，有根且子节点关系唯一
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的解题方法
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，将数据的表示和操作的实现细节隐藏起来
子节点是树结构中直接连接在某个节点下方的节点
动态规划入门的特点的核心性质是通过将问题分解为相互重叠的子问题，利用子问题的解来避免重复计算，从而高效地求解原问题
操作效率是衡量单位时间内操作达成目标的程度指标
比较相邻元素大小，大的往后冒泡直至有序
在有序数组中通过不断折半比较来快速定位目标元素
算法效率的定义的核心性质是衡量算法执行时间和所需资源随输入规模增长的变化情况以评估算法优劣
动态规划入门的特点的核心性质是将问题分解为相互重叠的子问题并通过保存子问题的解来避免重复计算从而高效求解问题
图的边的核心特征是其用于连接图中的两个顶点，反映了顶点之间的某种关系或联系，并且边可能具有诸如权重、方向等属性，这些属性会影响
堆是一种特殊的完全二叉树，其每个节点的值都大于或等于其子节点的值（大顶堆）或每个节点的值都小于或等于其子节点的值（小顶堆
迭代法的核心性质是通过不断重复执行相同的计算步骤，利用前一步的计算结果来逐步逼近问题的解
贪心策略在每一步决策中都选择当前看来最优的选项，期望通过局部最优解来达到全局最优解，具有短视性，只考虑当前步骤的利益最大化而不
归并排序将序列分治后合并，按序排列元素
在树的层级关系中处于
路径的核心特征是由一系列节点按顺序连接而成且具有从起始节点到终止节点的连贯性和指向性从而形成的一条可追溯的轨迹
穷举法是对所有可能情况逐一测试找出符合条件解的方法
堆排序的核心性质是：堆中每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子节点的值（小顶堆
抽象数据类型是指一个数学模型及定义在该模型上的一组操作
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，分别求解这些子问题，然后将子问题的解合并得到原问题的解的一种
有向图是由顶点集和有向边集组成，其中有向边是顶点的有序对，每条边都有明确的方向
操作效率是指在一定时间内通过有效操作所达成的成果与所投入资源及时间的比率体现出的效能情况
栈的核心特征是后进先出即最后进入栈的元素最先被弹出而最先进入栈的元素最后被弹出
穷举法的核心性质是对问题所有可能的情况进行逐一列举和检验以找到符合条件的解
树中所有结点的度的最大值就是树的度其核心特征为反映树中各结点分支数的最大情况
动态规划入门是一种用于解决优化问题的算法策略，其核心特征是将问题分解为相互重叠的子问题，通过求解子问题并存储其解，避免重复计算，
抽象数据类型的核心特征是将数据和数据上的操作封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注接口所提供的功能而
从数据序列开头依次逐个比较元素来查找目标元素
路径是图中顶点与顶点之间经过边的有序序列，其核心性质包括有起点和终点，由一系列边依次连接顶点组成，且相邻顶点间有直接相连的边
堆是一种满足特定父子节点关系的完全二叉树结构
引用的核心特征是对已存在的特定内容（如语句、段落、数据、观点等）进行直接或间接的提及和使用，以借助其权威性、准确性、代表性等来
数据类型的完整定义是对数据的取值范围以及在这些值上所允许执行的操作的一种确切描述
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点可
冒泡排序是一种比较相邻元素大小，如果顺序错误就把它们交换过来，对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样一趟下来
引用是一种给对象起别名的机制，其核心特征是引用变量与其所引用的对象具有相同的内存地址，对引用的操作实际上就是对其所引用对象的操作
在树形结构中直接位于某个节点之上的节点即父节点
回溯法是一种通过系统地尝试所有可能的解，并在发现当前解不符合条件时回溯到上一步，继续尝试其他可能性，以找到问题的所有解或最优解的
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，其特点包括数据封装、信息隐藏和数据抽象，核心性质是将数据
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分成m（m≥0）
分治策略的特点是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，分别对这些子问题进行
穷举法是一种通过对问题所有可能情况进行逐一列举并检验，从而找出符合条件解的方法其特点是思路简单但在问题规模较大时效率较低
映射是一种元素到元素的对应关系其中一个对一个或多对一
分治策略的特点的核心性质是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，通过递归地
稳定性特点核心概念是系统在一定条件下保持原有状态的特性
简单排序的特点的核心性质包括比较和交换元素位置以逐步将无序序列转变为有序序列
用矩阵表示图中顶点间邻接关系，元素值体现连接情况
引用是一种给变量起别名的机制，使得一个变量名可以指向另一个已存在的变量，对引用的操作实际上就是对其所引用变量的操作
图由顶点及连接顶点的边构成的一种数据结构
算法效率的特点的核心特征包括时间效率和空间效率，时间效率体现算法执行时间随输入规模增长的变化情况，空间效率反映算法执行过程中所需存储空间随输入规模
堆的核心性质是每个节点的值都大于或等于其子节点的值（大顶堆）或每个节点的值都小于或等于其子节点的值（小顶堆）
在树形数据结构中，对于某一节点而言其直接连接且位于其上方的节点就是该节点的父节点
互异性即集合中的元素互不相同
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解这些子问题
数据类型具有特定取值范围、操作及存储方式等特点
引用是一种给已存在对象起别名的机制，其核心特征包括：具有与被引用对象相同的内存地址，对引用的操作等同于对被引用对象的操作，引用
图中参与构建结构并具有相关关系的基本元素就是顶点
图中参与构成边且有特定标识用于相关操作的元素是顶点
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来最终获得全局最优解的一种
引用是给变量起别名，共享同一内存地址
引用是给已存在对象起别名，指向同一内存位置
路径是图中顶点与顶点之间经过边的有序序列且具有从起点开始按顺序依次经过边到达终点的性质
在树结构中按特定规则找到目标节点的操作叫树的查找
稳定性的特点的核心性质是在一定条件下系统或事物能够保持其原有状态或特性不发生显著变化
栈具有后进先出的特点，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
完全二叉树是除最后一层外每层节点数满且最后层靠左排列的树
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它反映了算法在执行过程中所需的额外空间随输入规模增长的变化情况
堆是一种特殊的数据结构，它是一棵完全二叉树，并且每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶
比较相邻元素大小，将较大元素交换至右侧逐步排序
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征为算法执行期间所需要的存储空间的大小与输入规模之间的关系，包括算法
算法效率的定义的核心性质是指算法执行时间随输入规模增长的变化情况以及算法执行过程中所需的空间资源随输入规模增长的变化情况
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解的
图的边是连接图中两个顶点的二元组
集合是由确定的、互不相同的对象所组成的整体
图的边是连接图中两个顶点的线表示顶点间关系
图的顶点具有可作为图的基本元素用于构建图结构且可与其他顶点通过边建立关联关系等特点
数据类型的特点的核心特征包括具有特定的数据表示形式、规定了数据所能进行的操作以及有相应的取值范围
算法效率的特点是指算法执行时间随问题规模增长的变化趋势以及算法执行过程中所需的额外空间与问题规模的关系等方面所呈现出的特性
在树结构中按特定规则搜索特定元素以确定其位置
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，其特点包括数据对象的抽象定义、数据对象上操作的抽象定义以及对数据对象和操作的
有向图中边具有方向表示元素间单向关系
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，再将子
无向图是由顶点集和顶点间无方向边构成的图
无向图中任意两个顶点之间的边没有方向，若存在顶点v和顶点w，那么从v到w的边与从w到v的边是同一条边
递归基础的核心特征是存在一种简单情况，在这种情况下递归函数可以直接返回一个确定的结果而无需再次调用自身
在树形结构中，若存在一个节点，使得另一个节点通过特定关系直接连接到该节点，那么这个被连接的节点就是另一个节点的父节点
动态规划入门的核心特征包括将问题分解为相互重叠的子问题，通过求解子问题并保存其解以避免重复计算，利用子问题的解逐步构建出原问题
算法效率的定义的核心特征是指算法执行时间随问题规模增长的变化情况以及算法执行过程中所需的额外空间随问题规模增长的变化情况
堆排序的核心性质是堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶堆）
图的顶点是图结构中组成图的基本元素之一，用于表示图中的某个实体或对象且是图中边所连接的对象
初始状态相同算法多次运行结果相同则具稳定性
穷举法的核心性质是对问题所有可能的情况逐一进行检验以找到符合条件的解
图中参与构成图结构且具有某种标识或属性的基本元素
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法，其核心特征是对问题的所有可能情况无遗漏地
从数据序列首个元素开始逐个比对找目标元素的查找方式
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法其核心特征在于对问题的所有可能情况无一遗漏地进行
时间复杂度的核心特征是衡量算法执行时间随输入规模增长的变化趋势它反映了算法执行时间与输入规模之间的渐近关系用于评估算法在大规模数据下的效率表现
时间复杂度的核心特征是用于描述算法执行时间随输入规模增长的变化趋势，它忽略了常数项系数低阶项和系数，重点关注算法执行时间随输入规模增长
图是由顶点集和顶点间的边集组成的数据结构，其中顶点是图的基本元素，边表示顶点之间的关系
无向图是由顶点集和边集组成的图结构其中边集中的边是没有方向的顶点与顶点之间通过这些边相连
路径的核心特征是它代表了从一个起始点到一个终点的连续的移动轨迹或一系列步骤，在不同的情境下如物理空间移动、逻辑流程推进、信息传递
将问题分解为子问题，分别求解再合并得到原问题解
时间复杂度是用来衡量算法执行时间随输入规模增长而增长的变化趋势的指标，它反映了算法运行效率随数据量增加的变化情况
广度优先搜索按层次依次扩展节点以寻找目标
交换排序通过比较与交换元素位置将无序序列变为有序
穷举法是对所有可能情况逐一测试找出答案的方法
栈具有后进先出的特点即最后进入栈的元素最先被弹出而最先进入栈的元素最后被弹出
加权图的核心特征是图中的边被赋予了一个数值（权重），这个权重可以表示诸如距离、成本、时间等某种度量，用于描述边所连接的两个顶点
栈是一种特殊的线性表，其核心特征是具有后进先出的特性，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
操作效率是指在完成特定任务或一系列操作过程中，单位时间内所达成的有效成果数量或所实现的价值程度
分治策略将问题分解为子问题，分别求解再合并结果
用矩阵表示顶点间邻接关系的一种数据结构形式
堆是一种数据结构，它是一个完全二叉树，并且满足每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子
操作效率的定义的核心特征是在给定时间内完成的操作数量与所投入资源之间的比率关系，体现了单位时间内利用资源完成操作的能力以及资源利用的
数据类型是对数据的一种分类方式，它定义了数据的取值范围、表示形式以及能进行的操作等属性
比较排序通过比较元素大小确定其最终排列顺序
动态规划入门是通过分解问题利用最优子结构求解的方法
操作效率是指在数据结构相关操作中，衡量完成特定任务所花费时间、空间等资源的多少以及与资源最优利用情况相比的效能程度
操作效率的定义的核心性质是指在完成特定任务或执行特定操作时，所体现出的资源利用效率、时间花费多少以及完成质量高低等方面的特性表现，
稳定性特点核心概念是系统在干扰下保持原有状态的特性
交换排序的核心性质是通过比较和交换元素的位置，将无序序列逐步转换为有序序列
图由顶点及顶点间边构成用于描述多对多关系
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，当n>1时其余节点分为m（m≥0）个
分治策略是将问题分解为子问题求解后合并结果
稳定性的特点的核心性质是在一定条件下系统能够保持其原有状态或性能不发生显著变化
图的顶点是图结构中的基本元素，是图中各个节点的统称，它们之间通过边相互连接，顶点具有标识图中各个位置的作用，其自身可以携带数据
引用是一种给变量起别名的机制，它具有与被引用对象绑定后其值与被引用对象相同且对引用的操作等同于对被引用对象操作的特点
操作效率特点核心概念是衡量操作完成速度与质量程度
图的边是连接图中顶点的线条，其核心特征包括边具有两个端点分别连接两个顶点，边可以有方向或无方向，有方向的边规定了顶点之间
抽象数据类型是数据值及定义在这些值上一组操作的总称
图的边是连接图中两个顶点的元素，其具有不同的类型（如无向边、有向边），不同类型的边在表示顶点间关系以及边的
图的边是连接图中两个顶点的线段或弧，其特点包括具有方向或无方向、有权重或无权重、可形成不同的拓扑结构等
操作效率的定义的核心性质是指在完成特定任务或执行特定操作时，所体现出的在时间、资源利用等方面的高效程度，包括以较少的时间、
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据和数据上的操作封装在一起，仅对外提供抽象接口
时间复杂度的核心特征是衡量算法执行时间随输入规模增长的变化趋势，反映算法效率与输入规模之间的关系
数据类型的定义具有一组值以及定义在这组值上的一组操作的核心性质
穷举法是一种通过对所有可能的情况进行逐一列举和检验，从而找出满足特定条件的解的方法
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不考虑整体最优解，只希望通过局部最优选择来达到全局最优，其核心性质是
空间复杂度的核心性质是衡量算法在运行过程中临时占用存储空间大小的量度与问题规模之间的关系
图的边的核心特征是它用于连接图中的两个顶点，反映了顶点之间的某种关系或联系，并且边可以具有权重等属性来表示连接的强度或代价等
时间复杂度是指在计算机科学中，对于一个算法，其执行时间随输入规模增长的变化趋势所反映出的该算法执行时间的量级
堆排序的特点的核心性质是每个节点的值大于或等于其子节点的值（大顶堆）或每个节点的值小于或等于其子节点的值（小顶堆），并且它
稳定性的核心性质是对于输入数据的微小变化，输出结果只会产生微小变化
邻接矩阵是用于表示图的一种矩阵，其核心特征为：若图中有n个顶点，则该矩阵为n阶方阵，矩阵元素A[i][j]的值表示顶点
稳定性的核心特征是在系统运行过程中，面对各种内部或外部因素的干扰和变化，系统能够保持其关键性能指标、状态或行为在可接受的范围内，维持
线性查找按顺序逐个检查元素直至找到目标元素
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过分别解决这些子问题，然后将子问题的解合并得到原问题的解
无向图的核心性质是任意一条边所连接的两个顶点之间的关系是对称的且没有方向区分
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它是关于问题规模n的函数，记作S(n)
图由顶点及顶点间边构成，能直观表达关系
数据类型具有各自独特的取值范围、存储方式、操作规则以及所支持的运算等特点
在树形数据结构中，若存在一个节点，有其他节点直接连接到它，那么该节点就是这些直接连接节点的父节点
有向图中边具有方向性，顶点之间的连接是单向的
在树结构中按特定规则找到目标元素的操作是树的查找核心概念
图中参与构图且具有某种标识或属性的基本元素为顶点
图的顶点是图结构中的基本元素可连接其他元素
深度为k的二叉
子节点是树结构中与某一节点直接相连且处于该节点下方层次的节点，它直接受该节点的支配并与该节点存在特定的层级关系
路径的特点的核心性质是由一系列节点按顺序组成且相邻节点间存在特定连接关系并能反映从起始节点到终止节点的一种有序序列
算法效率的核心性质是指算法执行时间随输入规模增长的变化情况以及算法占用空间资源随输入规模增长的变化情况
抽象数据类型具有数据和操作封装及独立于实现的特点
穷举法的核心特征是将问题所有可能的情况都一一列举出来，然后根据条件进行检验，从中找出符合要求的解
图的边是连接图中两个顶点的元素具有能够明确图中顶点之间关系的核心性质
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，最后将子
路径是在图或树等数据结构中，从一个顶点（或节点）出发，沿着边（或分支）连续经过一系列顶点（或节点）最终到达另一个顶点（
树的度的核心特征是树中所有结点的度的最大值
子节点是树结构中与某个特定节点直接相连且处于该节点下方层次的节点
操作效率的特点是指在执行各种操作过程中所展现出的关于速度、准确性、资源利用等方面的特性表现
时间复杂度的核心性质是算法执行时间随问题规模增长的变化趋势反映了算法效率且用大O记号等表示其数量级
图中参与构成边且具有特定标识与属性的基本元素
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况反映算法执行时间随问题规模增长的变化趋势
递归基础是递归函数中最简单情况可直接求解的部分
空间复杂度指算法运行过程中所需的额外空间随输入规模的变化
动态规划入门的核心特征是将问题分解为相互重叠的子问题，通过求解子问题并保存其解，避免重复计算，从而高效地解决原问题，通常采用自
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度
图的边的核心性质是连接图中两个顶点且具有方向或无方向等特性以构建图的结构关系
加权图的核心特征是图中的边被赋予了权重值，这些权重值代表了边所连接的两个顶点之间的某种度量，比如距离、成本、相似度等，它
动态规划入门的核心性质是通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而以自底向上的方式逐步求解原问题以
图的边是连接图中两个顶点的线段或弧表示的关系其包含有向边和无向边有向边有起始顶点和终止顶点无向边所连接的
操作效率是指在数据结构相关操作中，衡量完成特定任务所花费时间、空间等资源以及达成目标的效果等综合表现的指标
时间复杂度是用来描述算法执行时间随输入规模增长而变化的渐进趋势，体现算法效率随问题规模扩大的增长特性
简单排序是对数据序列进行比较和交换等操作，以使其元素按特定顺序排列，其核心特征包括操作相对简单直观，通常基于相邻元素的比较与交换来逐步
树的查找是指在给定的树结构中，按照特定规则寻找满足特定条件的节点的操作过程
图的顶点是图结构中的基本元素，是组成图的各个节点，用于表示实际问题中的对象，并且顶点之间通过边相互连接以反映对象之间的关系
数据类型是对数据的种类及操作的定义和规范
无向图的核心性质是边没有方向，任意两个顶点之间的边是双向的，即若顶点u和顶点v之间有边相连，则从u到v和从v
比较相邻元素大小，将较大元素交换至右侧，重复此过程完成排序
有向图是由顶点集和有向边集组成的图，其中有向边是顶点的有序对，其方向决定了边的起始顶点和终止顶点，与无
在树结构中按特定规则确定目标元素是否存在的操作
映射是一种元素间有对应关系的特殊对应
引用是一种给变量起别名的机制，使得对引用的操作实际上是对其所引用对象的操作
图的顶点是图的基本组成元素之一具有能与其他顶点通过边相连以及用于表示图中的各种实体或对象等核心性质
穷举法的核心特征是将问题所有可能的解一一列举出来，然后逐一检查这些解是否符合问题的条件，直到找到满足条件的解或确定所有解均不符合
操作效率的定义的核心特征是以单位时间内完成的有效操作数量或完成特定操作所需的时间来衡量，体现操作在时间维度上的产出或投入情况，反映操作
队列特点是先进先出，元素按顺序依次进出
图的顶点是图结构中构成图的基本元素之一，用于表示图中的某个实体或对象，是图中连接边的端点，通过顶点之间的边来定义图的
树中各结点度的最大值为树的度的核心概念
图的边是连接图中两个顶点的元素且顶点对与边存在一一对应关系或顶点对之间由边相连且每条边关联两个顶点
线性结构的特点是有且仅有一个开始节点和一个终端节点，并且所有节点都最多有一个直接前驱和一个直接后继
树中包含数据及指向子节点关系的基本单元
加权图中边被赋予权重以反映某种特性或代价
操作效率的核心性质是在一定时间内完成尽可能多的有效操作且资源利用率高同时操作准确性好等综合表现
算法效率的定义的核心特征是衡量算法执行时间随输入规模增长的变化情况以及算法占用空间随输入规模增长的变化情况
图的顶点是图的基本组成元素之一，具有标识图中各个节点的作用，每个顶点可以与其他顶点通过边相连，共同构成图的结构
路径具有起点与终点，是连接不同节点或位置的有序序列，在特定空间或系统中有明确的走向和轨迹，其长度可通过所经元素数量或距离衡量，
映射是一种元素与元素间具有对应关系的概念
路径的核心特征是连接两个或多个点，且具有一定的长度、方向和轨迹，能够明确地标识从一个起始点到一个终点的行进路线，在各种领域如
路径的核心特征是在特定环境或系统中，连接起点与终点的一系列有序步骤或轨迹，它明确地规定了从起始位置到目标位置的行进方式与顺序，
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，其具体实现依赖于所使用的编程语言和具体的数据结构，通过封装数据表示和操作细节，提供
算法效率特点核心概念是执行时间与资源消耗特性
空间复杂度的核心特征是算法在运行过程中临时占用存储空间大小的量度它反映了随着输入规模的增大算法所需额外空间的增长趋势
引用的核心性质是其绑定到一个已存在的对象后，对引用的操作等同于对其所绑定对象的操作
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法
图的边是连接图中两个顶点的元素且具有方向性或无方向性且可有权值或无权值
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小、相互独立且与原问题形式相同的子问题，分别解决这些子问题，然后将
回溯法基础的特点的核心性质是在搜索过程中通过深度优先策略系统地尝试所有可能的解，当发现当前部分解无法导致可行解时就回溯到上一步
动态规划入门是一种用于解决优化问题的算法策略，其核心性质包括最优子结构性质即问题的最优解包含其子问题的最优解，以及重叠子问题性质即子
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过分别解决这些子问题，再将子问题的解合并得到原问题的解
回溯法基础的定义的核心性质是在问题的解空间树中按深度优先策略搜索，以找到满足约束条件和目标函数的解，搜索过程中若发现当前部分
加权图中边带有权重表示其关联元素的某种度量
贪心策略是在求解问题时每步都选当前最优决策的方法
树的节点是树结构中的基本单元，包含数据以及指向其子节点的链接
子节点是树状结构中直接位于某个节点下方的节点
引用是一种给已存在的变量起别名的机制，使得对引用的操作实际上是对其关联的变量进行操作
图的顶点的核心特征是其为图的基本组成元素，用于表示实际问题中的对象或实体，并且通过与边的关联来构建图的结构，顶点之间通过边
简单排序通过比较交换元素位置逐步实现有序排列
迭代法是一种通过从一个初始估计出发，利用同一计算方法反复运算逐步逼近目标解的方法
数据类型是对数据的种类及存储方式等特性的规定
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别对这些子
回溯法基础是一种通过逐步构建问题的解空间并在构建过程中根据约束条件和目标条件进行搜索，当发现当前构建的部分解无法满足要求时就退回上
简单排序具有操作相对简单、易于理解和实现的特点，但在处理大规模数据时效率较低
动态规划入门是一种通过把原问题分解为相对简单的子问题，记录子问题的解避免重复计算，从而自底向上逐步求解原问题以优化解决问题效率的
加权图是图中边带有代表某种权重数值的图结构
动态规划入门的核心性质是将问题分解为相互重叠的子问题，通过求解子问题并记录其解，避免重复计算，从而高效地解决原问题
动态规划入门的特点是通过将问题分解为相互重叠的子问题，保存子问题的解以避免重复计算，从而高效地解决具有最优子结构性质的问题
父节点的核心特征是在树形结构等相关数据结构中，对于某个节点而言，其直接位于该节点之上的节点所具有的关键特性，这些特性包括但不限于在
图中参与构建边且具有特定标识或属性的基本元素是顶点
时间复杂度是指执行算法所需要的计算工作量，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别求解这些子
比较排序基于元素比较确定其相对顺序来排列数据
数据类型具有特定的取值范围、存储方式以及可进行的操作等核心特征
算法效率的核心特征是在合理的时间和空间资源消耗下，能够快速且有效地解决特定问题，其中时间效率体现为算法执行所需时间的长短，空间效率体现为
分治策略将问题分解为子问题求解后合并得到原问题解
具备信息隐蔽性，
贪心策略是在对问题求解时，每一步都做出当前看来最优选择
图的顶点具有可以相互连接形成边、每个顶点有其自身的属性以及在图的结构中占据特定位置等特点
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的算法策略其特点在于能全面无遗漏地考虑问题的各种可能性
稳定性指系统受干扰后能恢复或保持原有状态的特性
回溯法基础的核心特征是在问题求解过程中，通过尝试不同的选择并逐步深入，当发现当前选择无法达到目标或不满足条件时，就退回到上一步
分治策略的特点是将一个规模较大的问题分解为若干个规模较小的子问题，分别解决这些子问题，然后将子问题的解合并得到原问题的解
图的顶点具有能够与其他顶点通过边相连以构成图的结构且是图结构中的基本元素之一的核心性质
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，体现算法运行效率与输入规模之间的关系
空间复杂度是指算法运行过程中所占用的额外空间随输入规模变化的度量
图的顶点的核心特征是在图结构中具有标识作用且可与其他顶点通过边建立关联以构成图的基本组成部分
图的边是连接顶点具有方向或无方向且有权重或无权重的线条
树的查找是在给定的树结构中按照特定规则寻找满足某种条件的节点的操作过程
比较相邻元素大小，大的往后冒最终完成排序
数据类型具有特定取值范围、操作和存储方式等特点
引用是给已存在的对象起一个别名，其核心性质包括与被引用对象绑定，对引用的操作等同于对被引用对象的操作，引用不能为空，引用一旦初始化便
树的度是指一棵树中所有结点的度的最大值
栈的核心特征是具有后进先出的特点，即最后进入栈的元素最先被弹出，而最先进入栈的元素最后被弹出
图的顶点是图结构中的基本元素，是图中数据的载体，图中各边所连接的对象，具有标识性和与边的关联关系以构成图的整体
将问题分解为子问题分别求解再合并得到原问题解
有向图中边具有方向规定了顶点间单向关系
栈的核心性质是后进先出，即最后进入栈的元素最先被弹出
无序性指
图的边是连接图中两个顶点的线或弧表示顶点之间的关系
引用是一种变量，其值为其他变量的内存地址，通过该变量可访问其所引用的变量，从而对引用的变量进行操作
迭代法是通过重复计算逐步逼近问题解的方法
数据物理结构是数据在计算机中存储方式及存储关系
选择基准值分治数据使子序列有序来实现快速排序
加权图是边或顶点带有权值的图结构
时间复杂度衡量算法执行时间随输入规模增长的变化
引用是一种给对象起别名的机制，其核心特征包括：具有与被引用对象相同的类型，通过引用操作实际上是对被引用对象进行操作，引用在定义时
树的节点是包含数据以及指向其子节点的链接的基本数据结构单元
数据类型定义的核心性质包括具有特定的值集、定义在该值集上的一组操作以及规定了值集与操作之间的约束关系
贪心策略是在对问题求解时，总是做出当前看来最优选择
路径的核心特征是连接两个或多个特定位置或节点，在空间或概念上提供从起点到终点的行进轨迹，并且其本身具有一定的长度、方向等属性，
空间复杂度是指算法运行过程中所需的最大存储空间
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，递归地求解这些子问题，然后将各个子
算法效率的定义的核心性质包括算法执行时间随问题规模增长的变化趋势以及算法所需的空间资源随问题规模增长的变化趋势
稳定性核心概念是系统或事物在受干扰时保持原有状态的特性
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，分别求解这些子问题，然后将子问题的
图的边的核心性质是连接图中两个顶点且具有方向或无方向等特性并能体现图的结构和关系
用矩阵表示顶点间邻接关系的数据结构叫邻接矩阵
动态规划入门是通过分解问题记录子问题解来求解最优解的方法
图由顶点集和边集组成顶点集中的元素为顶点边集中的元素为边且边是顶点的无序对或有序对顶点之间通过边相互连接图可以分为有
时间复杂度是算法执行时间随输入规模增长的变化趋势
加权图中边带有表示某种权重的数值
迭代法核心概念是从初始值出发反复用同一计算式求近似解
无向图的核心性质是边没有方向，即若顶点u和顶点v之间存在边，则从u到v和从v到u是同一条边
稳定性特点的核心概念是系统状态受干扰后能恢复原状
算法效率的定义的核心性质是指算法执行时间随问题规模增长的变化情况以及算法所占用的空间资源随问题规模增长的变化情况
图的边是连接图中顶点的线段或弧，其核心性质包括边具有两个端点分别与两个顶点相连，边可以有方向（有向边）或无方向（
引用的核心特征是为对象起一个别名，使得该别名与被引用的对象绑定，对别名的操作等同于对被引用对象的操作，通过引用可以在不同的代码
图的边是连接图中两个顶点的线，具有方向性或无方向性，且可能有权重或无权重等特点
数据类型的核心特征是定义了一组值以及可作用于这些值的一组操作
图的顶点是图结构中的基本元素，是构成图的节点，用于表示实际问题中的对象或实体且与图中的边相关联共同构成图的结构
邻接矩阵是用于表示图的一种矩阵，其特点的核心特征为：矩阵的行数和列数等于图中顶点的个数，若图中两顶点之间有边相连
引用是一种给已存在对象起别名的机制使得对引用的操作等同于对其关联对象的操作
算法效率是指算法执行所需的时间和空间资源，反映算法在不同规模数据下运行的快慢和对系统资源的消耗程度
数据物理结构是数据在存储设备上的存储方式
路径具有从起始点到终点的特定走向，它由一系列有序的节点或位置组成，这些节点或位置按照一定的顺序依次排列，共同构成了从一个地方到另
图是由顶点集和顶点间的边集组成的一种数据结构
动态规划入门的特点是通过将问题分解为相互重叠的子问题，利用子问题的解来避免重复计算，从而高效地解决复杂问题
贪心策略的特点是在对问题求解时总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
图的顶点是图结构中的基本元素具有特定属性关系
路径具有从起点开始按一定顺序经过一系列节点或位置最终到达终点且可能包含多个中间步骤的特点
堆是一种特殊数据结构，满足特定父子节点关系
操作效率特点核心概念是反映操作达成目标快慢程度
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而变化的趋势体现出算法效率与输入规模之间的关系特点
堆是一种特殊的数据结构，它是一棵完全二叉树，且每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子
图的顶点是图结构中的基本元素，具有标识图中各个节点的作用，每个顶点可以与其他顶点通过边相连，是构成图的重要组成部分，其数量决定
线性结构是一种数据结构，其核心性质包括有且仅有一个开始节点和一个终端节点，并且所有节点都最多有一个直接前驱和一个直接后继
图中参与构成边且具有某种标识或属性的元素叫顶点
父节点的核心特征是在数据结构的树形结构中，对于某个节点而言，其直接连接并位于该节点之上的节点所具有的关键特性，这些特性使得该父
引用是为对象起别名，使其与原对象共享同一内存位置
图的顶点具有能够唯一标识且与边相关联以构成图的结构的特点
子节点是树结构中直接被某一节点所连接且处于该节点下方层次的节点
抽象数据类型的定义核心特征是由数据对象、数据对象上的关系以及定义在这些数据对象和关系上的操作组成
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据对象的表示和其相关操作封装在一起，用户仅需关心
简单排序的特点的核心性质是通过比较和交换元素位置逐步将无序序列转变为有序序列且操作较为直观和基础
操作效率的定义的核心特征是以尽可能少的时间和资源投入来达成预期操作目标且产出符合质量标准的结果
图的顶点是图结构中的基本元素，是构成图的节点，用于表示图中的对象或实体，并且通过边与其他顶点相连以构成图的结构关系
堆是一种特殊的数据结构，其特点的核心性质为：父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
树是一种分层结构的非线性数据结构包含根节点等
路径是图中顶点之间的边序列或顶点序列
冒泡排序的核心特征是比较相邻元素大小，若顺序错误就把它们交换过来，不断重复此过程，每一趟都将最大（或最小）的元素“冒泡”到
加权图是边带有代表某种数值权重的图
回溯法基础的特点的核心性质是在问题的解空间树中按深度优先策略搜索，通过试探和回退来寻找满足约束条件和目标函数的解
回溯法基础的定义的核心性质是在问题的解空间树中按深度优先策略搜索，以找到问题的解，搜索过程中通过判断部分解是否满足约束条件和
深度为k的二叉树至多有2的k次方减1个
子节点是树结构或图结构中直接与某个特定节点相连且在层次关系或连接关系上处于该节点下方的节点
动态规划入门的核心特征包括将问题分解为子问题、记录子问题的解以避免重复计算、通过求解子问题并结合最优子结构性质来得到原问题的最优
引用的核心性质是其绑定到一个对象后就一直指向该对象，对引用的操作实际上就是对其所绑定对象的操作
将问题分解为子问题，分别求解后合并得到原问题解
堆是一种特殊的数据结构，其核心性质为父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
比较相邻元素大小，大的往后冒，重复此过程完成排序
回溯法基础的特点的核心性质是在问题的解空间中按照深度优先策略搜索，通过不断尝试和回溯来寻找满足条件的解，在搜索过程中利用剪枝
穷举法是对所有可能情况逐一测试以求解问题的方法
稳定性是指系统在受到外界干扰后能够保持原有状态或恢复到原有状态的能力，其核心性质包括系统状态的相对持久性、抗干扰能力以及在一定范围内对变化
栈是一种后进先出的数据存储和操作结构
抽象数据类型是数据值及操作数据值的一组抽象运算
映射是一种元素与元素间有对应关系的数学概念
迭代法是重复执行运算步骤从初值推求近似解的方法
穷举法是一种通过对问题所有可能的情况逐一进行检验，从而找出符合条件的解的方法
在树形数据结构中，对于某一节点而言，直接位于其上方且与该节点通过特定关系相连的节点即为该节点的父节点
图的边是连接图中两个顶点的线其具有方向性或无方向性有权值或无权值等特点用于表示顶点之间的关系
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，反映算法执行时所需的额外空间随输入规模增长的变化情况
若任意
在一个图中，若从任意一个顶点出发，沿着边能够到达图中的其他任意顶点，则该图为连通图，其核心特征是图中任意两个顶点之间都存在
路径是图中顶点之间的边序列其具有从一个顶点开始经过一系列边到达另一个顶点的有序性且每条边都与相邻的顶点相连并唯一确定了顶点间
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，当n=0时称为空树，任意一棵非空树满足有且仅有一个特定
引用的特点的核心特征是对已存在内容的直接或间接提及并加以利用以增强表达效果或支持观点等
线性查找是按顺序逐个检查元素以确定目标元素的方法
图中参与构成图结构且具有特定标识的基本元素就是顶点
抽象数据类型的定义的核心性质包括数据对象集、数据关系集以及定义在数据对象集和数据关系集上的基本操作集
在树形结构中，一个节点若存在直接连接它且处于更高层级的节点，则该更高层级的节点就是此节点的父节点
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过分别解决这些子问题，然后将子问题的解合并得到原问题解的一种
图的顶点的核心性质是其在图结构中具有标识和连接其他元素（边）的作用，通过顶点可以构建图的拓扑结构并用于各种图相关的分析和
贪心策略的核心性质是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，所做出的仅是在某种意义上的局部最优
堆是一种特殊的数据结构满足特定父子节点关系特性
队列是一种先进先出，元素按顺序进出的数据结构
线性表的核心性质是有且仅有一个开始结点没有直接前驱有且仅有一个终端结点没有直接后继其余结点有且仅有一个直接前驱和一个直接后继
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点被
用矩阵表示顶点间是否有边相连的图数据结构
路径具有从起始点到终点的连续轨迹特性，其长度由所经过的边或节点数量决定，且在图或网络等结构中有明确的方向或无向性，
树中各节点度的最大值为该树的度
图是由顶点集及顶点间边集组成的数据结构
树的度是树内各节点度的最大值体现节点分支情况
图的边是连接图中两个顶点的线段或弧，它表示顶点之间的某种关系
图的边是连接图中两个顶点的连接线，它可以是有向的表示从一个顶点到另一个顶点的单向关系也可以是无向的表示两个顶点之间的
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，分别解决这些子问题，然后将子问题的解合并得到原问题的解，其
集合中的元素具有确定性、互异性和无序性
图的顶点具有能够作为图的基本元素且与其他顶点通过边相互连接从而构成图的结构这一核心性质
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，它忽略了算法中每条语句的具体执行时间以及常数因子，主要关注当输入规模无限增大
图中顶点是构成图的基本元素用于表示对象
路径的核心性质是由一系列顶点和边依次连接而成且相邻顶点间存在边相连
堆的核心特征是对于堆中的每个节点，其值大于或等于其子节点的值（大顶堆），或者小于或等于其子节点的值（小顶堆），并且堆
数据类型定义了数据的取值范围及可进行的操作
路径是图中从一个顶点出发，沿图中的边依次经过其他顶点，最终到达另一个顶点所经过的顶点序列（包括起始顶点和终止顶点），其核心特征
无向图的核心性质是任意一条边所连接的两个顶点之间的关系是对称的不存在方向区别且图中边仅表示顶点之间的某种关联而不具有特定方向
树的度的核心特征是树中所有结点的度的最大值，它反映了树中各结点分支情况的复杂程度，决定了树的结构形态和相关操作的特性
根节点是树结构中位于顶端没有前驱的起始节点
时间复杂度是用来描述算法执行时间随输入规模增长而变化的趋势，体现算法效率与输入规模之间关系的一种度量
图中参与构成边且具有某种标识的基本元素叫顶点
图的边是连接图中顶点的线条表示图的结构关系
抽象数据类型的定义的核心性质包括数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图中每个顶点的信息，边表中存储与每个顶点相邻接
用矩阵表示顶点间相邻关系的一种数据结构是邻接矩阵
存储结构是数据及其关系在计算机内存中的存储方式
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征是衡量算法运行所需的额外空间随输入规模增长的变化情况
将问题分解为子问题求解后合并子问题解来解决问题
稳定性是指系统在受到外界干扰后，能够保持其原有状态或恢复到原有状态的能力，其核心性质包括系统状态在干扰作用下不会发生无界增长，会
有向图的核心性质是其边具有方向性，即从一个顶点指向另一个顶点，顶点之间的连接存在特定的指向关系
迭代法是通过不断重复运算逐步逼近问题答案的方法
数据类型定义是对数据性质及操作的一种规定
队列是一种先进先出的线性数据结构
引用通过别名关联同一对象，共享内存节省空间
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的算法策略
邻接矩阵是用于表示图的一种矩阵，其中矩阵元素的值表示图中顶点之间是否存在边以及边的相关信息，若两顶点间有边则对应元素为特定
在最后一层上只缺少右边的若干节点
映射是一种元素对应关系，一个对一个或多对一
栈是后进先出，只在一端进行数据操作的数据结构
图的边是连接图中两个顶点的无序对或有序对，其中无序对表示无向边，有序对表示有向边
动态规划入门是一种通过把原问题分解为相对简单的子问题，并保存子问题的解避免重复计算，从而解决复杂问题的算法策略及相关概念方法的初步学习
路径是图中两顶点间通过边的有序顶点序列
线性查找是按顺序逐个检查元素来确定目标元素位置
抽象数据类型的核心性质包括数据对象集、数据对象集上定义的基本操作集以及基本操作集的语义定义
树中各节点度的最大值即为树的度，它反映了树中节点分支情况的最大程度，体现了树结构的复杂程度，且树中每个节点的度都
数据类型的核心性质包括具有特定的值集、定义在该值集上的一组操作以及对这些操作的语义规定
将问题分解为子问题求解后合并子问题解以获原问题解
穷举法的核心特征是对问题所有可能的解逐一进行尝试，通过检验每个可能解是否满足问题的条件来找出正确答案
线性表具有有且仅有一个开始元素和一个终端元素，除开始元素外每个元素有且仅有一个直接前驱，除终端元素外每个元素有且仅有一个直接后继的
集合是由确定的不同对象所构成的整体
穷举法是一种通过对问题所有可能情况进行逐一列举和检验，从而找出符合条件的解的方法
映射是一种元素与元素间具有特定对应关系的概念
树的核心性质是任意两个节点有且仅有一条路径连通且一棵树若有n个节点则有n-1条边
图的顶点是图结构中的基本元素，是构成图的节点，用于表示实际问题中的对象或实体且通过边与其他顶点相连
栈是一种后进先出的数据结构，其核心特征在于元素的进出遵循特定顺序，即最后进入栈的元素最先被取出，而最先进入栈的元素最后被取出
算法效率是衡量算法执行时间和资源消耗的指标
堆是一种特殊的数据结构，其核心性质为每个节点的值大于或等于其子节点的值（大顶堆）或每个节点的值小于或等于其子节点的值（小顶堆）
对于最小堆，每个节点的值都小于或等于其子节点的值
父节点是在树形结构中直接位于某个节点之上的节点
操作效率核心概念是单位时间内有效完成操作的能力
操作效率是指在一定时间内完成特定操作的数量或质量与所投入资源（包括人力、时间、设备等）的比率所反映出的效能情况
树是一种分层数据结构每个节点有零个或多个子节点
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小、相互独立且与原问题形式相同的子问题，然后分别求解这些子问题，最后
引用是一种给已存在对象起别名的机制，具有与被引用对象绑定且其值随被引用对象改变而改变的特点，通过引用可以方便地访问和操作被
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在运行过程中所需的额外空间随输入规模增长的变化情况
动态规划入门核心概念是通过分解问题利用子问题解求原问题解
顺序表的特点的核心特征是逻辑上相邻的元素在物理存储位置上也相邻，其存储单元是连续的，可通过数组下标直接计算出元素的存储地址，
简单排序的特点的核心性质是通过比较元素大小并逐步交换位置来将无序序列转换为有序序列
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解的一种策略
路径是图中从一个顶点到另一个顶点的顶点序列，且序列中相邻顶点之间存在边，该顶点序列构成了从起始顶点到终止顶点的一条通路，其中
空间复杂度的核心特征是衡量算法在运行过程中所需要的额外空间随输入规模增长的变化情况
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只考虑局部最优解，期望通过局部最优选择
简单排序的核心性质是通过比较和交换元素的位置，将无序序列逐步转化为有序序列，每次操作都能使序列向有序状态靠近一步
简单排序的核心特征是通过比较和交换元素的位置，将无序序列逐步转化为有序序列，其过程相对直观和基础，通常基于相邻元素或特定位置元素间的
稳定性的特点的核心性质是系统在受到外界干扰后能够保持原有状态或恢复到原有状态的能力
邻接矩阵是用于表示图的一种矩阵，其中行和列分别对应图中的顶点，矩阵元素的值表示对应顶点之间是否存在边以及边的相关信息（如权值
图的顶点是图结构中的基本元素，是构成图的各个节点
在树形结构中直接位于某节点之上的节点就是该节点的父节点
动态规划入门是一种用于解决优化问题的算法策略，其核心特征是将问题分解为相互重叠的子问题，通过求解子问题并记录其解，避免重复计算，
简单排序的特点的核心性质是通过比较和交换元素位置逐步将无序序列转变为有序序列
集合具有确定性互异性无序性等特点
图的边是连接图中两个顶点的线，它表示顶点之间的某种关系或连接
图是由顶点集和顶点间的边集组成的数据结构，其中顶点集是有穷非空的，边集可以为空，边是顶点的无序对或有序对
递归基础是递归函数中直接返回结果而不再调用自身的条件
路径具有起点与终点明确可标识，由一系列有序的节点或元素依次连接而成，是从起点到终点的特定轨迹且具有唯一性，同时在其构成的空间或结构
数据类型特点包括取值范围、操作及表示形式等特性
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征是衡量算法运行时所需的额外空间随输入规模增长的变化情况
集合是由确定的、彼此不同的一些对象所组成的整体
算法效率的特点包括时间效率和空间效率，时间效率指算法执行时间随问题规模增长的变化情况，空间效率指算法执行过程中所需存储空间随问题规模增长的变化
迭代法是一种通过从一个初始估计出发，重复使用相同的计算步骤逐步逼近问题精确解的方法其特点在于利用前一步的结果来计算下一步的值直至达到所需的
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和操作的实现细节封装起来，用户只需
加权图是边或顶点带有数值权重的图结构
引用是C++中为已存在的变量起的一个别名，通过该别名可以对变量进行操作，其本质是给一个已定义变量的内存地址起的另一个名字
树中各节点度的最大值为树的度
动态规划入门是一种用于解决具有重叠子问题和最优子结构性质的问题的算法策略，通过将问题分解为较小的子问题，并记录子问题的解以避免重复
图的边是连接图中两个顶点的线具有可表示顶点之间关系以及数量和连接方式影响图的结构和性质等特点
树的节点是树状结构中包含数据及连接关系的基本单元
数据类型是对数据的一种分类，它定义了数据的取值范围、表示方式以及可以进行的操作
递归基础是递归函数中最简单情况可直接得出结果
无向图是一个二元组 G=(V,E)，其中 V 是顶点集，E 是边集，且边集中的每条边都是无序对，连接着顶点集中
图的顶点具有可以作为图的基本元素用于构建图的结构、与边相关联以表示图中元素之间的关系、可以具有不同的属性如标识编号等特点的
树的查找是在给定的树结构中按照特定规则找到满足一定条件的节点的操作过程
比较排序通过比较元素大小来确定元素最终位置
堆是一种特殊的数据结构，它是一棵完全二叉树，且每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶
树中所有结点的度的最大值就是树的度，它反映了树中各结点分支数目的最大情况，体现了树的复杂程度，度越大表明树中结点的
简单排序的特点的核心性质是比较和交换元素以将无序序列转换为有序序列
迭代法是从初始值出发通过重复计算逼近结果的方法
图的边是连接图中两个顶点的元素，具有方向性或无方向性，且边可以有权重来表示顶点之间连接的某种属性或代价等
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否存在边以及边的相关属性
比较相邻元素大小，大的往后冒泡完成排序
抽象数据类型具有数据封装、数据抽象、信息隐蔽和使用与实现分离的核心特征，它将数据和操作封装在一起，通过数据抽象隐藏内部实现细节，使得使用者只需
引用是给变量起别名，与原名共享内存空间
穷举法是对所有可能情况逐一检验以求解问题的方法
图的顶点的核心性质是在图结构中用于标识和区分各个节点，每个顶点都有其独特的标识，并且通过边与其他顶点相互连接从而构成图的整体
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，按顺序求解子问题以得到原问题最优解的算法策略
操作效率是指在一定时间内完成特定操作任务所达成的效果与投入资源（包括时间、人力、物力等）之间的比率关系，体现了完成操作的速度、
交换排序的核心特征是通过比较元素大小，若顺序不符合要求则进行元素交换操作，不断重复此过程直到整个序列有序
数据类型的核心特征是定义了一组值以及可施加于这些值上的一组操作
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆）或者每个节点的值都小于或
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其元素值根据顶点间是否有边相连等情况来确定
引用是给已存在对象起的一个别名，指向同一内存位置
路径是图中顶点之间的边所构成的序列且具有从起始顶点开始经过一系列边到达终止顶点以及有长度等相关特性
操作效率是指在完成特定任务或一系列操作过程中，单位时间内所达成的有效成果数量或所消耗资源的合理程度等反映操作快慢及优劣程度的指标
引用的核心特征是它为对象提供了一个别名，使得对引用的操作实际上是对其所引用对象的操作，通过引用可以间接访问和修改被引用的对象，并且
图的边是连接图中两个顶点的线或弧，用于表示顶点之间的关系且每条边可被赋予权重等属性
图是由顶点集和顶点间边集构成的数据结构
集合是由确定的不同对象所组成的整体
数据类型是对数据的种类及性质等的规定
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况
引用是给已存在对象起的别名，指向同一内存位置
顺序表是用一组地址连续的存储单元依次存储数据元素
树结构中位于顶层没有前驱的起始节点即根节点
数据类型的定义具有一组值以及定义在这组值上的一组操作这一核心性质
引用是给变量起别名，与原变量共享内存，改变其一另一个也变
简单排序核心概念是按特定规则依次比较交换元素位置
空间复杂度的核心性质是衡量算法在运行过程中所需要的额外空间随输入规模增长的变化情况
树中所有结点的度的最大值即为树的度它反映了树中各结点分支数目的最大值体现了树的复杂程度
简单排序的核心性质是通过比较和交换元素位置，将无序序列逐步转换为有序序列，每次操作都基于相邻元素或特定范围内元素的比较来调整顺序以达到最终
邻接矩阵是用于表示图的一种矩阵，其特点是：若图中有n个顶点，矩阵是n阶方阵，元素表示对应顶点间是否有边或弧相连，
操作效率的特点是在完成特定任务或一系列操作过程中所展现出的关于速度、及时性、资源利用有效性以及流畅性等方面的特性表现
动态规划入门是一种通过把原问题分解为相对简单的子问题，记录子问题的解以避免重复计算，从而高效解决复杂问题的算法设计策略
队列是一种先进先出、按顺序排列元素的数据结构
加权图各边有代表不同权重的数值体现其特点
树的节点是树结构中的基本组成单元包含数据以及指向其子节点的引用
图是由顶点集和顶点间边集组成的数据结构
引用是对已存在对象的别名，指向同一内存地址
稳定性是指在数据结构中，对于相同的输入，算法多次执行时产生相同输出且不破坏原有数据的特性
树中各结点度的最大值为树的度
操作效率特点核心概念是单位时间完成操作数量等情况
时间复杂度是指执行算法所需要的计算工作量，其核心性质为算法执行时间的增长趋势与问题规模之间的关系，反映了算法效率随输入规模增加的变化情况
加权图是各边带权值反映边的某种属性的图
迭代法通过重复步骤从初始值逐步逼近问题的解
路径是图中顶点之间的边的序列且具有起始顶点与终止顶点可相同或不同以及长度由边的数量决定等特点
树中包含数据及指向子节点关系的基本单元叫节点
操作效率特点核心概念是单位时间内完成操作的量
比较相邻元素大小，将较大元素交换到右侧，重复此过程直至完成排序
图的边是连接图中两个顶点的一种关系或连线
图的边是连接图中两个顶点的元素其核心特征包括有方向或无方向有向边规定了顶点之间的单向关系无向边则表示顶点之间的双向连接
无向图是由顶点集和边集构成的图，边无方向
在树结构中确定特定元素是否存在及位置的操作叫树的查找
引用是给已存在的变量起一个别名，使得对引用的操作等同于对其绑定的变量的操作
数据类型定义的核心特征是对数据的取值范围以及在这些数据上可执行的操作进行明确规定
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否存在边以及边的相关属性（如权重等，若有）
邻接矩阵是用于表示图的一种矩阵，其核心特征为：对于一个具有n个顶点的图，该矩阵是一个n×n的方阵，矩阵中元素的值表示
从数据序列开头依次逐个比较查找目标元素
广度优先搜索按层次依次扩展节点以寻找目标节点
深度优先搜索是按深度方向优先扩展节点的搜索方法
树的查找是在给定的树结构中按照特定规则寻找特定元素或满足一定条件的元素的操作过程
引用是一种给已存在的变量起别名的机制，使得对引用的操作等同于对其绑定的变量的操作
树中各节点度的最大值就是树的度体现其分支情况
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而高效解决复杂问题的算法思想和方法
堆的核心特征是对于堆中的每个节点，其值都大于或等于其子节点的值（大顶堆），或者小于或等于其子节点的值（小顶堆）
在树结构中按特定规则找到目标数据的操作就是树的查找核心概念
回溯法基础的定义的核心特征是通过逐步构建问题的解，在每一步选择时尝试所有可能的选项，当发现当前选择无法导致可行解时就回溯到上
回溯法是通过尝试和回退来求解问题的方法
操作效率的核心特征是在一定时间内以最少的资源投入获得最大的产出，且能够稳定、持续、高效地完成各项任务，同时具备对各种变化和突发情况
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法，其核心性质是对问题的所有可能情况进行全面无
操作效率核心概念是单位时间内完成操作的有效程度
顺序表的特点的核心特征是逻辑上相邻的元素在物理存储位置上也相邻，并且可以通过数组下标直接计算出元素的存储地址，其存储密度高，支持
除了最后一个元素
堆是一种特殊的数据结构，它是一个完全二叉树，并且每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子
数据类型的核心性质是定义了一组值以及可作用于这些值的一组操作
抽象数据类型是数据及操作封装，与具体实现分离
线性结构的核心特征是存在一个线性序列，其中的元素按顺序排列，每个元素有且仅有一个直接前驱（除第一个元素外）和一个直接后继（除最后一个
栈是一种特殊的线性表，其核心特征在于它具有后进先出的操作特性，即最后进入栈中的元素最先被取出，而最先进入栈中的元素最后被取出
路径是图中从一个顶点到另一个顶点的顶点序列且序列中相邻顶点之间存在边，它具有连通性、方向性、可重复性、长度可度量等特点
比较排序通过比较元素大小来确定元素间的顺序
线性结构的核心性质是存在一个线性序列，其中元素之间具有一对一的线性关系，有唯一的开始元素和结束元素，且除开始和结束元素外每个元素有且
分治策略核心概念是将问题分解为子问题再求解合并
树中各结点度的最大值就是树的度
操作效率的定义的核心性质是反映完成特定操作所耗费时间、资源等的程度以及体现操作的快慢、优劣等情况
操作效率是指在一定时间内完成特定操作任务的速度和质量的综合体现，反映了单位时间内有效产出与投入资源之间的关系
交换排序的核心特征是通过比较元素并交换不满足顺序要求的元素位置，逐步将无序序列转变为有序序列
图的边是连接图中两个顶点的线条表示关系
顺序表是一种线性表，它的逻辑关系上相邻的元素在物理位置上也相邻，元素存储在一片连续的存储单元中
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别求解这些子问题，最后
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表存储图中各个顶点的信息，边表存储与每个顶点相邻接的顶点
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它主要关注算法执行期间所需的额外空间随输入规模增长的变化情况
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在执行过程中所需的额外空间随着问题规模的变化而变化的特性
父节点是在树形结构中直接位于某个节点之上的节点，具有比该节点更高的层级且与该节点存在特定的父子关系从而形成树形结构的层级关联
算法效率核心概念是衡量算法执行时间和资源消耗情况
子节点是树结构中某一节点直接连接的下一层节点
抽象数据类型具有数据对象、数据关系以及定义在这些数据对象和数据关系上的一组操作，其核心性质包括数据封装将数据和操作封装在一起，信息隐蔽对外隐藏
路径是在图或树等数据结构中从一个顶点或节点出发，沿着边或分支依次经过一系列顶点或节点最终到达另一个顶点或节点所形成的顶点序列
动态规划入门是一种通过把原问题分解为相对简单的子问题，并记录子问题的解以避免重复计算，从而解决复杂问题的算法设计策略
路径是图中从一个顶点到另一个顶点的顶点序列，序列中相邻顶点之间存在边且该序列表示了从起始顶点到终止顶点的一条通路，其特点包括
图的顶点的核心特征是其作为图的基本元素，用于表示各种实体或对象，并且通过与边的关联来体现图的结构和关系，顶点具有唯一标识以便
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，所做出的仅是在某种意义上的局部最优
简单排序是对一组数据按照特定规则依次比较元素大小并进行交换等操作，使数据按升序或降序等顺序排列，其核心特征是基于元素间的比较
数据类型特点是规定数据取值范围、操作方式等特性
引用是给已存在的变量起一个别名，使得对该别名的操作等同于对原变量的操作
有向图中边具有方向性，即从一个顶点指向另一个顶点，顶点之间的连接关系不是对称的
路径的核心特征是其在某个空间或系统中具有从一个起始点出发，经过一系列中间点，最终到达一个终点的连续轨迹性质，且这一轨迹反映了特定
操作效率是指在一定时间内完成的操作数量或任务量与所消耗资源量之间的比率所反映出的对操作过程中资源利用程度及操作速度快慢的一种
无向图中任意两个顶点之间的边没有方向，若存在边连接顶点u和顶点v，则从u到v以及从v到u是同一条边
抽象数据类型具有数据抽象和数据封装的核心特征，数据抽象是指将数据对象的逻辑特性和操作特性抽象出来，数据封装则是把数据对象的表示和操作
操作效率是指在数据结构相关操作中，衡量完成特定任务所需时间、资源等的综合指标以反映该操作的效能情况
比较相邻元素大小，大的往后冒泡逐步完成排序
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，通过递归地解决这些子问题，然后将子
分治策略的特点的核心性质是将一个规模较大的问题分解成若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过分别求解
无向图是由顶点集和边集构成且边无方向的图
图的边是连接图中两个顶点的线表示它们的关系
在树形数据结构中，对于某一节点而言，直接位于其上方且与该节点通过特定关系相连的节点就是该节点的父节点
集合是具有某种特定性质的具体或抽象的对象汇总
路径的特点包括有起点和终点且是从起点到终点的有序顶点序列以及具有连通性和连续性等方面共同构成的一种数据结构相关特性
操作效率的特点是指在执行各种操作过程中所展现出的与时间、资源利用、流程顺畅度等相关的特性表现，包括操作速度快慢、资源消耗多少、
图的顶点是图的基本组成元素之一，具有标识图中节点位置的作用，且可通过边与其他顶点相连从而构成图的结构
图的边是连接图中两个顶点的一种关系或连接元素，它用于表示顶点之间的某种关联或连接，并且可以具有诸如权重等属性来描述这种连接的特性
父节点是在树形结构中，直接与某个节点相连且处于该节点之上一层的节点，具有比该节点更高的层级关系并能通过特定的连接关系追溯到它
图的边的核心性质是连接图中两个顶点且具有方向或无方向等相关特征，用于描述图中顶点之间的关系及图的结构特性
抽象数据类型的核心特征是将数据和操作数据的方法封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注接口的功能而无需了解
时间复杂度描述算法执行时间随输入规模增长的变化趋势反映算法效率与输入规模关系且与具体机器和编程语言无关
图的顶点是图结构中的基本元素，是构成图的各个节点，用于表示实际问题中的对象或实体，并且通过边与其他顶点相连以反映它们之间的关系
树是一种分层结构且有唯一根节点的非线性数据结构
操作效率的定义的核心性质是衡量在一定条件下完成特定操作所耗费资源或时间等的程度以体现操作的优劣程度
引用的核心性质是其为对象的别名，绑定到已存在的对象，对引用的操作等同于对其所绑定对象的操作
路径是连接起点与终点的具有特定走向的路线
数据物理结构指数据在存储设备上的存储方式特点
树是n个结点的有限集，有且仅有一个根且分若干子树
动态规划入门的核心特征是将问题分解为相互重叠的子问题，通过求解子问题并保存其解，避免重复计算，从而高效地解决原问题
用矩阵表示顶点间邻接关系且元素值反映连接情况
回溯法是一种通过试探性地逐步构建问题的解，当发现当前部分解无法导致完整有效解时就回溯到上一步重新选择，以找到所有可能解或最优
映射是一种元素与元素按规则对应关系
加权图各边有代表某种属性值的权重
非线性结构中元素之间的关系不满足线性关系
时间复杂度是一个函数，它定性描述该算法的运行时间，其核心性质是用来衡量算法执行时间随输入规模增长而增长的变化趋势
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找到符合条件的解的方法其核心性质是对问题的所有可能情况进行全面无遗漏
邻接矩阵是用于表示图的一种矩阵，其中若图中存在从顶点i到顶点j的边，则矩阵中第i行第j列的元素值为1，否则
树结构中位于顶端没有前驱的起始节点是根节点
分治策略将问题分解为子问题，分别求解后合并结果
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，它通过数据对象、数据对象上的关系以及对数据对象的基本操作来完整定义
在树结构中按特定规则找到目标元素的操作就是树的查找
动态规划入门核心概念是通过拆分问题利用已解子问题求解
贪心策略是一种在对问题求解时，总是做出在当前看来是最好选择的策略，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
邻接矩阵的核心特征是能清晰直观地表示图中各顶点之间的邻接关系，矩阵中元素的值表示对应顶点之间是否存在边或弧，其行列分别对应
树中各节点度的最大值即为该树的度
操作效率的特点是指在完成特定任务或执行特定操作过程中所展现出的诸如速度快慢、资源利用程度高低、流程流畅性与否等方面的特性
树是一种分层数据结构，有根且子树不相交
图由顶点集和边集组成其中顶点集是有穷非空集合边集是顶点集笛卡尔积的多重子集并且每条边依附于一对顶点
邻接矩阵的核心性质是其元素表示图中顶点之间是否存在边，若存在边则对应位置元素为1，不存在则为0，且主对角线元素通常为0
路径是图中从一个顶点到另一个顶点的顶点序列且该序列中顶点间有边相连
简单排序的核心性质是通过比较和交换元素的位置，将无序序列逐步转换为有序序列
动态规划入门是一种通过把原问题分解为相对简单的子问题，求解子问题并保存其解，避免重复计算，从而高效解决复杂问题的算法策略，其核心
在树形结构中位于顶端没有前驱的节点是根节点
穷举法是对可能是解的众多候选解按某种顺序进行逐一枚举和检验，并从中找出那些符合要求的候选解作为问题的解的方法
邻接矩阵的核心性质是其元素表示图中顶点之间是否存在边，矩阵中第i行第j列的元素值为1表示顶点i到顶点j有边相连
图中参与构建边且具有某种标识或属性的基本元素
邻接矩阵是用于表示图的一种矩阵，其中矩阵的行和列分别对应图中的顶点，矩阵元素的值表示对应顶点之间是否存在边以及边的相关信息（如
抽象数据类型具有数据封装、数据抽象、信息隐蔽、使用与实现分离等核心特征，它将数据和操作数据的方法封装在一起，对外提供统一的接口，隐藏数据
稳定性特点的核心概念是系统在干扰下保持原有状态的能力
操作效率的核心特征是在特定时间内以最少的资源消耗完成最多的有效操作，实现资源利用的最大化和操作流程的最优化，从而快速且高质量地达成预期
算法效率的核心性质是指算法执行时间随问题规模增长的变化情况以及算法所需的存储空间随问题规模增长的变化情况等，体现算法运行速度和资源消耗等方面
图由顶点集和边集组成，顶点集中的元素称为顶点，边集是顶点对的集合，图中的边可以是有向的也可以是无向的，有
集合是由确定的元素所构成的整体
穷举法是一种通过对问题所有可能情况进行逐一列举和检验，从而找出符合条件的解的解题方法
图的边是连接图中两个顶点的线段或弧，具有方向或无方向、有权重或无权重等特点能够描述顶点间的关系和连接性质
树是一种分层结构，有根且子树不相交
若它的
图的边是连接图中两个顶点的线段或弧，表示顶点之间存在某种关系
时间复杂度的核心性质是算法执行时间随问题规模增长的变化趋势与增长率，反映算法效率和可扩展性
图由顶点及顶点间边构成各顶点关系复杂多样
深度为k有n个节点的二叉树，除第k层外节点数满且最下一层靠左
穷举法是一种通过对问题所有可能情况逐一进行检验，从而找出符合条件的解的方法
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而高效解决具有重叠子问题和最优子结构性质问题的
操作效率是指在完成特定任务或一系列操作过程中，单位时间内所达成的有效成果量或所消耗资源与产出成果之间的比率关系所体现出的工作效能
动态规划入门是一种通过把原问题分解为相对简单的子问题，记录子问题的解避免重复计算，从而高效求解复杂问题的算法策略
贪心策略的核心性质是在对问题求解时，总是做出在当前看来是最好的选择，即每一步都选择局部最优解，期望通过这样的方式最终得到全局最优
算法效率的定义的核心性质包括时间效率和空间效率，时间效率指算法执行时间随问题规模增长的变化情况，空间效率指算法执行过程中所需的存储空间随问题
图的顶点是图结构中表示元素的基本单元
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过分别求解子问题
在树形结构中直接位于某节点之上的节点是其父节点
堆是一种特殊的数据结构，其核心性质是父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
用矩阵表示顶点间连接关系的图数据结构叫邻接矩阵
栈的核心特征是后进先出，即最后进入栈的元素会最先被取出，而最先进入栈的元素会最后被取出
空间复杂度的核心性质是指算法在运行过程中所需要的额外空间随输入规模增长的变化情况
无向图的核心性质是边没有方向，顶点之间的连接是双向的，即若存在边连接顶点u和顶点v，则从u到v以及从v到u都
抽象数据类型是指一个数学模型及定义在该模型上的一组操作，它仅通过接口与外界交互，将数据的表示和操作的实现细节封装起来
路径是图中两个顶点之间的顶点序列且序列中相邻顶点之间存在边
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在运行时所需的额外空间随输入规模增长的变化情况
邻接矩阵是用于表示图的一种矩阵，其中矩阵的行和列分别对应图中的顶点，矩阵元素的值表示对应顶点之间是否存在边以及边的权值等相关
动态规划入门是一种用于解决优化问题的算法策略，其核心性质包括最优子结构性质，即问题的最优解包含其子问题的最优解，以及重叠子问题性质，
有向图中边具有方向，顶点间关系非对称
回溯法是按选优条件深度探索解空间并适时回溯的方法
邻接矩阵是表示图的一种方式，其特点的核心特征包括：矩阵的行数和列数等于图中顶点的个数，矩阵元素的值表示对应顶点之间是否有边
动态规划入门的特点的核心性质包括最优子结构性质和重叠子问题性质，最优子结构性质指问题的最优解包含其子问题的最优解，重叠子问题性质指
数据类型的核心特征是定义了一组值以及可施加于这些值的一组操作，它规定了数据的表示方式和数据在程序中所能进行的合法运算，使得程序
稳定性是指在数据结构的操作过程中，相同元素之间的相对位置在经过特定操作后保持不变的特性
操作效率的特点是指在完成特定任务或一系列操作过程中，所展现出的诸如速度快慢、资源利用程度、流程顺畅与否、响应及时性等方面的综合表现及
矩阵中元素的值表示
路径具有从起点开始按特定顺序依次经过一系列节点或位置最终到达终点的特点，其核心特征包括存在明确的起始点和终止点，且在两点之间有着特定的
最后一层上的节点都集中在该层最
穷举法是对所有可能情况逐一检查以求解问题
简单排序的核心特征是通过比较和交换元素的位置，将无序序列逐步转化为有序序列，其过程相对直观且易于理解，通常基于相邻元素或特定位置元素间
在树结构中按特定规则寻找目标元素的操作叫树的查找
堆是一种特殊的数据结构，它是一棵完全二叉树，并且每个节点的值都大于或等于其子节点的值（大顶堆）或者小于或等于其子节点的值（小顶
无向图中边没有方向，顶点间可双向连通
加权图中边带有权重表示其关联元素的某种量化关系
操作效率的核心特征是在特定的操作过程中，能够以最少的时间、资源消耗以及最高的准确性和流畅性来完成任务，从而实现产出最大化和成本最小化
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，然后分别求解这些子问题，最后
数据类型是对数据的一种分类，它定义了数据所具有的取值范围、存储方式以及可以进行的操作等特性
动态规划入门是一种通过将问题分解为相互重叠的子问题并利用子问题的解来求解原问题，以优化解决具有最优子结构性质问题的算法策略
数据类型的特点的核心特征包括具有特定的数据表示形式、定义了一组操作以及有明确的取值范围
数据类型定义的核心特征是对数据的取值范围、数据表示形式以及在该数据上可进行的操作的明确规定
稳定性指系统受扰动后能恢复或趋向原有状态的特性
时间复杂度描述算法执行时间随输入规模增长的变化趋势
动态规划入门是一种用于解决最优子结构和重叠子问题的算法策略通过将问题分解为子问题并利用子问题的解来构建原问题的最优解
路径的核心特征是连接起点与终点并具有一定的走向和轨迹可依循从而能在空间或概念等范畴内实现从一处到另一处的过渡
引用是给已存在变量起的一个别名，对引用的操作实际上就是对其所引用变量的操作，其特点包括与被引用对象绑定后不能再引用其他对象、具有
图由顶点及顶点间边构成可直观表示关系结构
稳定性是指系统在受到外界干扰后能够保持原有状态或恢复到原有状态的能力，其核心性质包括在一定范围内系统状态不会因干扰而发生剧烈变化以及干扰消除
算法效率特点核心概念是执行时间和资源消耗情况
时间复杂度是指在计算机科学中，算法执行时间随问题规模增长而增长的变化程度的一个度量
动态规划入门是将问题分解为子问题并利用其解求解原问题
图由顶点集和边集组成其中顶点集是有穷非空集合边集是顶点集的笛卡尔积的多重子集
动态规划入门是一种通过将问题分解为重叠子问题并利用子问题解来高效求解复杂问题以优化计算过程的方法特点
操作效率指单位时间内完成操作的有效成果量
交换排序的核心特征是通过比较序列中元素的大小关系，若顺序不符合要求则进行元素交换，直至整个序列有序
顺序表的特点的核心性质是逻辑上相邻的元素物理存储位置也相邻，且可以通过数组下标直接计算出元素的存储地址
贪心策略是指在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解从而得到全局最优解
穷举法是对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的一种方法
分治策略的特点是将一个规模较大的问题分解为若干个规模较小的子问题，分别求解这些子问题，然后将子问题的解合并得到原问题的解
简单排序是对给定数据序列，通过比较元素大小并进行交换等操作，将其按特定顺序（如升序或降序）排列，核心特征在于基于元素间的
图的顶点是图结构中的基本元素，具有标识图中不同实体或对象的作用，是边所连接的对象，通过顶点及其之间的边共同构成图的结构以
动态规划入门是一种通过将问题分解为相互重叠的子问题并记录子问题解以避免重复计算从而高效求解复杂问题的算法设计策略
穷举法的核心性质是对问题所有可能的解逐一进行检验以找出符合条件的解
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据和操作封装在一起，仅对外提供抽象接口来隐藏内部
图的边是连接图中两个顶点的线段或弧，用于表示顶点之间的关系
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解或最优解的方法其核心特征是对问题的所有可能情况进行
在树形结构中位于顶端没有前驱的节点就是根节点
抽象数据类型具有数据抽象和行为抽象的核心特征，数据抽象指将数据对象的表示与使用分离，行为抽象指定义一组操作数据对象的方法，这些操作通过接口
归并排序是将一个有n个记录的无序文件看成是由n个长度为1的有序子文件组成的文件，然后进行两两归并，得到⌈n
操作效率是指在一定时间内完成的操作数量或质量与所投入资源（包括人力、物力、时间等）的比值所反映出的工作效能情况
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，有且仅有一个特定的称为根的节点，当n>1时，其余节点可
动态规划入门是一种用于解决优化问题的算法策略，其核心性质包括最优子结构性质即问题的最优解包含子问题的最优解，以及重叠子问题性质即子
无向图中边没有方向，顶点间关系是对称的
穷举法的核心特征是将问题所有可能的情况逐一列举出来，然后根据条件进行检验，从中找出符合要求的解
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，它忽略算法中常数项、低阶项等非主导因素，主要关注当输入规模无限增大
图由顶点及顶点间边组成，能直观展示关系
图的边是连接图中两个顶点的线，它可以有方向也可以无方向，若有方向则称有向边，若无方向则称无向边，边
动态规划入门的核心特征是将一个复杂问题分解为一系列相互关联的子问题，并通过求解子问题的最优解来得到原问题的最优解，同时利用已求解的
树中所有结点的度的最大值就是树的度其核心特征为反映了树中各结点分支数目的最大情况体现了树结构的复杂程度
有向图的核心性质是其边具有方向性，即从一个顶点指向另一个顶点
无向图是由顶点及顶点间无方向边构成的图结构
算法效率是指算法执行所需要的时间和空间资源，其中时间效率衡量算法执行时间随问题规模增长的变化情况，空间效率衡量算法执行过程中所需的存储空间随
子节点是树结构中直接位于某一节点下方的节点
交换排序核心概念是通过元素交换实现有序排列
回溯法基础的特点的核心性质是在问题的解空间树中按照深度优先策略搜索解，通过不断试探和回溯来找到满足条件的解，每一步决策都基于
在树结构中按特定规则找到目标元素的操作就是树的查找核心概念
算法效率的特点的核心性质包括有穷性、确定性、输入、输出以及可行性，有穷性指算法必须能在执行有限个步骤之后终止
邻接矩阵的核心特征是用一个二维矩阵来表示图中顶点之间的邻接关系，矩阵元素的值表示对应顶点之间是否存在边或弧以及边或弧的相关
操作效率的核心特征是在单位时间内能够以最少的资源投入、最高的精准度完成最多且符合质量标准的操作任务，实现资源利用的最大化和操作流程的
二分查找通过不断将区间减半来快速定位目标元素
穷举法是对所有可能情况逐一检验以求解问题
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，包含一个根节点，且其余节点被分成m（m≥0）个互不相交的
分治策略的核心特征是将一个规模较大的问题分解成若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，分别对这些子问题
图的边是连接图中两个顶点的线或弧，表示顶点之间存在某种关系
稳定性的核心特征是在系统运行过程中，面对各种干扰因素，系统能够保持其原有性能、状态或行为模式不发生显著变化，持续稳定地提供预期功能和服务
图的顶点的核心特征是在图结构中具有标识作用用于区分不同元素且与边存在关联以构建图的结构关系并可附带相关属性信息
引用的核心性质是其为对象起的别名，绑定到已存在的对象，对引用的操作等同于对其所绑定对象的操作
时间复杂度是对算法运行时间随输入规模增长的变化趋势的一种度量，它忽略了算法中具体操作的时间常数，主要关注输入规模增大时算法执行时间的增长
时间复杂度是指执行算法所需要的计算工作量，其核心性质为算法执行时间随问题规模增长的变化趋势，体现了算法效率与问题规模之间的关系
时间复杂度是一个函数，它定性描述该算法的运行时间，其核心性质为算法执行时间的增长趋势与问题规模之间的关系，反映了随着问题规模不断增大，
操作效率是指在一定时间内完成特定操作的数量或质量与所投入资源（如时间、人力、物力等）的比值，反映了操作过程中资源利用的有效
无向图是由顶点集和边集构成的图其中边无方向
图的顶点是图结构中的基本元素，是一个抽象的对象，用于表示图中的某个实体或节点，它可以与其他顶点通过边相连，共同构成图的结构
简单排序的核心特征是通过比较元素之间的大小关系，按照一定的顺序将元素重新排列，其过程相对直接和基础，通常基于相邻元素的比较与交换来逐步
动态规划入门核心概念是将问题分解为子问题并利用子问题解
图的边是连接图中两个顶点的元素且具有连接两个特定顶点的性质
引用是C++中为已存在的变量起的一个别名，通过引用可以对该变量进行操作，且引用在定义时必须初始化并始终绑定到同一个对象
加权图的核心性质是图中每条边都被赋予一个权重值，该权重值表示这条边所代表的连接的某种量化特征，比如距离、成本、容量等，
操作效率是指在一定时间内完成的操作数量与所投入资源（包括人力、物力、时间等）的比值，反映了操作过程中资源利用的有效性和及时性
路径具有从起点到终点的特定走向及关联等特点
算法效率的定义的核心性质包括时间效率和空间效率，时间效率指算法执行时间随问题规模增长的变化情况，空间效率指算法执行过程中所需存储空间随问题规模
在树结构中按特定规则找到目标节点的操作是树的查找
数据类型的核心性质是定义了一组值以及可作用于这些值的一组操作并且规定了这些操作所遵循的规则
回溯法基础的定义的核心性质是在问题的解空间树中按照深度优先策略搜索，通过对部分解的可行性判断来确定是否继续深入搜索，若当前部分解
冒泡排序比较相邻元素大小，若顺序错误就把它们交换过来，对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样一趟下来最后
简单排序的核心性质是通过比较元素之间的大小关系来逐步将无序序列转化为有序序列
树的查找是在给定的树结构中，根据特定的条件搜索特定元素以确定其是否存在于树中以及其所在位置的操作
用矩阵表示图中顶点间邻接关系，元素值反映连接情况
树的查找是在给定的树结构中寻找满足特定条件（如等于某个特定值等）的节点的操作过程
分治策略是将一个规模较大的问题分解为若干个规模较小、相互独立且与原问题形式相同的子问题，递归地解决这些子问题，然后将各子
操作效率的定义的核心特征是衡量在完成特定任务或一系列操作时，所投入的资源（如时间、精力、成本等）与所获得的产出（如完成的
有向图的核心性质是其边具有方向性，即从一个顶点指向另一个顶点，顶点之间的连接关系是单向的
图的顶点的核心特征是在图结构中用于标识和区分不同元素的基本单元，它具有独特的标识，并且通过与边的关联来构建图的结构关系，
邻接矩阵是表示图的一种方式，其特点的核心特征为对于有n个顶点的图，使用n×n的矩阵来存储顶点间的关系，矩阵中元素
穷举法的核心性质是对问题所有可能的情况进行逐一列举和检验以找出符合条件的解
有向图是由顶点集和有向边集组成的一种数据结构其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向关系
有向图由顶点及顶点间带方向的边所构成
引用是对其他对象的一种指代以方便使用其内容
操作效率的特点的核心特征是在一定时间内完成特定操作任务的速度与质量的综合表现，体现为单位时间内产出的有效成果数量、完成操作所需的时间
确定性指算法的每
路径具有连接起点与终点且体现特定走向等特点
对于树结构中的某一节点，若存在另一节点，使得该另一节点通过特定的连接关系直接与它相连，且该另一节点在这种连接关系下相对于它处于较高
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，它忽略算法中常数项、低阶项等非主导因素，重点关注当输入规模无限增大
时间复杂度的核心特征是描述算法执行时间随输入规模增长而变化的趋势，它主要关注算法中基本操作执行次数与输入规模之间的函数关系，反映了算法效率
路径是图中从一个顶点到另一个顶点的顶点序列，序列中相邻顶点之间存在边
图的边是连接图中两个顶点的线，其具有方向或无方向，且可有权值或无权值，边是图结构中表示顶点之间关系的重要组成部分
稳定性是系统受干扰后仍能保持原有状态的特性
引用是C++中为已存在的变量起的一个别名，通过该别名可对同一变量进行访问和操作
树的核心性质是树中任意两个节点有且仅有一条路径相连
数据类型具有特定取值范围、操作及存储方式特点
迭代法是从初始值出发通过重复运算求近似解的方法
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的
存储结构特点指数据在存储器中的组织与存储方式特性
时间复杂度的特点是用于描述算法执行时间随输入规模增长的变化趋势体现出的渐进上界等特性
空间复杂度指算法运行中所需额外空间随输入规模变化情况
引用是给变量起别名，与原变量共享内存地址
堆是一种特殊的数据结构，它是一个完全二叉树，且每个节点的值都大于或等于其子节点的值（大顶堆）或每个节点的值都小于或等于其子节点
图的顶点是图结构中的基本元素，具有标识图中不同实体或对象的作用，它们通过边相互连接，共同构成图的结构，顶点之间的连接关系和属性
图的顶点是图结构中的基本元素，可通过边与其他顶点相连以构成图的拓扑结构并体现图的各种性质特点
动态规划入门是一种用于解决优化问题的算法策略，其核心特征包括将问题分解为相互重叠的子问题、通过求解子问题并存储其解来避免重复计算、
树中所有结点的度的最大值为树的度
树的核心性质是任意两个节点有且仅有一条路径连通且一个有n个节点的树有n-1条边
图由顶点集和边集组成顶点集中的元素是顶点边集是顶点的无序对或有序对的集合顶点与边之间满足一定的关联关系且边集决定了
数据物理结构是数据在存储设备上的存储方式及关系
引用是给已存在对象起的别名，与被引用对象绑定，对引用的操作等同于对被引用对象的操作，其核心性质包括具有与被引用对象相同的内存
回溯法是一种通过逐步构建问题的解并在不满足条件时撤销上一步操作来寻找所有可能解的算法策略
无向图是由顶点集和边集组成的图，其中边集中的边是没有方向的顶点对
堆是一种特殊的数据结构，它满足对于堆中任意一个非叶子节点，其值都大于或等于其子节点的值（大顶堆），或者小于或等于其子节点的值
抽象数据类型的核心特征是将数据和数据上的操作封装在一起，对外提供统一的接口，隐藏数据的具体表示和操作的具体实现细节，使得使用者只需关注接口
时间复杂度是衡量算法执行时间随输入规模增长而变化的函数，它描述了算法执行时间的增长趋势，反映了算法效率与输入规模之间的关系，不同算法的
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，分别解决这些子问题，然后将子问题的解合并得到原问题的解
集合是具有确定范围且元素互异无序的整体
顺序表的核心特征是其逻辑上相邻的元素在物理存储上也相邻，并且可以通过下标直接计算出元素的存储地址，能高效地进行随机访问，在内存
分治策略的核心性质是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别求解子问题
穷举法是一种通过对问题所有可能的情况逐一进行尝试和检验，从而找出符合条件的解或答案的方法
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否存在边及边的相关信息（如权重等）
有向图是由顶点集和有方向的边集组成的图
加权图各边有代表某种数值的权值体现边的关系
时间复杂度是指在计算机科学中，算法执行时间随问题规模增长的变化趋势，它定量描述了算法运行时间与输入规模之间的关系
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻，且可以通过下标直接计算出元素的存储地址，具有随机访问特性，存储密度高
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据和数据上的操作封装在一起，使得使用者无需了解数据
时间复杂度的核心特征是用于描述算法执行时间随输入规模增长的变化趋势反映算法效率与输入规模之间的关系
图的边是连接图中顶点具有特定关系的元素
无向图是顶点集及顶点间无方向边构成的图结构
加权图是边带有表示某种量值权值的图
顺序查找按顺序逐个比较元素直至找到目标元素
数据类型定义是对数据种类及操作方式的规定
用矩阵表示顶点间邻接关系的一种数据结构
引用是一种给变量起别名的机制，其特点包括与所引用的变量绑定在一起，对引用的操作等同于对其所引用变量的操作，引用在定义时必须初始化且
树的查找是在给定的树结构中按照特定规则寻找特定元素或满足特定条件的元素的操作过程
树的核心性质是任意两个顶点之间有且仅有一条路径且一个有n个顶点的树有n-1条边
稳定性特点核心概念是系统或事物保持原有状态特性
子节点是树结构中直接位于某个节点下方并与该节点有直接连接关系的节点
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过求解这些子问题，然后将子问题的解合并得到原问题的解
引用是对已存在对象的别名，指向同一内存位置
加权图是各边带权值用于反映某种属性的图结构
加权图是各边带有代表某种性质数值的图
顺序表的核心性质是逻辑上相邻的元素在物理存储位置上也相邻且元素存储紧凑无间隙并可通过下标直接访问元素
加权图的核心特征是图中的边被赋予了权重值，这些权重值代表了边所连接的两个顶点之间的某种度量，比如距离、成本、流量等，不同
算法效率的特点的核心特征是执行时间随问题规模增长的变化情况以及占用空间资源随问题规模增长的变化情况 ，包括时间复杂度体现算法执行时间增长趋势和
空间复杂度指算法运行中所需的额外存储空间随数据规模变化情况
抽象数据类型的核心特征是将数据及数据上的操作封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注接口所提供的功能而
无向图是由顶点集和边集组成的图其中边无方向
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从底向上逐步求解原问题以得到最优解的算法思想
树中数据元素及连接关系构成的基本单元是节点
栈的核心特征是后进先出，即最后进入栈中的元素最先被弹出，而最先进入栈中的元素最后被弹出
图的顶点是图结构中的基本元素，是构成图的节点，可用于表示各种实体或对象，且顶点之间通过边相互连接以构成图的整体结构
数据物理结构指数据在存储设备上的存储方式及关系
抽象数据类型的核心特征是将数据和操作数据的方法封装在一起，对外提供统一的接口，隐藏数据的具体实现细节，使得使用者只需关注如何使用这些接口来操作
操作效率的定义的核心性质包括完成特定任务所需时间短、资源消耗少、能以较高速度和质量达成目标等方面
线性表的核心性质是有且仅有一个开始节点和一个终端节点，并且除开始节点外每个节点有且仅有一个直接前驱，除终端节点外每个节点有且仅有
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只考虑局部最优解，希望通过局部最优选择
栈具有后进先出的特点，数据操作遵循此规则
引用的核心性质是其绑定到一个已存在的对象后就一直指向该对象，不会再重新绑定到其他对象，对引用的操作实际上就是对其所绑定对象的操作
路径具有特定走向且关联节点等的特点
稳定性特点核心概念是系统或事物保持原有状态的特性
邻接矩阵是用于表示图中顶点之间连接关系的矩阵，其中矩阵元素的值表示对应顶点之间是否有边相连以及边的相关属性（如权值等）
简单排序的核心性质是通过比较和交换元素的位置逐步将无序序列转变为有序序列
动态规划入门是一种通过把原问题分解为相对简单的子问题，求解子问题并记录其解，从而避免重复计算，以自底向上方式高效解决复杂问题的
操作效率是指在数据结构相关操作中，衡量完成特定任务所花费时间、空间等资源以及达成的效果等综合情况的指标
堆排序的特点的核心性质是：堆中每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于或等于其子节点的值（小
交换排序的核心特征是通过比较元素并在必要时交换它们的位置，逐步将无序序列转变为有序序列
穷举法的核心性质是对问题的所有可能解逐一进行尝试和检验以找出符合条件的解
图的边是连接图中两个顶点的线且具有方向性或无方向性并可能有权值或无权值其存在或不存在影响图的结构和性质
图的边是连接图中两个顶点的线，它可以具有方向性或无方向性，并且可能带有权重等属性用于表示顶点之间的关系或连接的代价等情况
映射是一种元素与元素按对应关系的对应
图由顶点集和边集组成，顶点集中的元素称为顶点，边集是顶点对的集合，图中的边是顶点对，并且顶点对可以是有序的也可以
穷举法的核心特征是将问题所有可能的情况逐一进行列举和检验，通过对每种情况的分析来找到问题的解
简单排序核心概念是按特定规则对数据依次比较交换位置
树的查找是在给定的树结构中按照特定规则寻找目标元素的操作过程
树中一个节点的子树个数即为该树此节点的度
动态规划入门的特点的核心性质包括最优子结构性质即问题的最优解包含其子问题的最优解，以及重叠子问题性质即子问题被重复求解
堆是一种优先队列数据结构，它通常分为大顶堆和小顶堆，大顶堆中每个节点的值都大于或等于其子节点的值，小顶堆中每个节点
动态规划入门是一种通过把原问题分解为相对简单的子问题，并保存子问题的解避免重复计算，从而解决复杂问题的算法设计策略
算法效率的定义的核心特征是衡量算法执行时间和占用空间随输入规模增长的变化情况以评估算法优劣
简单排序具有比较和交换元素位置的操作来逐步将无序序列变为有序序列的特点，其核心性质是通过多次比较和交换使元素按特定顺序排列
贪心策略是在每一步选择中都采取当前状态下的最优决策
操作效率是指在一定时间内完成特定操作任务所体现出的效能与速率，反映了利用资源实现操作目标的程度
图的顶点是图结构中的基本元素，用于表示事物或对象，顶点之间通过边相互连接，顶点可以具有各种属性，如名称、标号等，并且顶点的数量和
邻接矩阵是用于表示图的一种矩阵，其特点是以矩阵形式描述图中顶点之间的邻接关系，矩阵元素的值根据顶点间是否有边或弧来确定，
动态规划入门的核心性质是将问题分解为相互重叠的子问题，通过求解子问题并保存其解，避免重复计算，从而高效地解决原问题
在树形结构中直接位于某个节点之上的节点就是父节点
操作效率是指在数据结构相关操作中单位时间内完成的操作数量或完成特定操作所需的时间等综合体现操作执行快慢程度的指标
邻接矩阵的核心特征是用于表示图中顶点之间的相邻关系，矩阵的行和列分别对应图的各个顶点，若两个顶点之间有边相连，则矩阵中对应
栈是一种特殊的线性表，其核心特征为具有后进先出的操作特性，即最后进入栈的元素最先被弹出，就像一个一端开口的容器，只允许
图的边是连接图中两个顶点的线条，用于表示顶点之间的关系，其具有方向或无方向且有权重或无权重等特点
图是由顶点集和边集组成的数据结构其中顶点之间通过边进行连接顶点可以表示各种对象边可以表示对象之间的关系
操作效率的核心性质是指在特定的操作环境和任务要求下，能够以最少的资源消耗（包括时间、人力、物力等）实现最大程度的目标达成，且
回溯法基础的特点的核心性质是在问题的解空间树中按照深度优先策略搜索，以找到满足约束条件和目标函数的解，搜索过程中会不断判断当前
图的边是连接图中两个顶点的线，用以表示顶点之间的关系
引用是C++中为已存在的变量起的一个别名，通过该别名可对同一内存位置的变量进行操作
路径的核心特征是连接起点与终点并由一系列有序的节点或步骤组成从而形成从起始位置到目标位置的一种通道或轨迹它体现了在特定空间或逻辑范畴
数据类型具特定性质规则及取值范围等特点
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关且反映算法运行时所需的额外空间随着输入规模增长的变化
引用是一种给变量起别名以共享同一内存位置的机制
映射是一种元素到元素的对应关系且具有唯一性
动态规划入门核心概念是将问题分解为子问题并记录最优解
时间复杂度的核心特征是衡量算法执行时间随输入规模增长的变化趋势，反映算法执行时间与输入规模之间的函数关系，体现算法效率随输入数据量增加的增长
栈是一种后进先出的线性数据结构
比较相邻元素大小，大的交换位置逐步将最大数冒泡到末尾
穷举法是一种通过对问题所有可能的情况逐一进行尝试和检验，从而找出满足条件的解的解题方法
数据类型的定义的核心特征是规定了数据的取值范围以及在该数据上允许进行的操作
图中参与构成边且具有特定标识的基本元素是顶点
图的边是连接图中两个顶点的元素具有连接两个顶点的性质
数据类型的定义的核心特征是对数据的取值范围以及在该数据上可进行的操作的明确规定
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化趋势体现出算法效率的高低等特点
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外部交互，将数据的表示和操作的实现细节封装起来
分治策略核心概念是将问题分解为子问题再求解
图的边是连接图中两个顶点的线段或弧表示的一种关系，其具有方向或无方向且可以有权值或无权值等特点
图是由顶点集和顶点间的边集组成的数据结构，其中顶点是图中的数据元素，边是顶点之间的连接关系
加权图是图中边带有代表某种数值的权的图
子节点是树结构中直接被某一节点所连接的下一层节点
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过递归地解决这些子问题，然后将子问题的解合并得到原问题的解
邻接矩阵的核心特征是用一个二维矩阵来表示图中顶点之间的连接关系，矩阵中元素的值表示对应顶点之间是否存在边以及边的相关属性（如权重
图的边是连接图中两个顶点的无序对或有序对表示图中顶点之间的关系
路径的核心概念是连接起点与终点的路线
堆是一种特殊的数据结构，它满足两个核心特征：一是堆中某个节点的值总是不大于或不小于其子节点的值
比较排序基于元素比较结果确定元素最终排列顺序
操作效率是指在一定时间内通过有效操作完成的任务量或达到的目标程度，体现了操作过程中资源利用的有效性和及时性等综合效能
操作效率是指算法或数据结构在执行特定操作时所花费的时间或资源与问题规模之间的关系体现出的性能指标
动态规划入门核心概念是通过分解问题记录子问题解求最优解
操作效率的特点的核心特征是在单位时间内完成的操作数量或任务量，以及完成这些操作或任务所需的时间和资源的综合体现，反映了系统或个体
迭代法是通过重复执行同一计算过程逐步逼近目标解的方法
操作效率是指在数据结构相关操作中，衡量完成特定操作所耗费的时间、空间等资源以及操作执行的速度等综合表现的指标
堆是一种特殊的数据结构，其核心性质为父节点的值总是大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
图的顶点的核心特征是在图结构中具有标识作用，用于表示图中的某个具体元素或实体，并且通过与边的关联来构建图的拓扑结构，边连接
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心特征是将问题的所有可能情况无遗漏地列举
有向图的核心性质是图中边具有方向性，即从一个顶点指向另一个顶点
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，然后分别对这些子问题进行求解
抽象数据类型具有数据抽象和操作抽象的特点
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，用户无需了解其内部实现细节只需使用接口规定的操作来
归并排序将序列分治后合并，使子序列有序以成有序序列
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，反映算法执行时间与输入规模之间的渐近关系
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只期望通过局部最优解来达到全局最优解的一种策略
动态规划入门具有通过把问题分解为子问题、记录子问题解以避免重复计算从而高效求解复杂问题等特点
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据和数据上的操作封装在一起，只对外提供抽象的
图中参与构成边且具有标识或属性的基本元素是顶点
时间复杂度是用来衡量一个算法随着输入规模的增大其执行时间增长趋势的一个指标它反映了算法执行时间随问题规模增长的变化情况体现了算法效率高低
集合是具有确定的、互异的、无序的元素总体
分治策略的核心性质是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过分别求解子问题
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表存储图中顶点信息，边表中每个节点存储与该顶点相邻的顶点
引用是给已存在的对象起一个别名，通过该别名可以访问和操作其所引用的对象，其核心特征包括与被引用对象具有相同的内存地址，对引用的
算法效率是指算法执行所需的时间和空间资源的多少，时间效率衡量算法执行时间随问题规模增长的变化情况，空间效率衡量算法执行过程中所需的额外空间
操作效率特点核心概念是衡量操作完成速度与质量的指标
树的查找是在给定的树结构中，按照特定规则寻找满足特定条件的节点的操作过程
路径是在图或树等数据结构中，从一个顶点出发，沿边或分支依次经过一系列顶点所形成的序列
算法效率是指算法执行所耗费的时间和空间资源的度量，反映了算法在解决问题时的优劣程度
堆是一种特殊的数据结构，它满足对于堆中任意一个非叶子节点，其值都大于或等于（大顶堆）或小于或等于（小顶堆）其子节点
图的边是连接顶点具有方向或无方向的线条
操作效率的特点的核心特征是单位时间内完成操作的数量与质量达到的一种平衡状态且随操作环境、工具及人员技能等因素动态变化
有向图的核心性质是由顶点集和有向边集组成且边具有方向
引用是给变量起别名，与原变量共享内存空间
在树形结构中，若存在节点A，有节点B直接连接到A且这种连接关系规定了B相对于A的特定层级关系，那么节点A就是节点B的父节点
递归基础是递归函数中直接返回结果不调用自身的终止条件
空间复杂度的核心特征是算法在运行过程中临时占用存储空间大小的变化情况与输入规模之间的关系，反映了算法运行时对额外空间的需求随问题规模增长的
对于最小堆，每个节点的值小于
有向图的核心特征是其边具有方向性，即从一个顶点指向另一个顶点，这使得顶点之间的连接关系不是对称的，存在从特定顶点到其他顶点的
动态规划入门是通过分解问题记录子问题解以求解最优解
稳定性核心概念是系统或事物在一定条件下保持原有状态的特性
比较排序是基于元素间的比较来确定元素之间的相对次序，其核心特征是通过比较元素大小来逐步构建有序序列
图中顶点是构成图的基本元素，可表示各种对象
动态规划入门是通过分解问题利用子问题解求原问题最优解
稳定性的特点的核心性质是在某种条件下系统或事物能够保持其原有状态或特性不发生显著变化
算法效率是指算法执行所耗费的时间和空间资源的量度
数据物理结构是数据在存储设备上的存储方式及相互关系
路径是图中从一个顶点到另一个顶点的顶点序列，其特点包括由顶点构成且相邻顶点间存在边相连
完全二叉树除最后一层外每层节点数满且最后一层靠左排列
操作效率特点核心概念是单位时间内完成操作的水平
路径的特点的核心特征包括从起点到终点有明确的行进方向且由一系列连续的节点或步骤按特定顺序组成并代表着在某个空间、系统或过程中特定
算法效率是指算法执行所消耗的时间和空间资源的量度反映出算法在解决问题时的快慢和对资源的占用情况
贪心策略的核心特征是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
路径是图中两个顶点之间由边依次连接所构成的顶点序列
交换排序的核心性质是通过比较和交换元素位置来逐步将无序序列转变为有序序列
无向图是由顶点集和顶点间无方向边构成的图结构
有向图是边具有方向的图，顶点间连接有特定指向
操作效率的特点涵盖完成操作所需时间、资源利用情况、单位时间内完成操作的数量等方面，反映操作过程中资源投入与产出的关系及操作进行的快慢程度
子节点是树状结构中直接位于某一节点下方的节点
树中各节点度的最大值就是树的度的核心概念
图的边是连接图中两个顶点的线，其具有方向性或无方向性且可能有权值用于表示顶点间的某种关系或代价等
交换排序通过比较与交换元素位置实现有序排列
堆是一种特殊的数据结构，它满足对于堆中任意一个非叶子节点，其值都大于或等于其子节点的值（大顶堆）或者小于或等于其子节点的值（
路径的核心性质是从一个顶点到另一个顶点所经过的顶点序列（包括起始顶点和终止顶点）按照图的边的连接关系依次排列且顶点不重复出现
路径的核心性质是由一系列顶点和边依次连接而成，顶点与顶点之间通过边相连，且具有明确的起始顶点和终止顶点，从起始顶点开始按顺序经过各个
广度优先搜索按层次依次扩展节点直至找到目标
子节点是树状结构中直接连接在某一节点之下的节点
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势它忽略算法中所有与机器相关的常量因素主要关注输入规模无限增大时算法执行时间的增长
穷举法是一种通过对问题所有可能情况逐一进行尝试和检验，从而找出满足条件的解的方法
顺序表是一种将元素顺序存储在连续内存空间中的线性表
除最后
操作效率是指在完成特定任务或一系列操作过程中，衡量单位时间内所完成工作量或任务执行速度的指标，其核心特征包括能反映在一定时间内完成操作
线性查找是按顺序逐个检查元素以确定目标值位置
树是一种分层结构有根且子节点唯一的非线性数据结构
引用的核心性质是其为对象起的一个别名，对引用的操作会直接作用于其所绑定的对象
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心性质为算法执行时所需的辅助空间单元数量与输入规模之间的关系，它反映
回溯法基础的特点的核心性质是在问题的解空间树中按照深度优先策略搜索，通过试探和回退的方式逐步找到满足约束条件和目标函数的解
邻接矩阵是用于表示图的一种矩阵，其特点是若图中有n个顶点，则矩阵为n×n矩阵，矩阵中元素的值表示对应顶点之间是否有边相连
简单排序的核心性质是通过比较和交换元素位置，将无序序列逐步转化为有序序列，每次操作都使得序列向有序状态靠近
引用是C++中为已存在的变量起的一个别名，通过该别名可以对原变量进行操作且引用必须在定义时初始化并始终绑定到同一个对象
回溯法基础的定义的核心性质是在问题的解空间树中按深度优先策略搜索，通过不断扩展节点并判断是否满足条件，若不满足则回溯到上一层
操作效率是指在一定时间内完成的操作数量或质量与所投入资源（如时间、人力、物力等）的比率，反映了操作过程的快速性、准确性及
图的边是连接图中两个顶点的线段或弧，用于表示顶点之间的关系，其中若边没有方向则为无向边，若边有方向则为有向
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心性质是反映算法执行过程中所需的额外空间随输入规模增长的变化趋势
空间复杂度的核心特征是算法在运行过程中临时占用存储空间大小的度量与问题规模之间的关系
算法效率的核心性质是指算法执行所需要的时间和空间资源与问题规模之间的关系
加权图的核心特征是图中的边被赋予了一个数值（权重），该权重用于表示边所连接的两个顶点之间的某种关系或属性的度量，比如距离、
时间复杂度是算法执行时间随数据规模增长的变化趋势
在树结构中按特定规则找到目标元素的操作叫树的查找
算法效率的定义的核心性质是衡量算法执行时间和所需资源随输入规模增长的变化情况
加权图是顶点和边都带有权重属性的图结构
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻的特点，其核心性质包括可以随机访问元素，通过下标直接计算元素存储地址，存储密度高，内存
图的边是连接顶点且具有方向或无方向等特性的线条
加权图的核心特征是图中的边被赋予了一个数值（权重），该权重表示了边所连接的两个顶点之间的某种关系或属性的量化度量，不同边
时间复杂度是用来描述算法执行时间随输入规模增长而变化的渐进趋势的一个概念它反映了算法在不同输入规模下的时间效率特性
子节点是树结构中直接连接在某一节点下方的节点
数据类型特点是规定数据取值范围存储方式等特性
穷举法的核心特征是将问题所有可能的情况逐一进行尝试，通过对每一种情况进行检验，来找出符合条件的解
回溯法基础的特点的核心特征是在问题求解过程中，通过逐步试探和回退的方式，系统地搜索问题的解空间，每一步决策都基于当前状态进行
路径具有从起点到终点的特定走向，其长度由所经过的边或节点数量决定，具有唯一性，且连接着特定的节点或区域，能够反映出在相应结构
操作效率特点核心概念是衡量操作完成的快慢程度
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解或最优解的方法
操作效率是指在数据结构中执行特定操作所花费的时间或资源与该操作所处理的数据规模之间的关系体现出的对操作执行快慢程度的衡量指标
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，然后分别求解这些子
时间复杂度是用来衡量算法执行时间随输入规模增长而增长的变化趋势的指标 其核心性质包括 它忽略算法中执行时间较短的部分 专注于随着输入规模
稳定性指系统受扰动后能恢复或趋近原状态的特性
图的顶点是图结构中参与构成图的基本元素，具有特定的标识且与边相关联，是图中各种操作和分析所围绕的核心部分
图的顶点是图结构中的基本元素，具有标识性且可与其他顶点通过边建立关联关系从而构成图的结构
栈具有后进先出的特点即最后进入的先出来
路径是图中顶点间的边序列或顶点序列
图的顶点是图结构中的基本元素，是图中参与构成边关系的节点，具有标识图中具体位置或对象的作用
加权图的核心性质是图中每条边都被赋予一个权重值，该权重值表示这条边所关联的两个顶点之间的某种数量关系或代价等信息，用于在
空间复杂度的核心特征是算法在运行过程中临时占用存储空间大小的变化情况与输入规模之间的关系
数据类型具特定取值范围、操作及存储方式特点
图的顶点具有可作为图的基本元素用于表示各种实体或对象且与边相关联以构成图的结构的特点的核心性质
动态规划入门的核心特征是以多阶段决策过程为研究对象，通过将问题分解为相互关联的子问题，求解每个子问题并记录其解，从而避免重复计算，
路径是图中顶点间的边或顶点序列所构成的连接
简单排序是对数据按特定规则依次比较交换以排好序的方法
用矩阵表示顶点间是否有边相连的图结构形式
算法效率的核心特征是在合理时间内处理大量数据的能力、以最少资源消耗完成任务的特性以及随着数据规模增大仍能保持稳定性能表现的特点
操作效率的特点的核心性质是在一定条件下衡量完成特定操作所需时间、资源等的特性表现且不同操作的效率特点会因操作本身及相关因素而有所不同
树的查找是在给定的树结构中确定是否存在特定元素以及找到该元素所在位置的操作
树是一种分层结构的非线性数据结构有根且子树不相交
时间复杂度是指算法执行时间随问题规模增长的变化趋势，它描述了算法运行时间与输入规模之间的关系，体现了算法效率随问题规模增大时的增长特性
引用是对变量或对象起别名以共享同一内存位置
图由顶点集和边集组成，顶点集中的元素是图的顶点，边集中的元素是顶点之间的连接关系，且边与顶点相关联，边具有方向性或
树是一种包含n（n≥0）个节点的有限集合，当n=0时为空树，当n>0时其中有一个特定的称为根的节点，其余
动态规划入门的特点是将问题分解为相互重叠的子问题并通过保存子问题的解来避免重复计算以高效求解最优解
路径是连接起点与终点具有一定走向的线路
贪心策略核心概念是每步选当前最优以达全局最优
分治策略将问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，通过递归地解决子问题，然后将子问题的解
图的顶点是图结构中重要元素有自身属性等特点
树的度的核心特征是树中所有结点的度的最大值，它反映了树中各结点分支数的最大情况
堆的核心性质是每个节点的值都大于或等于其子节点的值（大顶堆）或者每个节点的值都小于或等于其子节点的值（小顶堆）
稳定性核心概念是系统在受扰后仍能恢复或保持原有状态的特性
算法效率指算法执行时间和占用资源随问题规模增长的变化情况
树是一种有根且节点间有层次关系的非线性结构
操作效率是指在完成特定任务或一系列操作过程中，所投入的资源（如时间、人力、物力等）与所获得的成果或产出之间的比率关系，反映
邻接矩阵是用来表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点间是否有边相连及边的相关属性（若图为有权图则元素
子节点是树状结构中直接连接在某个节点之下的节点
邻接矩阵是用于表示图的一种矩阵，其特点是以矩阵形式描述图中顶点间的相邻关系，矩阵中元素的值根据顶点间是否有边相连而设定，若
图的边是连接图中顶点的线条，其核心特征包括有方向或无方向，有方向的边规定了顶点之间的单向连接关系，无方向的边表示顶点
图的顶点具有可作为图的基本元素用于构建图结构、可通过边与其他顶点建立连接关系以及在图的各种操作和算法中发挥关键作用等核心性质
图由顶点及连接顶点的边构成用于表示多对多关系
存储结构指数据及其关系在计算机内存中的存储方式
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表存储图中顶点信息，边表存储与每个顶点相邻接的顶点及其相关
有向图的核心性质是由顶点和有方向的边组成，边是从一个顶点指向另一个顶点，顶点之间的连接具有方向性
算法效率的特点包括时间效率衡量算法执行时间随输入规模增长的变化情况以及空间效率考量算法执行过程中所需存储空间随输入规模增长的变化情况等多方面表现
操作效率的特点的核心性质包括执行时间短、资源消耗少、响应速度快、能在规定时间内完成任务、具备高效的流程和方法等
回溯法是一种通过逐步构建候选解并在不满足条件时回退以找到问题所有解或最优解的算法策略
堆是一种满足特定父子节点关系的完全二叉树数据结构
比较相邻元素大小，将较大元素逐步交换至右侧
贪心策略的特点是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优
引用是对变量起别名，使得同一个内存位置可以有多个名字，通过引用对其修改等同于对原变量直接修改，且引用在定义时必须初始化并不能再重新绑定
树的查找是指在给定的树结构中，按照特定规则寻找满足某种条件的节点的操作过程
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关、反映算法执行过程中所需的额外空间随输入规模变化的
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况体现出算法执行时间的增长趋势与输入规模之间的关系特点
算法效率是指算法执行所耗费的时间和空间资源，反映算法解决问题的快慢程度和对资源的利用情况
操作效率的特点的核心特征是在单位时间内完成的操作数量、操作的准确性以及操作过程的流畅性等方面所表现出的特性，包括速度快、精度高
父节点是在树形结构中直接位于某节点之上的节点
引用是给变量或对象起别名以共享同一内存位置
动态规划入门是通过分解问题利用最优子结构求解
加权图中边被赋予权重以反映某种属性或代价
动态规划入门的特点的核心性质是通过将问题分解为子问题，利用子问题的解来求解原问题，并且保存子问题的解以避免重复计算
路径是图中从一个顶点到另一个顶点的顶点序列且该序列中相邻顶点之间存在边
图的边是连接图中两个顶点的线段或弧表示的一种关系用于描述顶点之间的连接情况
算法效率是指算法执行所需的时间和空间资源的量度，反映算法执行的快慢和对系统资源的消耗程度
图的顶点的核心特征是在图结构中具有标识性，用于代表图中的某个对象或实体，是图的基本组成元素之一，通过边与其他顶点相连接以
在树形数据结构中，若存在一个节点A，有其他节点B直接连接到A，且这种连接关系具有特定的层次结构规则，那么节点A就是节点B的父
图的顶点是图结构中的基本元素，它可以表示各种实体，且顶点之间通过边相互连接以构成图的结构
堆是一种特殊的数据结构，它是一棵完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆）或每个节点的值都小于或
操作效率的定义的核心性质是指在完成特定任务或执行特定操作时，所衡量的关于时间、资源利用、产出等方面表现的关键特性
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，反映算法效率与输入规模之间的关系，体现算法在不同规模数据下运行时间的量级表现
时间复杂度是指算法执行时间随问题规模增长的变化趋势，用大O记号表示，它描述了算法运行时间与输入规模之间的渐近关系
二分查找在有序序列中通过不断折半快速定位目标元素
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势，反映算法效率与输入规模之间的关系，体现了算法在不同规模输入下的运行时间增长
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，它是关于问题规模n的函数，记作S(n)，表示随问题规模n的增大，
在树结构中按特定规则确定目标元素位置的操作叫树的查找
堆是一种特殊的数据结构，它是一个近似完全二叉树的结构，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于
操作效率定义的核心性质是以尽可能少的资源消耗在规定时间内完成规定任务
路径是图中顶点与顶点之间的边所构成的序列且该序列中任意一条边的两个端点是相邻的顶点
映射是一种元素对应关系且具有唯一性确定性等特点
子节点是树结构中相对于某一特定节点而言，直接连接在该特定节点下方的节点，其与特定节点存在明确的层级关系且处于较低层级
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质是反映算法运行时所需的额外空间随问题规模增长的变化趋势
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法其核心特征是将问题的所有可能情况无遗漏地进行
树是一种非线性数据结构，它由n（n≥0）个有限节点组成，其中有一个特定的节点称为根节点，其余节点被分为m（m≥0）
分治策略将问题分解为子问题求解后合并结果
树的度是树内各结点度的最大值
图由顶点及连接顶点的边所构成的数据结构
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，所做出的仅是在某种意义上的局部最优解，其
路径具有从起点到终点的特定轨迹及相关特性
堆的核心特征是对于最大堆，每个节点的值都大于或等于其子节点的值
图的边是连接图中两个顶点的元素，具有确定的起点和终点，可用于表示顶点之间的关系，且边的存在与否及相关属性（如权重等）
有抽象性，强调数据类型的逻辑特性而不涉及具体实现细节
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法，其核心特征是将问题的所有可能情况无遗漏地
空间复杂度指算法运行过程中所需的最大存储空间
堆是一种特殊数据结构，满足特定父子节点关系特性
穷举法是对所有可能情况逐一测试以求解问题
图的顶点是图结构中作为基本元素用于标识位置且与边共同构成图的结构关系的节点
有向图是由顶点集和有向边集组成，其中有向边是顶点的有序对，每条有向边都有明确的方向，从一个顶点指向另一个
稳定性特点核心概念是系统状态在干扰下的保持性
在树形数据结构中，对于任意一个节点，如果存在另一个节点，使得从该节点到它存在一条有向边，那么这个节点就是另一个节点的父节点
时间复杂度是一个函数，它定量描述了该算法的运行时间，其核心性质为算法执行时间的增长趋势与问题规模增长之间的关系，反映了随着输入规模不断
图的边是连接图中两个顶点的元素它表示顶点之间的某种关系或连接
树的查找是在给定的树结构中，按照特定规则寻找满足某种条件的节点的操作过程
时间复杂度的核心特征是描述算法执行时间随输入规模增长的变化趋势且忽略常数项低阶项等非主导因素以反映算法效率
邻接矩阵是用于表示图的一种矩阵，其特点是若图中有n个顶点，则矩阵为n阶方阵，矩阵元素的值表示对应顶点间是否有边相连，有
顺序表的核心性质是其逻辑上相邻的元素在物理存储位置上也相邻
算法效率的定义的核心特征是衡量算法执行时间随问题规模增长的变化情况以及算法执行所需的空间资源随问题规模增长的变化情况，包括时间效率体现算法执行
交换排序的核心性质是通过比较元素并交换不满足顺序要求的元素位置来逐步将无序序列转换为有序序列
引用是给已存在的对象起一个别名，通过该别名可访问和操作原对象，对引用所做的操作等同于对原对象的操作
简单排序是对给定数据序列通过比较和交换元素位置等操作，将其按特定顺序（如升序或降序）排列，核心特征是基于元素间的比较来
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质包括与输入规模相关反映算法运行时所需额外空间随输入规模变化的情况且通常
递归基础的核心特征是存在一种简单情况，在此情况下递归函数可直接返回一个确定值而无需再次调用自身
引用是给已存在的变量起的一个别名，通过该别名可访问和操作原来的变量
动态规划入门是一种通过将问题分解为相互重叠的子问题，并利用子问题的解来高效求解原问题的算法策略，其核心特征包括最优子结构性质即问题
无向图是由顶点集和边集组成且边无方向的图
穷举法是一种通过对问题所有可能情况逐一进行检验，从而找出符合条件解的方法
操作效率的特点是指在完成特定任务或一系列操作过程中所展现出的诸如速度快慢、资源利用程度、流程顺畅与否等方面的特性表现
树的度是树内各节点度的最大值
栈的核心特征是后进先出，即最后进入栈中的元素会最先被弹出，而最先进入栈中的元素会最后被弹出
路径是连接起点与终点且具有方向等特性的线路
算法效率的核心特征是在合理的时间和空间资源消耗下，能够快速且有效地解决特定问题，即在保证一定准确性的前提下，尽可能减少运行时间和存储空间的占用以
无向图是由顶点和连接顶点的无方向边构成的图结构
有向图是边具有方向的图其边从一个顶点指向另一顶点
回溯法是一种通过尝试所有可能情况来求解问题，当发现当前选择无法得到有效解时就回溯到上一步重新选择，以找到问题最优解或所有解的算法
无向图是由顶点集和边集组成的图，其中边集中的边是顶点的无序对
矩阵中元素的值
图的顶点是图结构中的基本元素，它可以用来表示各种实体，并且与其他顶点通过边相连以构成图的结构
无向图是由顶点及连接顶点的无方向边构成的图结构
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它通过数据抽象和行为抽象将数据和数据上的操作封装在一起，使得用户无需了解数据
映射是一种元素间有唯一对应关系的特殊对应
操作效率是指在数据结构的相关操作中，完成特定任务所花费的时间、占用的资源等情况的综合考量指标用以衡量操作的快慢及资源利用的优劣程度
从数据序列首个元素起逐个比较找目标元素的查找方法
矩阵元素的值表示对应顶点之间
用矩阵表示顶点间相邻关系的一种数据结构叫邻接矩阵
交换排序的核心性质是通过比较元素并在必要时交换它们的位置，逐步将无序序列转变为有序序列
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的方法
穷举法的核心性质是对问题的所有可能解逐一进行尝试和检验以找到符合条件的解
抽象数据类型是数据及操作封装，强调抽象层次
动态规划入门的核心特征是将问题分解为相互重叠的子问题，通过求解子问题并记录其解，避免重复计算，从而高效地解决原问题，通常采用自
无向图是由顶点集和边集组成的图，边无方向
图的边是连接图中两个顶点的元素具有连接两个顶点这一核心性质
树中各节点度的最大值是树的度的核心特点
存在常数 c 和 n0，对于所有大于等于 n0 的输入规模 n，算法执行基本操作的次数 T(n) 总是小于等于 c 乘以 f(n)，其中 f
路径是图中从一个顶点到另一个顶点的顶点序列，且序列中相邻顶点之间存在边
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只希望通过局部最优解来达到全局最优解
对于一个算法，在输入规模趋向于无穷大时，其执行时间与某个函数的比值的极限存在且为非零常数，该函数即为该算法的时间复杂度所对应的
贪心策略在每一步选择中都采取当前状态下的最优决策，期望通过局部最优解来达到全局最优解，它不考虑整体问题的所有可能情况，而是基于当前
抽象数据类型是对数据及操作进行抽象描述的概念
操作效率的特点是在特定操作过程中体现出的关于完成操作的速度、资源利用程度、流程顺畅性及准确性等方面的特性
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在执行过程中所需的额外空间随输入规模增长的变化情况
算法效率指算法执行时间和占用资源随问题规模变化情况
图的顶点是图结构中的基本元素，它可以代表各种实体，并且与其他顶点通过边相互连接从而构成图的结构
数据类型定义的核心概念是对数据的种类及操作的规定
具有无序性，集合中的元素没有顺序之分
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题形式相同，分别求解这些子问题，然后将
图的边的核心性质是连接图中两个顶点且具有方向或无方向等相关特性从而构成图的结构关系并用于描述图中顶点之间的关联
堆是一种特殊的数据结构，它是一个完全二叉树，并且每个节点的值都大于或等于其子节点的值（大顶堆）或小于或等于其子节点的值（小顶
堆是一种特殊的数据结构，其核心特征为：它是一个完全二叉树，并且每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值
动态规划入门的特点的核心性质是通过将问题分解为相互重叠的子问题，利用子问题的解来避免重复计算，从而高效地解决复杂问题
算法效率的定义的核心性质是指算法执行时间随输入规模增长的变化情况以及算法所占用的空间资源随输入规模增长的变化情况
矩阵中元素的值表示对应顶点之间
贪心策略每步选局部最优期望达整体最优
分治策略是将问题分解为子问题求解再合并结果
堆是一种特殊的数据结构，它满足父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值这一核心性质
图的顶点是图结构中的基本元素，具有标识图中各个对象或实体的作用，是图中边所连接的对象，通过顶点及其之间的边共同构成图的
贪心策略是指在对问题求解时，总是做出在当前看来是最好的选择，即不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优
图的边的核心性质是连接图中两个顶点且具有特定的方向或权重等特征从而构成图的结构关系以表示各种实际或抽象的连接关系
抽象数据类型的核心性质包括有定义良好的一组数据值、定义在这些数据值上的一组操作以及这些操作所遵循的语义规则
算法效率的特点是指算法执行时间随问题规模增长的变化情况以及算法执行过程中所需的额外空间随问题规模增长的变化情况等方面所呈现出的特性
比较相邻元素大小，将较大元素逐步交换到右侧
分治策略是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题形式相同，递归地解这些子问题，
动态规划入门是一种通过把原问题分解为相对简单的子问题，并保存子问题的解避免重复计算，从而解决复杂问题的算法策略
穷举法是一种通过对所有可能的情况进行逐一列举和检验，从而找出满足特定条件的解决方案的数据处理方法
时间复杂度是一个函数，它定量描述了该算法的运行时间，其核心性质为算法执行时间的增长趋势与输入规模的某个函数的增长趋势一致，用于衡量随着
分治策略是将一个规模为N的问题分解为K个规模较小的子问题，这些子问题相互独立且与原问题性质相同，通过递归地解决这些子问题
图的边是连接图中两个顶点的关系或线条
在树形结构中，对于某一节点而言，直接位于其上方且与该节点通过特定关系（如树形结构所定义的父子关系）相连的节点就是它的父节点
有向图的核心特征是其边具有方向性，即从一个顶点指向另一个顶点，这种方向性决定了图中顶点之间的连接关系存在特定的指向性，与无
栈是一种后进先出的数据结构，其操作主要集中在栈顶，元素按照进入的相反顺序被取出
图由顶点及顶点间边构成的一种数据结构
操作效率特点核心概念是单位时间内完成操作的情况
引用的核心特征是为对象起一个别名，使得该别名与被引用的对象绑定，对别名的操作等同于对被引用对象的操作
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样一趟
从起始节点出发沿一条路径深入探索直到无法继续再回溯
抽象数据类型具有数据抽象和行为抽象两个核心特征，数据抽象是指将数据对象的表示和实现细节隐藏起来，只对外提供抽象的接口，行为抽象是指定义
路径的核心特征是在某个空间或系统中，从一个起始点出发，按照一定的规则或方向，连续地经过一系列的中间点，最终到达一个终点，所形成
路径是连接起点与终点具有特定走向的路线
栈是后进先出的线性数据结构
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度它反映了算法在执行过程中所需的额外空间随问题规模增长的变化情况
空间复杂度指算法运行中所需的存储空间随输入规模变化情况
算法效率是指算法执行所消耗的时间和空间资源的量度反映出算法处理问题的速度和对系统资源的利用程度
子节点是树结构中直接被某一节点所连接且处于其下一层级的节点
无向图的核心特征是其边没有方向，即任意两个顶点之间的边是双向的，顶点之间的连接关系是对称的
引用是给已存在对象起的一个别名，二者共享内存
时间复杂度是衡量算法执行时间随输入规模增长而变化的函数，它反映了算法执行时间与输入规模之间的渐近关系，体现了算法效率随问题规模增大时的
树的度是指一棵树中，所有结点的度的最大值
父节点是在树形结构中直接位于某个节点之上的节点，具有比该节点更高的层级且与该节点存在直接的父子关系，能通过特定的树形结构关系唯一
数据类型定义指数据的种类及表示与操作方式
稳定性核心概念是系统在干扰下保持特定状态的特性
父节点的核心特征是在树形结构等相关数据结构中，对于某一节点而言，直接位于其上方且与该节点存在特定关系（如在层次关系上具有直接
有向图中边具有方向，顶点间关系有特定指向
分治策略的核心特征是将一个规模较大的问题分解为若干个规模较小的子问题，这些子问题相互独立且与原问题性质相同，分别对这些子问题
递归基础具有明确的终止条件且能直接给出简单情况下的结果这一核心性质
图是由顶点集和顶点间的边集组成的数据结构其中顶点是数据元素边是顶点之间的关系
数据类型定义的核心性质包括具有特定的值集以及定义在这些值上的一组操作
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，其核心特征在于描述算法执行期间所需的额外空间随输入规模增长的变化情况
引用的核心特征是在文本中提及其他已存在的内容，将其引入以增强表达效果、提供支持依据、丰富文本内涵等，通过特定的方式明确指出所引用
简单排序具有比较和交换元素以逐步将无序序列转化为有序序列的特点且其过程相对直观和易于理解
引用是一种给已存在的变量起别名的机制，通过引用可以使用与该变量相同的内存位置，对引用的操作等同于对其关联变量的操作
贪心策略是在对问题求解时，总是做出当前看来是最好的选择
树中所有结点的度的最大值就是树的度其核心特征在于它反映了树中各结点分支数目的最大情况体现了树结构的复杂程度
操作效率的特点的核心特征是在一定时间内完成特定操作的速度与质量的综合体现，它反映了系统或个体在执行任务时的快速响应能力、资源利用
时间复杂度是衡量算法执行时间随输入规模增长的变化
时间复杂度的核心特征是反映算法执行时间随输入规模增长的变化趋势，体现了算法运行效率与输入规模之间的关系
有向图是由顶点和有方向的边组成的图结构
图由顶点集和边集组成顶点集中的元素为顶点边集中的元素为边且边是顶点的无序对或有序对并通过顶点与边的关联关系以及顶点
操作效率特点核心概念是反映操作快慢及效果的特性
算法效率的特点是指算法执行时间随问题规模增长的变化趋势以及算法执行过程中所需的空间资源随问题规模增长的变化情况等方面所呈现出的特性
完全二叉树的核心特征是：除最后一层外，每一层上的节点数均达到最大值
树是一种非线性的数据结构，它由n（n≥0）个有限节点组成，若n=0则为空树，若n>0则有且仅有一个特定的称为
比较相邻元素大小，大的往后排，重复此过程完成排序
稳定性特点核心概念是系统状态受干扰后恢复原状能力
图的边是连接图中两个顶点的元素用于表示顶点之间的关系其核心特征为是顶点间的连接且体现了顶点间的关联关系
算法效率的定义的核心特征是衡量算法执行时间和占用资源随输入规模增长的变化情况以体现算法优劣程度
在树结构中按特定规则确定元素是否存在的操作叫树的查找
抽象数据类型是数据值及操作的抽象描述
图的顶点的核心特征是它是图结构中的基本元素，用于表示图中的对象或实体，并且通过边与其他顶点相连以构成图的结构关系
回溯法基础的定义的核心性质是在问题的解空间树中按深度优先策略搜索，以找到问题的解，在搜索过程中，通过对部分解的可行性判断
图的边是连接图中两个顶点的元素用于表示顶点之间的关系其核心特征包括边具有两个端点分别与图中的两个顶点关联边描述了顶点之间的某种连接
图中可作为基本元素用于构建和描述图形结构的点是顶点
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中行和列分别对应图中的顶点，矩阵元素的值表示对应顶点之间是否有边相连（通常用0
操作效率是指在特定时间内完成特定操作的数量或质量与投入资源（包括时间、人力、物力等）之间的比率关系所反映出的操作的有效程度
将问题分解为子问题求解再合并以解决整体问题
操作效率是指在数据结构相关操作中，衡量完成特定任务所花费时间、占用资源等情况的综合指标体现了操作的快慢及资源利用的优劣程度
图的顶点是图结构中的基本元素，是构成图的节点，用于表示图中的某个实体或对象且与其他顶点通过边相连以构成图的结构
操作效率的定义的核心性质是单位时间内完成的有效操作数量、操作的准确性以及资源的合理利用情况等多方面因素综合考量的结果，它反映了系统或
树的查找是在给定的树结构中寻找特定元素的操作过程
算法效率的核心特征是在合理的时间和空间资源消耗下，能够快速且有效地解决特定问题，即在尽可能短的时间内完成计算任务并占用较少的存储空间以实现
路径是图中从一个顶点到另一个顶点的顶点序列且序列中相邻顶点之间存在边
分治策略是将一个规模较大的问题分解为若干个规模较小且相互独立的子问题，分别求解这些子问题，然后将子问题的解合并得到原问题的
迭代法是一种通过从一个初始估计出发，重复应用特定的计算规则逐步逼近问题精确解的方法其特点包括可利用前一步计算结果进行下一步计算、计算过程具有
路径是连接起点与终点的路线轨迹这一核心概念
图的边是连接图中顶点具有特定关系的线条
动态规划入门是一种通过将问题分解为相互重叠的子问题，求解每个子问题并记录其解，从而避免重复计算，以高效地解决复杂优化问题的方法，
时间复杂度的核心特征是衡量算法执行时间随输入规模增长的变化趋势，反映算法执行时间与输入规模之间的关系
抽象数据类型的定义的核心特征是由数据对象、数据对象上的关系以及定义在这些数据对象和关系上的操作组成
邻接矩阵是用矩阵表示图中顶点间相邻关系的数据结构
在树形数据结构中，对于某一节点而言，直接连接该节点且位于其上方层次的节点就是该节点的父节点
互异性是指集合中的元素互不
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否存在边以及边的相关属性（如权值等）
父节点的核心特征是在树形结构等相关数据结构中，对于某个特定节点而言，其直接处于该节点之上一层的节点所具有的关键特性，这些特性对于理解
冒泡排序的核心特征是比较相邻元素大小，若顺序错误就把它们交换过来，对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，
动态规划入门是一种用于求解具有重叠子问题和最优子结构性质的问题的算法策略，通过保存已解决子问题的解来避免重复计算以高效得出最优解
图的顶点的核心特征是在图结构中作为基本元素存在，用于标识和连接图中的各个部分，通过与边的关联来构成图的拓扑结构，并且具有唯一
简单排序的核心性质是通过比较和交换元素位置将无序序列逐步转换为有序序列且每次操作都基于相邻元素或特定元素间比较交换以实现整体有序
交换排序通过元素比较与交换来实现有序排列
引用是一种给变量起别名的机制，使得该别名与原名共享同一内存地址，对别名的操作等同于对原名的操作
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而解决复杂问题的算法策略
图中参与构成边且具有特定标识和属性的基本元素
操作效率是指在数据结构相关操作中，衡量算法或程序完成特定任务所需时间、空间等资源消耗情况以及达成预期结果的能力的综合指标
动态规划入门的特点是通过将问题分解为相互重叠的子问题并记录子问题的解，从而以自底向上或自顶向下带备忘的方式高效求解复杂问题
在树形数据结构中，对于某一节点而言，其直接上层连接的节点即为该节点的父节点
将问题分解为子问题求解再合并得到原问题解
引用是为对象起的别名，通过引用可操作原对象
图的顶点是图结构中的基本元素，它可以表示各种对象，并且通过边与其他顶点相连以构成图的结构
动态规划入门的特点的核心性质是将问题分解为相互重叠的子问题，通过求解子问题并记录其解，避免重复计算，从而高效地解决原问题
动态规划入门的特点的核心性质是通过将问题分解为重叠子问题并利用子问题的解来避免重复计算从而高效求解问题
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过对这些子问题的求解，最终合并得到原问题的解
子节点的核心特征是在树形结构等相关结构中，直接与某个特定节点相连且处于该节点下方层次的节点所具有的区别于其他节点的关键特性，这些
抽象数据类型是一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，将数据的表示和操作的实现细节封装起来
集合具有确定性互异性无序性这三个特点
算法效率是指算法执行所需要的时间和空间资源，时间效率通过算法执行基本操作的次数来衡量，空间效率通过算法执行过程中所需的额外空间来衡量
分治策略是将一个规模较大的问题分解为若干个规模较小的子问题，通过求解这些子问题，然后合并子问题的解来得到原问题的解
无向图中任意两个顶点之间的边没有方向，顶点之间的连接关系是对称的
动态规划入门是通过分解问题记录子问题解以求解复杂问题
递归基础的核心特征是存在一个或多个初始情况或边界条件，在这些情况下递归函数可以直接返回一个确定的结果而无需进一步调用自身
时间复杂度是指在计算机科学中，算法执行时间随问题规模增长的变化趋势，用大O符号表示的函数来描述算法执行时间的上界
图的边是连接图中两个顶点的元素用于表示顶点之间的关系
操作效率的核心性质是在给定资源和条件下能够以最少的时间、精力或资源消耗来完成特定任务或达到预期目标
抽象数据类型定义的核心特征是由数据对象、数据对象上的关系以及定义在这些数据对象和关系上的操作组成
图的边的核心性质是连接图中两个顶点且具有方向性或无方向性的元素，其存在与否决定了图的结构和连通性等相关特性
时间复杂度是指在计算机科学中，对于一个算法，随着输入规模的不断增大，算法执行时间的增长趋势所对应的数学函数的渐进上界
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否有边相连及边的相关属性（如权重等，若为无权
时间复杂度是一个函数，它定性描述了该算法的运行时间，其核心特征为算法执行时间随问题规模增长的变化趋势，体现了随着输入规模不断增大，算法
动态规划入门是通过分解问题、记录子问题解来求解最优解
动态规划入门是一种通过把原问题分解为相对简单的子问题，求解子问题并保存其解，从而避免重复计算以高效解决复杂问题的算法策略
动态规划入门是一种通过把原问题分解为相对简单的子问题，求解子问题并保存其解，从而避免重复计算，最终高效解决复杂问题的算法策略
操作效率定义的核心特征是以单位时间内完成的有效操作数量或完成一定数量有效操作所需的时间来衡量，体现操作在时间维度上的快慢程度以及资源利用的
树的度是树内各节点度的最大值反映树分支情况
邻接矩阵是表示图的一种方式，其特点的核心特征包括：是一个方阵，矩阵的行数和列数等于图中顶点的个数
抽象数据类型定义的核心性质包括数据对象集、数据关系集以及定义在数据对象集和数据关系集上的基本操作集
贪心策略是指在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部最优解
算法效率的核心特征是在合理时间内处理大规模数据时，算法执行操作的数量与输入规模之间的关系，它反映了算法随着输入规模增加而执行时间增长的
树结构中位于顶层、没有前驱的起始节点就是根节点
无序性即集合中的元素没有顺序之分
迭代法是一种通过从一个初始估计出发，重复使用相同的计算步骤，逐步逼近问题精确解的方法其核心性质包括能从初始值开始不断按照固定规则更新近似
矩阵中元素的值表示对应顶点
图中参与边的连接从而构成图结构的基本元素是顶点
操作效率的特点是指在完成特定任务或一系列操作过程中所展现出的关于速度、准确性、资源利用程度以及时间与产出关系等方面的特性
图的边的核心性质是连接图中两个顶点且具有方向或无方向的关系，其决定了顶点之间的连通性和图的结构特征
数据类型是对数据的种类及存储方式等的规定
操作效率特点核心概念是单位时间完成操作量及速度等
空间复杂度是算法运行中所需额外空间随输入规模变化情况
操作效率的特点的核心性质是在特定条件下衡量完成某项操作所需资源（如时间、计算能力等）的多少以及操作过程的流畅程度等，不同操作的效率
树是n（n≥0）个节点的有限集，有根且关系唯一
稳定性的特点的核心性质是在一定条件下系统或物体能够保持其原有状态或特性不发生显著变化
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解或最优解的方法其核心特征是对问题的所有可能情况进行
集合是具有某种特定性质的具体或抽象对象汇总
引用是对其他对象的一种引用性关联以使用其资源
栈的核心性质是后进先出，即最后进入栈的元素最先离开栈
路径是图中顶点与顶点之间经过边的有序序列，具有起点和终点，且相邻顶点之间通过边相连，是连接图中不同顶点的一种有序通路
图中参与构成边且具有某种关系的基本元素是顶点
数据类型的特点的核心特征包括具有特定的数据表示形式、定义了一组操作以及规定了数据的取值范围
图的边是连接图中顶点的线表示顶点间关系
无向图中边没有方向，顶点间关系对称
算法效率的特点是指算法执行时间随问题规模增长的变化趋势及所需资源消耗情况等特性
路径是连接起点与终点的一系列点或步骤的序列
堆是一种特殊的数据结构，它是一个完全二叉树，并且满足堆中每个节点的值都大于或等于其子节点的值（大顶堆），或者每个节点的值都小于
在树形结构中直接位于某节点之上的节点即父节点
稳定性的核心性质是对于输入数据中的相等元素，在经过算法处理后，它们的相对顺序保持不变
互异性指集合中的元素互不相同
操作效率是指在一定时间内完成特定操作任务的速度和质量的综合体现
图的边是连接图中两个顶点的元素其核心性质是具有两个端点且明确关联着图中的两个顶点从而在顶点间建立起一种连接关系
邻接矩阵是用于表示图的一种矩阵，其核心特征为对于有n个顶点的图，矩阵是n阶方阵，若两顶点相邻则对应位置元素为1否则
操作效率指单位时间内完成操作的数量与质量综合表现
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况体现了算法执行时间与输入规模之间的渐近关系反映了算法效率
加权图是顶点和边均被赋予权重的图结构
树是一种分层结构有根且子节点唯一或多的非线性数据结构
完全二叉树除最后一层外，每一层上的节点数均达到最大值，最后一层上只缺少右边的若干节点
图由顶点及顶点间边构成，可直观表达关系
非线性结构的核心性质是存在一对多或多对多的关系，其元素之间的逻辑关系不再是简单的线性顺序关系
穷举法是对问题所有可能的情况进行逐一列举和检验，从而找出符合条件的解的方法其核心性质是对问题的全部可能情况进行无遗漏的列举并
引用是一种给已存在对象起别名的机制，其特点包括与被引用对象绑定后具有相同内存地址，对引用的操作等同于对被引用对象的操作，且定义
抽象数据类型是数据值及相关操作的数学模型
存储结构核心概念是数据及其关系在存储器的表示
操作效率的核心性质是在一定条件下以尽可能少的资源消耗和尽可能短的时间来完成特定操作并达到预期效果
空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度其核心性质为算法运行时所需的额外空间大小与输入规模之间的关系体现算法在空间方面
抽象数据类型具有数据封装性，将数据和操作数据的方法封装在一起
操作效率的特点的核心性质包括在相同条件下完成特定任务所需时间越少效率越高、资源消耗越少效率越高、单位时间内完成的有效工作量越多效率越高以及操作流程
有向图是由顶点集和有向边集组成，其中有向边是顶点的有序对，每条有向边都有明确的方向
动态规划入门的核心特征是以解决最优子结构问题为目标，通过将问题分解为相互重叠的子问题，保存子问题的解以避免重复计算，从而高效地求解
归并排序将序列分治后合并，保证有序性
简单排序的特点的核心性质是比较和交换元素位置以将无序序列转换为有序序列
贪心策略的核心性质是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，它所做出的仅是在某种意义上的局部
稳定性的特点的核心特征是在数据结构发生变化时，某些性质或关系能够保持不变
树中各节点度的最大值就是树的度
动态规划入门是一种通过把原问题分解为相对简单的子问题，保存子问题的解避免重复计算，从而解决复杂问题并求得最优解的算法策略
加权图是每条边都被赋予一个数值权重的图
子节点是树结构中直接连接在某一节点之下的节点
图的顶点是图结构中的基本元素，具有标识图中各个对象的作用且通过边与其他顶点相互连接以构成图的结构关系
用矩阵表示图中顶点间邻接关系的是邻接矩阵核心概念
算法运行过程中所需的最大存储空间与数据规模的关系
动态规划入门的核心特征是将一个复杂问题分解为一系列相互关联的子问题，通过求解子问题并保存其解，避免重复计算，从而高效地解决原问题
将问题分解为子问题，分别解决后合并得到原问题解
回溯法基础的特点的核心性质是在问题的解空间树中按照深度优先策略进行搜索以找到问题的解，通过不断尝试和回退来探索所有可能的解
时间复杂度是指在计算机科学中，对于一个算法，随着输入规模的不断增大，算法执行时间的增长趋势与输入规模的某个函数之间的关系，它反映了算法
图的顶点是图结构中的基本元素，具有标识图中各个对象的作用，每个顶点都可以与其他顶点通过边建立连接关系，并且顶点之间的连接关系构成了
贪心策略的特点是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，所做出的仅是在某种意义上的局部最优解
树中所有结点的度的最大值就是树的度其核心特征是体现了树中各结点分支数目的最大情况以此来衡量树的复杂程度
栈是一种特殊的数据结构，其核心特征为后进先出，即最后进入栈中的元素会最先被取出，而最先进入栈中的元素则最后被取出
操作效率的核心特征是在单位时间内能够以最少的资源投入、最高的精准度和流畅性完成最多且高质量的操作任务，同时具备快速响应变化、灵活调整
集合是具有确定的元素且元素具有互异性无序性的整体
邻接矩阵是用于表示图的一种矩阵，其中行和列分别对应图中的顶点，矩阵元素表示对应顶点之间是否存在边，若存在则为1，不存在则为
子节点是树结构或图结构中与某个特定节点直接相连且处于其下一层级的节点
图的顶点是图结构中的基本元素，用于表示某个实体或对象，它具有标识性且能与图中的其他顶点通过边建立关联关系从而构成图的结构
操作效率的特点的核心特征包括能在规定时间内完成任务、资源利用高效、流程简洁顺畅、执行准确无误以及具备灵活性可根据实际情况调整以实现最优效果等
动态规划入门是一种通过将问题分解为子问题、记录子问题解并利用最优子结构性质以高效求解具有重叠子问题性质的复杂问题的方法
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，将数据的表示和操作的实现细节封装起来
堆是一种特殊的数据结构，其特点的核心性质为父节点的值大于或等于（大顶堆）或小于或等于（小顶堆）其子节点的值
将问题分解为子问题求解再合并得到原问题解的策略
图的顶点是图结构中具有特定标识且关联边的基本元素
路径是图中顶点与顶点之间经过边的序列
路径的核心性质是由一系列顶点和边组成且顶点与边交替出现并按顺序连接相邻顶点
抽象数据类型是指一个数学模型以及定义在该模型上的一组操作，它仅通过接口与外界交互，将数据的表示和操作的实现细节封装起来，强调数据
邻接矩阵是用于表示图的一种矩阵，其特点为对于有n个顶点的图，矩阵是n×n的，若顶点i到顶点j有边则矩阵中
栈是后进先出、操作受限的线性数据结构
稳定性是指在数据结构的操作过程中，相同关键字元素的相对位置在操作前后保持不变
空间复杂度是指算法运行过程中所需的额外空间大小
栈的核心特征是后进先出，即最后进入栈的元素会最先被取出，而最先进入栈的元素则最后被取出
堆的核心特征是对于堆中的每个节点，其值大于或等于其子节点的值（大顶堆），或者小于或等于其子节点的值（小顶堆）
图的顶点是图结构中的基本元素，是图中数据的存储单元，与其他顶点通过边相连用于表示图的结构关系
非线性结构中元素关系不满足线性顺序，存在一对多等情况
贪心策略在每一步选择中都采取当前最优决策
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化趋势体现出的算法执行时间特点
对于一个算法，存在一个函数T(n)，当输入规模为n时，在最坏情况下该算法执行基本操作的次数f(n)与T(n)同阶，即存在
引用是给已存在的对象起一个别名，使得对引用的操作等同于对其所引用对象的操作，其核心特征包括：与被引用对象绑定，通过引用访问和操作
图的边是连接图中两个顶点的线段或弧，它具有方向（有向边）或无方向（无向边），并且可能带有权重等属性用于描述顶点
图的边是连接图中两个顶点的线或弧表示的二元组
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图中各个顶点的信息，边表中存储与每个顶点相邻接
路径是图中顶点与顶点之间经过边的有序序列具有有向性或无向性且可能存在重复顶点和边的特点
引用是给已存在的变量起一个别名，通过该别名可以访问和操作原来的变量
操作效率是指在一定时间内完成的操作数量或质量与所投入资源（包括人力、物力、时间等）的比值所反映出的操作快慢及有效性程度
父节点的核心特征是在树形结构等相关数据结构中，对于某一节点而言，直接位于其上方且与该节点存在特定关系（如层级关系等）的节点
集合是由确定的、互不相同的元素所组成的整体
树是一种分层数据结构由节点和边组成且有根节点
操作效率是指在数据结构相关操作中，衡量完成特定任务所需时间、空间等资源消耗情况以及操作执行速度等综合表现的指标
穷举法是一种通过对问题所有可能情况逐一进行检验，从而找出符合条件的解的解题方法
穷举法是一种通过对问题所有可能的情况进行逐一列举和检验，从而找出满足条件的解的解题方法
邻接矩阵是用于表示图中顶点之间相邻关系的矩阵，其中矩阵元素的值表示对应顶点之间是否有边相连及边的相关属性（如权值等）
时间复杂度是一个函数，它定量描述了该算法的运行时间随输入规模增长而增长的变化情况，反映了算法执行时间与问题规模之间的关系特点
子节点是树结构中某个节点直接连接的下一层节点
贪心策略是在对问题求解时，总是做出在当前看来是最好的选择，不从整体最优上加以考虑，只期望通过局部最优解来达到全局最优解
图由顶点及顶点间边构成，可表示多对多关系
迭代法是通过重复步骤从初值逐步逼近问题解的方法
抽象数据类型的定义具有数据对象、数据关系以及基本操作这三个核心性质
递归基础是递归函数中最简单情况的定义及处理
栈是后进先出、操作受限且仅在一端进行的线性表
图的顶点是图结构中的基本元素，具有标识图中各个节点的作用，通过边与其他顶点相连，共同构成图的拓扑结构，顶点之间的连接关系决定了
引用的核心性质是其为对象的别名，对引用的操作会直接作用于其所绑定的对象
动态规划入门是一种通过将问题分解为相互重叠的子问题并存储子问题的解以避免重复计算从而高效解决复杂问题的方法
交换排序是通过比较和交换元素位置，将无序序列逐步转换为有序序列，核心性质是比较相邻元素大小，若顺序错误就把它们交换过来，不断重复此过程
图的边是连接图中两个顶点的元素它表示顶点之间的某种关系且一条边明确关联着两个特定的顶点
操作效率的特点是指在完成特定任务或一系列操作过程中所展现出的关于速度、准确性、资源利用等方面的特性表现
树中各节点度的最大值就是树的度，它反映了树中节点分支数的最大情况，体现了树的复杂程度和结构特征
算法效率的核心性质是指算法执行时间随问题规模增长的变化情况以及算法执行过程中所需的额外空间随问题规模增长的变化情况
简单排序具有比较和交换元素以逐步将无序序列转变为有序序列的特点
数据类型是对数据的种类及操作方式的规定
若它
迭代法通过重复执行步骤逐步逼近问题的解
（但
图的边是连接图中两个顶点的线或关系，它具有特定的属性如权重等（具体属性依图的类型而定），用于描述顶点之间的连接情况和
队列是一种先进先出、按顺序操作的数据结构
无向图是由顶点集和边集组成，边集中的边是顶点的无序对且顶点集不能为空边集可以为空
存储结构特点指数据在存储器中存储方式及相互关系
空间复杂度是算法运行中所需的额外空间随输入规模变化情况
图的顶点是图结构中具有特定标识和关联关系的基本元素
深度优先搜索是按深度依次探索节点直至无法继续的搜索策略
图的边是连接图中两个顶点的线或弧，它描述了顶点之间的关系且具有一定的属性（如权重等）
图的边是连接图中两个顶点的线，它可以是有向的表示从一个顶点到另一个顶点的单向关系也可以是无向的表示两个顶点之间的
路径的核心特征是其能够在某个空间或结构中明确地标识出从一个起始点到一个终点的连续轨迹或通道，具有方向性且能反映出从起点到终点
对于一个算法，其时间复杂度是指在输入规模不断变化时，算法执行时间随输入规模增长的变化趋势，它反映了算法执行时间随输入规模增长的渐近上
图是由顶点集和顶点间的边集组成的数据结构，其中顶点是图中的数据元素，边是顶点之间的关系
引用是一种给已存在的对象起别名的机制，通过引用可以使用该对象而无需额外的间接访问操作，它本质上是对象的一个替代名称，使得在代码
空间复杂度的核心特征是衡量算法在运行过程中所需的额外空间随输入规模增长的变化情况
除最后一个元素外，每个元素有且
在树形结构中，对于某一节点而言，其直接上层的节点即为该节点的父节点