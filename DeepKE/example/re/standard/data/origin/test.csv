sentence,relation,head,tail,head_offset,tail_offset
插入排序的核心性质是将未排序数据插入到已排序序列的合适位置，通过依次对数组中的元素进行操作，使得数组逐渐有序,belg,插入排序,排序,0,12
完全二叉树是深度为k的二叉树，除第k层外，其余各层的节点数都达到最大值，且第k层的节点都集中在该层最左边,b-belg,完全二叉树,二叉树,0,11
有向图是一种图结构，其中边具有方向，即从一个顶点指向另一个顶点，这是有向图区别于无向图的核心特征，在有向图,b-belg,有向图,图,0,6
树的深度是从根节点到最远叶子节点所经过的最长简单路径上的节点数，它反映了树在垂直方向上的层次结构特征，体现了树中节点,rely,树的深度,根节点,0,6
数组是存储相同类型数据的有序集合且内存连续,b-belg,数组,集合,0,14
归并排序是将数组分成子数组排序后再合并的排序方法,rely,归并排序,数组,0,6
映射是一种具有特定对应关系的数据结构特点，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,rely,映射,集合,0,23
哈希表通过哈希函数将键映射到地址以快速存取数据,rely,哈希表,哈希函数,0,5
广度优先搜索按层次依次扩展节点先访问距离起始点近的,rely,广度优先搜索,访问,0,16
将未排序数据插入已排序序列的合适位置进行排序,rely,排序,插入,2,6
树的深度是从根节点到最远叶子节点的最长路径长度,rely,树的深度,根节点,0,6
存储结构核心概念是数据元素及其关系的存储方式,rely,存储结构,数据元素,0,9
树的节点的核心性质包括每个节点有零个或多个子节点，有且仅有一个称为根的节点，除根节点外每个节点有且仅有一个父节点,belg,树的节点,子节点,0,21
队列的核心特征是先进先出即元素按照进入队列的先后顺序依次从队列中取出排在前面的元素先出队排在后面的元素后出队,syno,队列,队列,0,19
二叉搜索树的特点是对于树中的每个节点，其左子树中的所有节点值均小于该节点值，右子树中的所有节点值均大于该节点值，且,belg,二叉搜索树,左子树,0,20
广度优先搜索是一种从起始节点开始，按照层次依次访问节点，先访问距离起始节点近的节点，直至遍历完所有可达节点的搜索算法,rely,广度优先搜索,访问,0,23
回路是图中一条至少包含一条边且起点和终点相同的路径,b-belg,回路,路径,0,23
二分查找是在有序数组中通过不断折半查找目标值,rely,二分查找,数组,0,8
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,b-attr,数组,数据类型,0,12
回路是在图中从一个顶点出发，沿着边连续移动，最终回到起始顶点且路径中顶点不重复（除起始顶点）的路径,b-belg,回路,路径,0,31
数据逻辑结构是数据元素间逻辑关系的整体,belg,逻辑结构,数据元素,2,7
回溯法是按选优条件深度优先搜索解空间来求解问题,rely,回溯法,深度优先搜索,0,9
图的边是连接图中两个顶点的线其具有方向或无方向且有权值或无权值不同类型的图边的具体特点根据图的类型如无向图边,belg,图的边,无向图,0,50
比较排序通过元素间比较确定其相对顺序来进行排序,rely,比较排序,排序,0,21
加权图是一种图结构，其中每条边都被赋予一个数值作为权值，这些权值可以表示诸如距离、成本、容量等具有实际意义的量,b-belg,加权图,图,0,6
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,belg,选择排序,排序,0,10
完全二叉树是一种特殊的二叉树，其除了最后一层外，每一层上的节点数都是满的，并且最后一层上的节点都集中在最左边的若干,b-belg,完全二叉树,二叉树,0,11
在有序数组中通过不断折半比较查找目标元素,rely,数组,查找,3,14
双向链表是每个节点有前驱和后继指针的链表结构,belg,双向链表,指针,0,15
二叉树是一种树形结构，其每个节点最多有两个子节点，分别称为左子节点和右子节点，并且二叉树可以为空树,belg,二叉树,子节点,0,21
二叉搜索树是一棵空树或者是具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,b-belg,二叉搜索树,二叉树,0,20
二叉树是一种每个节点最多有两个子节点的树形数据结构,belg,二叉树,子节点,0,15
完全二叉树是深度为k的有n个结点的二叉树，对于树中的每个结点，如果其编号i满足1≤i≤n，则其左子结点编号为2i,b-belg,完全二叉树,二叉树,0,17
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可随机访问元素、存储密度高但插入和删除操作效率低等特点,none,访问,插入,28,39
邻接矩阵是表示图的一种矩阵，其中矩阵元素的值表示图中顶点之间是否存在边以及边的相关信息（如权值等），对于无向图其邻,none,邻接矩阵,无向图,0,52
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,b-belg,链表,存储结构,0,20
完全二叉树是若设二叉树的高度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h,b-belg,完全二叉树,二叉树,0,8
二叉搜索树是一棵空树或者具有下列性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,b-belg,二叉搜索树,二叉树,0,19
数组是由相同类型的数据元素按一定顺序排列而成的有限序列，这些元素存储在连续的内存空间中，可通过下标来唯一标识每个元素,belg,数组,数据元素,0,9
二叉树是一种每个节点最多有两个子树的树形结构,belg,二叉树,子树,0,15
连通图中任意两个顶点之间都存在路径,rely,连通图,路径,0,15
无向图是一种图结构，由顶点集合和边集合组成，其中边是没有方向的，即边所连接的两个顶点之间的关系是对称的，不存在从一个,b-belg,无向图,图,0,6
操作效率是指在数据结构中进行特定操作（如插入、删除、查找等）时所花费的时间或资源与该操作的规模（如数据量大小等）之间,rely,操作效率,插入,0,20
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,b-belg,满二叉树,二叉树,0,24
线性结构中数据元素存在一对一的线性关系,belg,线性结构,数据元素,0,5
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图，路径是有向边的序列），序列中顶点相邻且边存在（对于有向,none,路径,有向图,0,24
深度优先搜索按深度推进探索，优先往深处扩展路径,rely,深度优先搜索,路径,0,21
二叉树遍历是按照特定规则访问二叉树中所有节点，前序遍历先访问根节点再递归访问左子树和右子树，中序遍历先递归访问左子,rely,二叉树,遍历,0,3
根节点是树结构中位于顶端没有父节点的节点,none,根节点,父节点,0,14
子节点是树结构中直接连接在父节点之下的节点,belg,子节点,父节点,0,13
选择基准分治递归将数组按基准值划分为两部分排序,rely,递归,数组,6,9
二叉搜索树中每个节点左子树值小于该节点右子树值,belg,二叉搜索树,左子树,0,10
二叉树遍历是按特定顺序访问二叉树中所有节点,rely,二叉树,遍历,0,3
顺序查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或遍历完整个线性表,rely,顺序查找,线性表,0,6
双向链表是节点含前驱和后继指针的链表结构,belg,双向链表,指针,0,13
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,b-belg,完全二叉树,二叉树,0,17
连通图中任意两点之间都存在路径可相互连通,rely,连通图,路径,0,13
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,rely,映射,集合,0,6
图的顶点是图结构中的基本元素，是构成图的节点，用于表示图中的对象或实体，在有向图中顶点有入度和出度，在无向,belg,图的顶点,有向图,0,37
栈是一种后进先出的数据结构，其核心性质为元素的插入和删除操作都在栈顶进行，新元素入栈后成为栈顶元素，而栈顶元素出,none,插入,删除,23,26
满二叉树是深度为k且有2的k次方减1个节点的二叉树其中每一层上的节点数都达到最大值即该层节点数等于2的（该,b-belg,满二叉树,二叉树,0,22
二叉树是一种每个节点最多有两个子树的树形结构,belg,二叉树,子树,0,15
树中各节点度的最大值就是树的度，它反映了树中节点分支情况的一个关键特性，树的度决定了树的结构复杂程度以及在相关算法和,syno,树的度,树的度,12,36
冒泡排序是一种比较相邻元素大小并在需要时交换位置，将最大（或最小）元素逐步“冒泡”到数组末尾（或开头）的排序算法,rely,冒泡排序,数组,0,42
叶子节点是指在树状数据结构中没有子节点的节点,b-belg,叶子节点,子节点,0,16
图的边是连接图中两个顶点的线或弧其表示顶点之间的某种关系并且在有向图中边具有方向无向图中边无方向且边可能具有,belg,图的边,有向图,0,31
线性结构中数据元素存在一对一的线性关系,belg,线性结构,数据元素,0,5
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来访问和操作每个元素,b-attr,数组,数据类型,0,12
二叉搜索树中任意节点的左子树中的所有节点的值均小于该节点的值且右子树中的所有节点的值均大于该节点的值,belg,二叉搜索树,左子树,0,11
广度优先搜索按层次依次扩展节点以遍历图或树结构,rely,广度优先搜索,遍历,0,16
子节点是树结构中直接位于某一节点下方的节点，具有与父节点存在直接层次关系且处于父节点下一层级的核心性质,belg,子节点,父节点,0,25
完全二叉树是一种特殊的二叉树，其特点是除了最后一层外，每一层上的节点数都是满的，并且最后一层上的节点都集中在该层,b-belg,完全二叉树,二叉树,0,11
顺序查找是从线性表的一端开始，依次将表中元素与给定值进行比较，若找到则返回该元素的位置，若遍历完整个表仍未找到则返回,rely,顺序查找,线性表,0,6
叶子节点是树结构中没有子节点的节点,b-belg,叶子节点,子节点,0,11
堆排序是一种基于堆数据结构的排序算法，它将待排序数据构建成一个堆，通过不断取出堆顶元素并调整堆结构来实现排序,rely,堆排序,堆,0,8
双向链表是节点含前驱和后继指针的链表结构,belg,双向链表,指针,0,13
按顺序逐个检查元素以查找目标元素的查找方式,none,查找,查找,10,17
连通图是指在无向图中，任意两个顶点之间都存在路径相通，或者在有向图中，对于每一对顶点u和v，都存在一条从u到,b-belg,连通图,无向图,0,6
树的高度是从根节点到最远叶节点的最长路径长度,rely,树的高度,根节点,0,6
树中没有子节点的节点就是叶子节点,b-belg,子节点,叶子节点,4,12
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，并且与数据的运算无关，只关注数据元素之间的关联方式,rely,逻辑结构,数据元素,3,9
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个单链表，链表中的节点表示与该顶点相邻接的其他顶点,belg,邻接表,单链表,0,32
路径是图中从一个顶点到另一个顶点的顶点序列（对于有向图是有向顶点序列，对于无向图是无向顶点序列）且相邻顶点之间存在,belg,路径,有向图,0,24
二叉树遍历是按特定顺序访问其所有节点的操作,rely,二叉树,遍历,0,3
归并排序是将数组分治后合并有序子数组的排序算法,rely,归并排序,数组,0,6
邻接矩阵的核心性质是若图G有n个顶点，其邻接矩阵A中元素A[i][j]的值表示顶点i到顶点j是否有边相连，若,syno,邻接矩阵,邻接矩阵,0,20
顺序表具有逻辑上相邻的元素在物理存储位置上也相邻、可以随机访问元素、存储密度高但插入和删除操作效率低等特点,none,访问,插入,29,40
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,b-belg,平衡二叉树,排序,0,10
图的顶点是图结构中用于表示数据元素的节点,b-belg,图的顶点,数据元素,0,13
叶子节点是树结构中没有子节点的节点,b-belg,叶子节点,子节点,0,11
数组的核心性质是具有相同数据类型的一组数据元素，在内存中按顺序存储，通过下标来唯一标识和访问其中的元素,b-attr,数组,数据类型,0,12
连通图是任意两个顶点之间都存在路径的图,rely,连通图,路径,0,15
数组的核心特征是具有相同数据类型的一组数据元素，这些元素在内存中按顺序存储，可以通过下标来唯一地访问每个元素,b-attr,数组,数据类型,0,12
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图的顶点信息，边表中存储与每个顶点相邻接的顶点,rely,邻接表,图的顶点,0,34
循环链表是一种链表，其尾节点的指针指向头节点，使得链表形成一个环，从链表中的任意节点出发都可以遍历到链表中的其他节点,b-belg,循环链表,链表,0,7
树结构中没有子节点的节点就是叶子节点,none,子节点,叶子节点,6,14
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层上的节点数都达到最大值，即第i层有2^(,b-belg,满二叉树,二叉树,0,24
双向链表是一种数据结构，其每个节点包含数据元素以及指向其前一个节点和后一个节点的指针，通过这些指针可实现双向遍历,belg,双向链表,数据元素,0,19
映射是一种从集合A到集合B的对应关系，对于集合A中的每一个元素，在集合B中都有唯一的一个元素与之对应,rely,映射,集合,0,6
树的高度是从根节点到最远叶节点的最长路径上的节点数，体现了树在垂直方向上的延伸程度，不同类型的树其高度特点不同，完全,rely,树的高度,根节点,0,6
子节点是树结构或图结构中与父节点相对应的节点，其特点的核心特征包括：子节点是父节点的直接后继节点，在树结构中处于比,belg,子节点,父节点,0,13
堆排序基于堆结构，通过选择和交换实现数据排序,rely,堆排序,堆,0,5
线性表是零个或多个数据元素的有限序列,belg,线性表,数据元素,0,9
有向图是由顶点集和有向边集组成的一种图结构，其中有向边是顶点的有序对表示从一个顶点到另一个顶点的单向关系,b-belg,有向图,图,0,18
数据逻辑结构特点指数据元素间抽象关系不依赖存储,rely,逻辑结构,数据元素,2,9
树的节点有一个根节点，根节点没有前驱节点，除根节点外每个节点有且仅有一个前驱节点，每个节点可以有零个或多个后继节点,belg,树的节点,根节点,0,7
堆是一种完全二叉树，父节点键值大于或小于子节点,belg,完全二叉树,父节点,4,10
树中各节点度的最大值就是树的度树的度反映了树中节点分支情况的最大程度不同类型的树其度具有不同特点且度的大小影响树的,syno,树的度,树的度,12,15
平衡二叉树每个节点左右子树高度差绝对值不超1,belg,平衡二叉树,子树,0,11
双向链表是一种链表数据结构，其每个节点除了有指向下一个节点的指针外还有指向前一个节点的指针，从而可以双向遍历链表,b-belg,双向链表,链表,0,7
根节点是树结构中的一个特殊节点，它没有父节点，是树的起始点，树中的其他节点都直接或间接与根节点相连,none,根节点,父节点,0,19
树的查找的核心特征是从根节点开始，按照特定规则（如二叉排序树的左子树节点值小于根节点值、右子树节点值大于根节点值,rely,查找,根节点,2,11
无向图的核心特征是由顶点集合以及顶点之间的边集合组成，其中边是没有方向的，即顶点之间的连接是双向的,belg,无向图,集合,0,12
在图论中，回路是指从图中某一顶点出发，沿着边连续移动，经过若干个顶点后又回到该起始顶点且路径中各边互不相同的路径,belg,回路,路径,5,44
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,b-belg,链表,存储结构,0,20
非线性结构中数据元素之间的关系不满足线性关系,belg,非线性结构,数据元素,0,6
连通图是指图中任意两个顶点之间都存在路径相连的图,rely,连通图,路径,0,18
路径是图中从一个顶点到另一个顶点的顶点序列，具有有向图和无向图中路径的不同方向性特点且在不同图结构中有其特定的表示和,none,路径,有向图,0,24
交换排序通过比较与交换元素位置来实现排序,rely,交换排序,排序,0,18
无向图是一种图结构其中任意两个顶点之间的边没有方向即若顶点u和顶点v之间存在边则从u到v和从v到u是同一条边,b-belg,无向图,图,0,6
二叉树是每个节点最多有两个子树的树结构,belg,二叉树,子树,0,13
线性查找是从线性表的一端开始，依次将每个元素与要查找的关键字进行比较，直到找到匹配的元素或到达线性表末尾的查找方法,rely,查找,线性表,2,6
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,b-belg,链表,存储结构,0,20
递归基础的特点的核心特征是存在一个或多个明确的终止条件，当满足这些条件时递归不再继续，直接返回一个已知的简单结果,rely,递归基础,递归,0,36
链表是通过指针将节点连接起来形成的线性数据结构,rely,链表,指针,0,5
子节点是树结构中直接位于某一节点下方的节点，与父节点存在直接的层级关系且是父节点所连接的下一层级的节点,belg,子节点,父节点,0,23
线性结构中数据元素存在一对一的线性关系,belg,线性结构,数据元素,0,5
无向图是一种图结构其中任意两个顶点之间的边没有方向即若存在连接顶点u和顶点v的边则从u到v和从v到u是同一条,b-belg,无向图,图,0,6
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,b-belg,链表,存储结构,0,20
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，描述了数据元素之间的关联方式以及数据的组织形式,rely,逻辑结构,数据元素,3,9
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图的顶点信息，边表中存储与每个顶点相邻接的顶点,rely,邻接表,图的顶点,0,34
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,b-belg,平衡二叉树,排序,0,10
叶子节点是树结构中没有子节点的节点,b-belg,叶子节点,子节点,0,11
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任意节点出发都可以遍历整个链表,b-belg,循环链表,链表,0,7
简单排序具有比较和交换元素位置以逐步将无序序列转化为有序序列的特点其核心性质是通过多次比较和交换操作实现排序,b-belg,简单排序,排序,0,52
递归基础的核心特征是存在一个或多个明确的终止条件，在这些条件下递归过程不再继续调用自身而是直接返回一个确定的结果,rely,递归基础,递归,0,31
循环链表是一种链表，其尾节点的指针指向头节点，从而形成一个环形结构，使得从链表中的任何一个节点出发都可以遍历整个链表,b-belg,循环链表,链表,0,7
冒泡排序是一种比较相邻元素大小，若顺序错误就把它们交换过来，重复此步骤直到整个数组都被排序好的排序算法,rely,冒泡排序,数组,0,39
线性查找是从数据序列的第一个元素开始依次逐个与目标值进行比较，直到找到目标值或遍历完整个序列的查找方法,rely,查找,遍历,2,39
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,rely,回溯法,深度优先搜索,0,27
循环链表是一种链表，其尾节点的指针指向头节点，使得从链表中的任何一个节点出发都可以遍历整个链表形成一个环,b-belg,循环链表,链表,0,7
根节点是树结构中的一个特殊节点，它没有父节点，且是树中所有其他节点的祖先，树中的所有节点都直接或间接与根节点相连,none,根节点,父节点,0,19
堆排序是利用堆这种数据结构进行排序的算法,rely,堆排序,堆,0,6
树中没有前驱节点的节点即为根节点,none,前驱节点,根节点,4,13
邻接表是用链表存储图中顶点及邻接顶点信息的数据结构,belg,邻接表,链表,0,5
完全二叉树是深度为k的有n个结点的二叉树，对于树中的每个结点，如果其序号i满足1≤i≤n，且i>1时其父结点序号,b-belg,完全二叉树,二叉树,0,17
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,b-belg,链表,存储结构,0,20
满二叉树是一种二叉树，其每一层的节点数都达到最大值，即如果二叉树的深度为k，那么该满二叉树的节点总数为2^k -,b-belg,满二叉树,二叉树,0,7
广度优先搜索按层次依次扩展节点以遍历图或树结构,rely,广度优先搜索,遍历,0,16
归并排序的核心性质是将一个数组分成两个子数组分别进行排序，然后将排序好的子数组合并成一个有序的数组,rely,归并排序,数组,0,13
通过分治策略将数组分成两部分并递归排序,rely,数组,递归,7,15
数据结构中稳定性指排序前后相等元素相对位置不变,rely,稳定性,排序,5,9
图是由顶点集合及顶点间的关系集合组成的数据结构，顶点集合中的元素称为顶点，顶点间的关系集合描述了顶点之间的连接方式,none,集合,集合,5,14
回溯法是按选优条件深度优先搜索解空间树找可行解,rely,回溯法,深度优先搜索,0,9
邻接表是一种用于表示图的数据结构，它由顶点表和边表组成，顶点表中存储图的顶点信息，边表中存储与每个顶点相邻接的顶点,rely,邻接表,图的顶点,0,34
交换排序核心概念是通过比较交换元素位置来排序,belg,交换排序,排序,0,20
数据的物理结构是指数据在计算机存储空间中的存储方式包括数据元素的存储方式以及数据元素之间关系的存储方式,belg,物理结构,数据元素,3,27
邻接表是一种用于表示图的数据结构，它通过为图中的每个顶点建立一个链表，链表中的节点表示与该顶点相邻的顶点及其相关信息,belg,邻接表,链表,0,32
深度优先搜索按深度推进，优先探索一条路径到底,rely,深度优先搜索,路径,0,18
树的高度是从根节点到最远叶节点的最长简单路径长度,rely,树的高度,根节点,0,6
数据的物理结构是数据在计算机中的存储表示形式，其核心性质包括数据元素的存储方式以及数据元素之间关系的表示方法,belg,物理结构,数据元素,3,30
树的节点是树结构中的基本数据单元包含数据元素及指向其子节点的若干分支且根节点没有父节点叶节点没有子节点,belg,树的节点,数据元素,0,18
树的深度是从根节点到最远叶子节点的最长路径长度,rely,树的深度,根节点,0,6
存储结构的核心性质是数据元素及其关系在计算机存储器中的表示方式以及如何利用这种表示方式来高效地进行数据处理和操作,belg,存储结构,数据元素,0,10
二叉树遍历是按特定顺序访问二叉树中所有节点的操作,rely,二叉树,遍历,0,3
递归基础是递归算法中递归调用结束的条件即当满足特定条件时递归函数不再进行自身调用而是返回一个确定值,rely,递归基础,递归,0,5
平衡二叉树的核心性质是树上任一结点的左子树和右子树的高度差不超过1并且左子树和右子树都是一棵平衡二叉树,belg,平衡二叉树,左子树,0,18
连通图是指在无向图中，若任意两个顶点之间都存在路径能够相连，或者在有向图中，对于任意两个顶点u和v，既存在从u,b-belg,连通图,无向图,0,6
线性查找的核心特征是从数据序列的起始位置开始，依次逐个检查每个元素，直到找到目标元素或遍历完整个序列为止,rely,查找,遍历,2,43
在图中，从一个顶点出发，沿着边经过一些顶点后又回到该顶点的路径（路径中顶点不重复，除起点和终点相同）称为回路,none,路径,路径,29,32
邻接表中顶点表的每个节点包含顶点信息和指向边表的头指针，边表的每个节点包含邻接顶点信息和指向下一条边的指针，它可以,rely,邻接表,指针,0,25
数据的逻辑结构的特点是反映数据元素之间逻辑关系且与数据的存储无关包括集合结构线性结构树形结构图状结构等不同类型,rely,逻辑结构,数据元素,3,13
在树形结构中，若存在一个节点A，有另一个节点B通过特定的关系（如父子关系的连接规则）与A相连，且B到根节点的路径长度,rely,根节点,路径,50,54
队列是一种特殊的线性表，其特点是只允许在一端进行插入操作（队尾），而在另一端进行删除操作（队头），遵循先进先出的原则,b-belg,队列,线性表,0,8
映射是一种从集合A到集合B的对应关系，对于集合A中的任意一个元素，在集合B中都有唯一确定的元素与之对应,rely,映射,集合,0,6
完全二叉树是深度为k的有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,b-belg,完全二叉树,二叉树,0,17
递归基础具有明确的终止条件，是递归算法中最简单、最基本的情况，在此情况下递归直接返回一个确定的结果而不再继续调用自身,belg,递归基础,递归,0,15
栈是一种只能在一端进行插入和删除操作的特殊线性表，允许操作的一端称为栈顶，不允许操作的一端称为栈底,none,插入,删除,11,14
堆是一种特殊的数据结构，它满足父节点的值大于或小于其子节点的值（大顶堆或小顶堆），并且具有完全二叉树的形态,none,父节点,完全二叉树,15,45
平衡二叉树或者是一棵空树，或者是具有下列性质的二叉树：它的左子树和右子树都是平衡二叉树，且左子树和右子树,b-belg,平衡二叉树,二叉树,0,23
图中任意两点都存在路径相连的图是连通图,rely,路径,连通图,9,16
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,b-belg,完全二叉树,二叉树,0,18
回溯法基础的特点是在包含问题的所有解的解空间树中，按照深度优先搜索策略，从根节点出发搜索解空间树，当探索到某一节点时,rely,回溯法,深度优先搜索,0,27
根节点是树结构中没有父节点的唯一节点，它处于树的最顶端，是树整体结构的起始点，所有其他节点都直接或间接连接于根节点,none,根节点,父节点,0,10
深度优先搜索沿一条路径深入探索直至无法继续才回溯,rely,深度优先搜索,路径,0,9
堆排序是利用堆结构进行排序的算法,rely,堆排序,堆,0,6
连通图是指在无向图中任意两个顶点之间都存在路径，或者在有向图中对于每一对顶点u和v，都存在一条从u到v和从,rely,连通图,无向图,0,6
按顺序逐个查找数据元素直至找到目标元素的查找方法,rely,查找,数据元素,5,7
队列是一种特殊的线性表，它只允许在表的前端进行删除操作，而在表的后端进行插入操作，遵循先进先出的原则,b-belg,队列,线性表,0,8
指针是存储变量内存地址并可通过它访问该变量的变量,rely,指针,访问,0,16
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的线性表,b-belg,链表,存储结构,0,20
数据的逻辑结构是指数据元素之间的逻辑关系，它独立于数据的存储结构，仅考虑数据元素之间的抽象关系而不涉及具体的存储方式,rely,逻辑结构,数据元素,3,9
图的顶点是图结构中的基本数据元素，通常用来表示某个具体的实体或对象，在图中通过边与其他顶点相连接以构成图的结构关系,b-belg,图的顶点,数据元素,0,12
满二叉树是一种二叉树，其每一层上的节点数都达到最大值，即除最后一层无任何子节点外，每一层上的所有节点都有两个子节点,b-belg,满二叉树,二叉树,0,7
子节点是树结构或图结构中，直接连接在某一节点之下的节点，具有与父节点存在特定连接关系且处于其下层的特点,belg,子节点,父节点,0,31
树中没有子节点的节点就是叶子节点,b-belg,子节点,叶子节点,4,12
叶子节点是一棵树中没有子节点的节点,b-belg,叶子节点,子节点,0,11
树是一种有根节点且子节点具有层次关系的非线性结构,none,根节点,子节点,5,9
回路是在电路中电流能够循环流动的闭合路径,belg,回路,路径,0,18
数组是一种有序的数据集合，其中的元素具有相同的数据类型，通过下标来访问和修改元素，并且数组的大小在创建后通常是固定的,b-belg,数组,集合,0,10
二叉搜索树是一棵空树或者具有如下性质的二叉树：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值,b-belg,二叉搜索树,二叉树,0,19
线性结构中数据元素存在一对一的线性关系,belg,线性结构,数据元素,0,5
比较排序是一种排序算法，其核心特征是通过元素之间的比较来确定元素的相对顺序，从而将待排序序列转换为有序序列,b-belg,比较排序,排序,0,7
归并排序是将数组分治后合并有序子数组的排序算法,rely,归并排序,数组,0,6
堆是一种特殊数据结构，父节点键值大于或小于子节点,rely,父节点,子节点,11,21
满二叉树是一棵深度为k且有2^k - 1个节点的二叉树，其中每一层的节点数都达到了该层所能容纳的最大值,b-belg,满二叉树,二叉树,0,24
二叉搜索树是一棵空树或者具有如下性质的二叉树：若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值,b-belg,二叉搜索树,二叉树,0,19
链表是数据元素通过指针连接的线性存储结构,belg,链表,数据元素,0,3
平衡二叉树是左右子树高度差绝对值不超1的二叉排序树,belg,平衡二叉树,子树,0,8
图的顶点是图这种数据结构中组成图的基本元素之一，是图中用于表示某个对象或实体的节点，在有向图或无向图中具有标识作用,none,图的顶点,有向图,0,43
循环链表是一种特殊的链表，其尾节点的指针域指向头节点，从而形成一个环形结构，使得链表中的节点可以依次循环访问,b-belg,循环链表,链表,0,10
树的深度是从根节点到最远叶子节点的最长路径长度,rely,树的深度,根节点,0,6
哈希表通过哈希函数将键映射到特定位置存储数据,rely,哈希表,哈希函数,0,5
二叉树遍历是按特定顺序访问二叉树中所有节点,rely,二叉树,遍历,0,3
完全二叉树是深度为k的有n个结点的二叉树，对树中的结点按从上至下、从左到右的顺序进行编号，如果编号为i（1≤,b-belg,完全二叉树,二叉树,0,17
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其每一层的节点数都达到了该层所能容纳的最大值，即第i,b-belg,满二叉树,二叉树,0,22
在有序数组中通过不断折半查找目标元素的方法,rely,数组,查找,3,12
队列是一种特殊的线性表，它只允许在表的一端进行插入操作，而在另一端进行删除操作，具有先进先出的特性,b-belg,队列,线性表,0,8
交换排序是通过元素交换位置来实现排序的方法,rely,交换排序,排序,0,16
比较排序是一种排序算法，其核心特征是通过比较元素之间的大小关系来确定元素在排序序列中的位置从而实现排序,b-belg,比较排序,排序,0,7
图是由顶点集合及顶点间边的集合组成的数据结构,none,集合,集合,5,13
迭代法是一种通过从一个初始估计值开始，按照一定的迭代公式不断重复计算，逐步逼近问题精确解的数值计算方法,belg,迭代法,迭代,0,24
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的,b-belg,链表,存储结构,0,20
双向链表是节点包含前驱和后继指针的链表结构,belg,双向链表,指针,0,14
二叉树遍历是按照某种特定顺序访问二叉树中每个节点一次且仅一次，包括先序遍历（先访问根节点，再递归访问左子树和右子树）,rely,二叉树,遍历,0,3
二叉树是一种每个节点最多有两个子树的树形结构,belg,二叉树,子树,0,15
选择排序是每一趟从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完,belg,选择排序,排序,0,10
二叉树是一种每个节点最多有两个子树的树形结构,belg,二叉树,子树,0,15
有向图是一种由顶点集合及顶点间的有向边构成的图，其中每条边都有一个特定的方向，从一个顶点指向另一个顶点,belg,有向图,集合,0,9
队列是一种特殊的线性表，其特点是先进先出，即先进入队列的元素先出队列，它有队头和队尾，在队尾进行插入操作，,b-belg,队列,线性表,0,8
邻接矩阵是表示顶点之间相邻关系的矩阵，若图中有n个顶点，则邻接矩阵是一个n×n的方阵，对于无向图，矩阵中第i行,syno,邻接矩阵,邻接矩阵,0,29
邻接矩阵是表示图的一种方式，其特点包括：对于有向图，邻接矩阵中第i行第j列的元素值若为1表示从顶点i到,none,邻接矩阵,有向图,0,22
堆排序是利用堆结构特性进行排序的算法,rely,堆排序,堆,0,6
数据逻辑结构是数据元素间逻辑关系的整体,belg,逻辑结构,数据元素,2,7
二叉树遍历按特定顺序访问节点以全面了解结构,rely,二叉树,遍历,0,3
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,b-belg,平衡二叉树,排序,0,10
平衡二叉树是一种二叉排序树，其中每个节点的左子树和右子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树,b-belg,平衡二叉树,排序,0,10
邻接表以链表形式存储图中顶点及邻接关系,belg,邻接表,链表,0,4
完全二叉树是深度为k的具有n个结点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中编号从1至n的结点,b-belg,完全二叉树,二叉树,0,18
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其每一层上的节点数都达到最大值，即每一个节点要么有两个子,b-belg,满二叉树,二叉树,0,22
无向图是由顶点集和边集组成的一种图结构其中边集是顶点集的无序对集合且任意一条边连接两个顶点没有方向之分,b-belg,无向图,图,0,16
数组是存储相同类型数据的有序集合,b-belg,数组,集合,0,14
满二叉树是一棵深度为k且有2^k-1个节点的二叉树，其中每一层的节点数都达到最大值，即第i层有2^(i-,b-belg,满二叉树,二叉树,0,22
根节点是树结构中处于顶层无父节点的起始节点,none,根节点,父节点,0,13
顺序查找是从数据序列的一端开始，依次将每个元素与目标值进行比较，直到找到目标值或遍历完整个序列为止的查找方法,rely,顺序查找,遍历,0,40
